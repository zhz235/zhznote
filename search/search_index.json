{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to my notebook!","text":"<p>Great men are not born great, they grow great.</p> <p>\u2014\u2014\u300aThe Godfather\u300b</p>"},{"location":"#_1","title":"\u524d\u8a00","text":"<p>\u8fd9\u4e2a\u7ad9\u70b9\u7528\u6765\u53d1\u5e03\u6211\u7684\u8bfe\u7a0b\u7b14\u8bb0\u548c\u4fdd\u5b58\u4e00\u4e9b\u5176\u4ed6\u7684\u6587\u7ae0\u4e0e\u60f3\u6cd5\uff0c\u5982\u6709\u7eb0\u6f0f\uff0c\u656c\u8bf7\u8c05\u89e3\uff01</p>"},{"location":"#about-me","title":"About me","text":""},{"location":"#my-github","title":"My GitHub","text":""},{"location":"#my-bilibili","title":"My Bilibili","text":""},{"location":"#my-twitter","title":"My Twitter","text":""},{"location":"#my-gmail-and-my-zju-email","title":"My Gmail and   My ZJU Email","text":""},{"location":"DB/","title":"Index","text":"<p>Note</p> <p>\u6570\u636e\u5e93\u7cfb\u7edf</p>"},{"location":"DB/intro/","title":"\u6570\u636e\u5e93\u4ecb\u7ecd","text":""},{"location":"DB/intro/#database-system","title":"database system","text":"<p>Database system = Database management system(DBMS) + App. + Users</p> <p>\u76ee\u524d\u53ef\u4ee5\u628a\u6570\u636e\u5e93\u7406\u89e3\u4e3a\u5305\u542b\u5173\u7cfb\u7684\u8868\u683c</p>"},{"location":"DB/intro/#purpose-of-database-system","title":"purpose of database system","text":"<p>\u5982\u679c\u5e94\u7528\u5efa\u7acb\u5728file systems\u4e0a\uff0c\u4f1a\u6709\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u6570\u636e\u5197\u4f59\u4e0e\u4e0d\u4e00\u81f4\uff08data redundancy and inconsistency\uff09:\u540c\u4e00\u6570\u636e\u53ef\u80fd\u5b58\u5728\u5f88\u591a\u4e0d\u540c\u7684\u5730\u65b9\uff1b\u7531\u4e8e\u6570\u636e\u5f7c\u6b64\u4e0d\u4e92\u901a\uff0c\u8fd8\u53ef\u80fd\u5e26\u6765\u6709\u7684\u6709\u7684\u4fee\u6539\u6709\u7684\u6ca1\u4fee\u6539\u7684\u95ee\u9898\uff0c\u5e26\u6765\u4e0d\u4e00\u81f4</li> <li>\u6570\u636e\u5b64\u7acb(data isolation):\u4e0d\u540c\u6570\u636e\u4e0d\u4e92\u901a</li> <li>\u5b58\u53d6\u6570\u636e\u56f0\u96be(difficulty in accessing data)\uff1a\u5bf9\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8981\u5199\u65b0\u7684\u7a0b\u5e8f</li> <li>integrity problems\uff08\u5b8c\u6574\u6027\u95ee\u9898\uff09</li> <li>atomicity problems\uff08\u539f\u5b50\u6027\u95ee\u9898\uff09</li> <li>concurrent access anomalies(\u5e76\u53d1\u5f02\u5e38\u8bbf\u95ee)</li> <li>security problems</li> </ul> <p>\u800cdatabase system\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898</p>"},{"location":"DB/intro/#view-of-data","title":"view of data","text":"<p>\u4e09\u5c42\u62bd\u8c61\uff1a</p> <ul> <li>physical level:\u6700\u5e95\u5c42\u62bd\u8c61\uff0c\u63cf\u8ff0\u6570\u636e\u5982\u4f55\u4fdd\u5b58\uff08how\uff09</li> <li>logical level:\u6570\u636e\u5e93\u5b58\u50a8\u4ec0\u4e48\u6570\u636e\uff0c\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\uff08what\uff09</li> <li>view level:\u4e0d\u540c\u4eba\u770b\u5230\u4ed6\u4eec\u6240\u9700\u8981\u7684\u6570\u636e</li> </ul> <p>\u8bbe\u8ba1\u4e09\u5c42\u62bd\u8c61\u7684\u76ee\u7684\u662f\u9690\u85cf\u590d\u6742\u6027\uff1b\u540c\u65f6\u589e\u5f3a\u5e94\u7528\u9002\u5e94\u53d8\u5316\u7684\u80fd\u529b\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u4e00\u4e2a\u65b0\u9700\u6c42\u5c31\u8981\u6539\u53d8\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>\u5f53\u7136\uff0c\u4e09\u5c42\u62bd\u8c61\u4e4b\u95f4\u4e5f\u901a\u8fc7\u6620\u5c04\u6765\u8054\u7cfb\uff0c\u53ca\u4e09\u5c42\u7ed3\u6784\u4e24\u5c42\u6620\u5c04\u3002</p>"},{"location":"DB/intro/#schema-and-instance","title":"schema(\u6a21\u5f0f) and instance(\u5b9e\u4f8b)","text":"<p>\u53ef\u4ee5\u7406\u89e3\u6210C\u8bed\u8a00\u4e2d\u7c7b\u578b\u4e0e\u53d8\u91cf\u7684\u5173\u7cfb</p> <ul> <li>Schema\uff1a the logical structure of the database (physical/logical)</li> <li>Instance\uff1a the actual content of the database at a particular point in time</li> </ul>"},{"location":"DB/intro/#data-independence","title":"data independence","text":"<ul> <li>Physical Data Independence (\u7269\u7406\u6570\u636e\u72ec\u7acb\u6027): the ability to modify the physical schema without changing the logical schema</li> <li>Logical Data Independence (\u903b\u8f91\u6570\u636e\u72ec\u7acb\u6027): the ability to modify the logical schema without changing the user view schema</li> </ul>"},{"location":"DB/intro/#data-models","title":"data models(\u6570\u636e\u6a21\u578b)","text":"<p>a collection of tools for describing:</p> <ul> <li>data</li> <li>data relationships</li> <li>data semantics(\u8bed\u4e49)</li> <li>data constraints(\u7ea6\u675f)</li> </ul> <p>\u5e38\u89c1\u6a21\u578b\uff1a</p> <ul> <li>relational model</li> <li>entity-relationship data model(\u5b9e\u4f53-\u8054\u7cfb\u6a21\u578b)</li> <li>object-based data model<ul> <li>object-oriented\uff08\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b\uff09</li> <li>object-relational\uff08\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\uff09</li> </ul> </li> <li>semistructured data model\uff08\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b\uff09</li> </ul>"},{"location":"DB/intro/#database-languages","title":"database languages","text":""},{"location":"DB/intro/#ddl","title":"DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09","text":"<p>data dictionary contains metadata(\u5143\u6570\u636e)\uff0c\u5143\u6570\u636e\u662f\u7528\u6765\u63cf\u8ff0\u6570\u636e\u7684\u6570\u636e</p>"},{"location":"DB/intro/#dml","title":"DML(\u6570\u636e\u64cd\u4f5c\u8bed\u8a00)","text":"<p>query language</p>"},{"location":"DB/intro/#sql","title":"SQL(\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00)","text":""},{"location":"DB/relation/","title":"Relational Model","text":""},{"location":"DB/relation/#concepts","title":"concepts","text":"<p>\u5b9a\u4e49\uff1a\u4e00\u4e2a\u5173\u7cfb\u6307\u7684\u662f\u5143\u7ec4\u7684\u96c6\u5408</p> <ul> <li>\u65e0\u5e8f</li> <li>\u65e0\u91cd\u590d</li> </ul> <p>\u5047\u8bbe\\(A_1,A_2....A_n\\)\u662fattribute\uff0cR=(\\(A_1,A_2....A_n\\))\u79f0\u4e3arelation schema\u3002\u4f8b\u5982\uff1ainstructor=\uff08ID,name,salary\uff09</p> <p>A relation instance r defined over schema R is denoted by r(R).</p> <p>database schema\u662f\u62bd\u8c61\u7684\u5b9e\u73b0\uff0cdatabase instance \u662f\u5177\u4f53\u7684\u5b9e\u4f8b\uff0c\u662f\u67d0\u4e00\u65f6\u523b\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u5feb\u7167\uff08snapshot\uff09</p>"},{"location":"DB/relation/#attributes","title":"attributes","text":"<ul> <li>the set of allowed values for each attribute is called the domain of the attribute</li> <li>null is a member of every domain</li> <li>attribute values is atomic,indivisible</li> </ul>"},{"location":"DB/relation/#keys","title":"keys","text":"<ul> <li>superkey:\u80fd\u552f\u4e00\u786e\u5b9a\u5143\u7ec4\u7684\u5c5e\u6027</li> <li>candidate key\uff1a\u5982\u679c\u8d85\u952e\u4e0d\u53ef\u518d\u5206\uff0c\u5219\u79f0\u4e3a\u5019\u9009\u952e</li> <li>primary key:\u7531\u5019\u9009\u952e\u4e2d\u9009\u62e9\u51fa</li> <li>foreign key\uff08\u5916\u952e\uff09:\u5173\u7cfbr1\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\u5fc5\u987b\u662fr2\u4e2d\u5bf9\u5e94\u5c5e\u6027\u7684\u4e3b\u952e\u3002\u7c7b\u4f3c\u6307\u9488\uff0c\u5373r1\u7684\u5916\u952e\u6307\u5411\u7684\u662fr2\u4e2d\u7684\u4e3b\u952e\u3002\u6ce8\u610f\uff0c foreign key\u6307\u5411null \u6216 \u522b\u7684\u8868\u7684\u4e3b\u952e<ul> <li>\u5916\u952e\u7ea6\u675f\uff08foreign key constraint\uff09:\u6709\u76ca\u4e8e\u7ef4\u62a4\u6570\u636e\u5b8c\u6574\u6027</li> <li>referential integrity\uff08\u53c2\u7167\u5b8c\u6574\u6027\uff09\uff1a\u7c7b\u4f3c\u4e8e\u5916\u952e\u9650\u5236\uff0c\u4f46\u4e0d\u5c40\u9650\u4e8e\u4e3b\u952e</li> </ul> </li> </ul>"},{"location":"DB/relation/#relational-algebra","title":"relational algebra","text":""},{"location":"DB/relation/#select-sigma","title":"select: \\(\\sigma\\)","text":""},{"location":"DB/relation/#project-pi","title":"project: \\(\\Pi\\)","text":"<p>\u7c7b\u4f3c\u6295\u5f71\uff0c\u53d6\u67d0\u4e9b\u5c5e\u6027\u5e76\u5ffd\u7565\u5176\u4ed6\u5c5e\u6027\uff0c\u4f1a\u5bf9\u6700\u540e\u7ed3\u679c\u53bb\u91cd</p>"},{"location":"DB/relation/#union-u","title":"union: U","text":""},{"location":"DB/relation/#set-difference-","title":"set difference: -","text":""},{"location":"DB/relation/#cartesian-product-x","title":"cartesian product: X","text":""},{"location":"DB/relation/#rename-rho","title":"rename :\\(\\rho\\)","text":""},{"location":"DB/relation/#rsr-r-s","title":"\u4ea4\uff1ar\u2229s=r-(r-s)","text":""},{"location":"DB/relation/#natural-join-operation-join","title":"natural-join operation: \\(\\Join\\)","text":"<p>\u76f8\u5f53\u4e8e\u5148\u505a\u7b1b\u5361\u5c14\u79ef\uff0c\u518d\u9009\u62e9\uff0c\u6700\u540e\u6295\u5f71</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5148\u627e\u5230\u76f8\u540c\u5c5e\u6027\u4e00\u6837\u7684\uff0c\u8fdb\u884c\u62fc\u63a5\uff0c\u7136\u540e\u6295\u5f71\u51fa\u6240\u6709\u5c5e\u6027</p> <p>\u6761\u4ef6\u8fde\u63a5theta join\uff1a\\(r \\Join _\\theta s=\\sigma _\\theta (r*s)\\)</p>"},{"location":"DB/sql/","title":"SQL","text":"<p>structured query language (\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00)</p>"},{"location":"DB/sql/#data-definition","title":"data definition","text":""},{"location":"DB/sql/#domain-types","title":"domain types","text":"<p>char(n):\u957f\u5ea6\u662fn,\u6ce8\u610f\u4e0d\u540c\u4e8eC\u8bed\u8a00\u7684\u662f\u6ca1\u6709'\\0'\u7ed3\u5c3e</p> <p>varchar(n):\u4e0d\u5b9a\u957f\u5b57\u7b26\u4e32\uff0c\u6700\u957f\u662fn</p> <p>int</p> <p>smallint</p> <p>numeric(p,d):p\u662f\u6709\u6548\u6570\u5b57\u4e2a\u6570\uff0cd\u662f\u5c0f\u6570\u70b9\u540e\u51e0\u4f4d\u3002</p> <p>real,double precision</p> <p>float(n)</p>"},{"location":"DB/sql/#built-in-data","title":"built-in data","text":"<ul> <li>date : year-month-day,eg:data '2005-6-12'</li> <li>time : eg:time '09:00:30'</li> <li>timetamp:data+time</li> <li> <p>interval:</p> <ul> <li>eg: interval '1' day</li> </ul> </li> </ul>"},{"location":"DB/sql/#creat-table-construct","title":"creat table construct","text":"<p>\u521b\u7acb,\u4ee5\u53ca\u4e3b\u952e\u548c\u5916\u952e\uff1a</p> <pre><code>create table instructor(\n    ID char(5),\n    name varchar(20) not null\n    dept_name varchar(10),\n    primary key(ID),\n    foreign key(dept_name) references department\n)\n</code></pre> <p>delete cascade update cascade set null</p> <ul> <li>drop:\u5220\u8868</li> <li>delete\uff1a\u5220\u5185\u5bb9\u4e0d\u5220\u8868\uff08\u5373\u4fdd\u7559\u5173\u7cfb\u6a21\u5f0f\uff09</li> <li>alter table r add A D\uff1a\u66f4\u6539\u8868\u7684\u5b9a\u4e49\uff0cA\u662f\u589e\u52a0\u7684\u5c5e\u6027\uff0cD\u662f\u6570\u636e\u7c7b\u578b\u3002\u5982\uff1aalter table student add resume varchar(256)</li> </ul>"},{"location":"DB/sql/#select","title":"select","text":"<p>select A1,A2,...An from r1,r2,..rn,where p  - from \u540e\u9762\u5c31\u7b97\u51e0\u4e2a\u8868\u4e58\u8d77\u6765</p> <p>\u81ea\u7136\u8fde\u63a5\u7684\u7b49\u4ef7\uff1a\u5982\uff1a</p> <pre><code>--&gt; \u5047\u8bber1,r2\u7684\u516c\u5171\u5c5e\u6027\u4e3ab\nselect a1,a2\nfrom r1,r2\nwhere r1.b=r2.b\n--&gt; \u7b49\u4ef7\u4e8e\uff1a\nselect a1,a2\nfrom r1 natural join r2\n</code></pre> <p>select distinct ... select * from ...</p>"},{"location":"DB/sql/#rename","title":"rename","text":"<p>as</p>"},{"location":"DB/sql/#_1","title":"\u5b57\u7b26\u4e32\u64cd\u4f5c","text":"<p><code>%</code> :\u8868\u793a\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a</p> <pre><code>select name from instructor where name like %dar%\n</code></pre> <p><code>_</code> :  \u8868\u793a\u5355\u4e2a\u5b57\u7b26\uff0c\u5982<code>_ _ _</code>\u8868\u793a\u957f\u5ea6\u4e3a3\u7684\u5b57\u7b26\u4e32</p>"},{"location":"DB/sql/#order","title":"order\u6392\u5e8f","text":"<p>order by ... desc/asc</p> <p>limit \u9650\u5236\u4e2a\u6570</p>"},{"location":"DB/sql/#_2","title":"\u96c6\u5408\u64cd\u4f5c","text":"<p>union ,intersect,except(\u5e76\uff0c\u4ea4\uff0c\u51cf) </p>"},{"location":"DB/sql/#aggregate-functions","title":"aggregate functions","text":"<p>\u9996\u5148\u9009\u51fainstructor\u8868\u4e2d\u85aa\u6c34\u5927\u4e8e100\u7684\uff0c\u7136\u540e\u6309\u7167dept_name\u5206\u7ec4\uff0c\u7136\u540e\u9009\u62e9\u4eba\u6570\u8d85\u8fc710\u7684\u7559\u4e0b\u6765\uff0c\u6700\u540e\u6309\u7167\u4eba\u6570\u6392\u5e8f\u8f93\u51fa\uff08cnt\uff09 <pre><code>select dept_name,count(*) as cnt\nfrom instructor\nwhere salary&gt;100\ngroup by dept_name\nhaving count(*)&gt;10\norder by cnt\n</code></pre></p>"},{"location":"DB/sql/#nested-subqueries","title":"nested subqueries(\u91cd\u70b9)","text":"<ul> <li>in,not in</li> <li>exist,not exist</li> <li>unique</li> </ul>"},{"location":"FDS/","title":"Index","text":"<p>Note</p> <ul> <li>\u8bfe\u7a0b\uff1a\u6570\u636e\u7ed3\u6784\u57fa\u7840</li> <li>\u4efb\u8bfe\u6559\u5e08\uff1a\u6768\u5b50\u797a</li> </ul> <p>\u5b66\u4e60\u94fe\u8868\uff0c\u6811\uff0c\u5806\uff0c\u56fe\uff0c\u6392\u5e8f\u548c\u54c8\u5e0c</p>"},{"location":"FDS/disjointset/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"FDS/disjointset/#_2","title":"\u57fa\u672c\u7ed3\u6784","text":"<ul> <li>\u5e76\u67e5\u96c6\u7684\u6838\u5fc3\u5728\u4e8e\u628a\u5c5e\u4e8e\u76f8\u540c\u96c6\u5408\u7684\u5143\u7d20\u7528\u4e00\u4e2a\u7c7b\u4f3c\u6811\u7684\u7ed3\u6784\u8fde\u63a5\u5728\u4e00\u8d77\u3002</li> <li>\u8fd9\u4e2a\u6811\u662f\u5b69\u5b50\u8282\u70b9\u6307\u5411\u7236\u4eb2\u8282\u70b9\u7684</li> <li>\u7528\u6570\u7ec4\u8868\u793a\uff0c\u6570\u7ec4\u5143\u7d20\u8868\u793a\u7236\u4eb2\u8282\u70b9\u7684\u7d22\u5f15</li> <li>\u6839\u8282\u70b9\u7684\u5143\u7d20\u662f0(\u4e5f\u53ef\u4ee5\u8bbe\u8ba1\u4e3a\u5c0f\u4e8e0)</li> <li>\u8fd9\u6837\u8bbe\u8ba1\u6811\u7684\u539f\u56e0\u662f\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e2a\u96c6\u5408\uff0c\u800c\u4e0d\u9700\u8981\u77e5\u9053\u96c6\u5408\u5143\u7d20\u6570\u91cf</li> </ul>"},{"location":"FDS/disjointset/#union","title":"union","text":"<p>\u4ee5\u4e0b\u4ee3\u7801\u4e2ddisjset\u4e3a\u6570\u7ec4\u7c7b\u578b <pre><code>void union(disjset s,int rt1,int rt2){\n    s[rt1]=rt2;\n}\n</code></pre></p>"},{"location":"FDS/disjointset/#find","title":"find","text":"<pre><code>int find(disjset s,int x){\n    for(;s[x]!=0;x=s[x]);\n    return x;\n}\n</code></pre>"},{"location":"FDS/disjointset/#_3","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u5e76\u67e5\u96c6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5e76\u64cd\u4f5c\u4e0e\u67e5\u64cd\u4f5c\u52a0\u5728\u4e00\u8d77\u7684\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5e76\u7684\u64cd\u4f5c\u6c38\u8fdc\u90fd\u662fnO(1)=O(n),\u56e0\u6b64\u4e3b\u8981\u770b\u67e5\u7684\u64cd\u4f5c\u3002 \u5f53\u662f\u4e00\u68f5\u659c\u6811\u65f6\uff0c\u67e5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(n* O(n)=O(N^2)\\) \u5373\u4e0e\u6811\u7684\u6df1\u5ea6\u76f8\u540c*</p>"},{"location":"FDS/disjointset/#smart-union","title":"smart union","text":""},{"location":"FDS/disjointset/#union-by-size","title":"union by size","text":"<ul> <li>\u6c38\u8fdc\u8ba9\u5c0f\u6811\u6307\u5411\u5927\u6811</li> <li>\\(height\uff08Tree\uff09&lt;=\\lfloor logn \\rfloor + 1\\) </li> <li>union by size\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u51fa\u73b0\u659c\u6811\uff0c\u53c8\u5206\u53c9\u8d8a\u5c11\u6811\u8d8a\u6df1\uff0c\u6545\u4e8c\u53c9\u6811\u4e3a\u6700\u574f\u60c5\u51b5</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6nO(logn) s[0]=-size;</li> </ul>"},{"location":"FDS/disjointset/#union-by-height","title":"union by height","text":"<p>\u6d45\u6811\u6307\u5411\u6df1\u6811</p>"},{"location":"FDS/disjointset/#path-compression","title":"path compression","text":"<ul> <li>\u8def\u5f84\u538b\u7f29\uff0c\u5bf9\u4e8e\u5e76\u67e5\u96c6\uff0c\u5206\u53c9\u8d8a\u591a\u8d8a\u597d\uff0c\u6811\u8d8a\u6d45\u8d8a\u597d</li> <li>\u5728\u627e\u64cd\u4f5c\u7684\u540c\u65f6\uff0c\u628a\u6bcf\u4e00\u4e2a\u6cbf\u9014\u7684\u8282\u70b9\u90fd\u63a5\u5230\u6839\u8282\u70b9\u4e0a \u9012\u5f52\uff1a <pre><code>int find(int s[],int x){\n    if(s[x]==0) return x;\n    else return s[x]=find(s,s[x]);\n}\n</code></pre> \u8fed\u4ee3\uff1a \u627e\u6839\u7684\u64cd\u4f5c\u7684\u4e0e\u4e4b\u524d\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8981\u7528tail\u8bb0\u5f55\u4e0bx\u7684\u521d\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u505a\u4e00\u4e2a\u5faa\u73af\u53bb\u628a\u6cbf\u9014\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u6539\u4e3a\u6839\u8282\u70b9 <pre><code>int find(int s[],int x){\n    int root,tail,lead;\n    for(root=x;s[root]!=0;root=s[root]);\n    for(tail=x;tail!=root;tail=lead){\n        lead=s[tail];\n        s[tail]=root;\n    }\n    return root;\n}\n</code></pre></li> </ul>"},{"location":"FDS/disjointset/#union-by-size_1","title":"union by size\u548c\u8def\u5f84\u538b\u7f29\u7ed3\u5408","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)</p>"},{"location":"FDS/graph/","title":"graph","text":""},{"location":"FDS/graph/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u7531vertices\u548cedge\u548c\u7ec4\u6210\uff0c\u53ef\u4ee5\u6ca1\u6709edge\uff08\u6563\u70b9\u56fe\uff09\uff0c\u4e0d\u80fd\u6ca1\u6709vertices</li> <li>\u4e0d\u5141\u8bb8\u51fa\u73b0\u81ea\u5df1\u6307\u5411\u81ea\u5df1\uff08self loop\uff09\u548c\u4e24\u4e2a\u9876\u70b9\u95f4\u6709\u591a\u6761\u91cd\u590d\u7684\u8fb9\uff08multi graph\uff09</li> <li>\u6709\u5411\u56fe\uff08directed graph\uff09\uff1atail-&gt;head:\\(&lt;v_i,v_j&gt;!=&lt;v_j,v_i&gt;\\)</li> <li>\u65e0\u5411\u56fe \uff08undirected graph\uff09\uff1a\\((v_i,v_j)==(v_j,v_i)\\)</li> <li>complete graph:\u6709\u6700\u5927\u6570\u91cf\u7684\u8fb9</li> <li>\u65e0\u5411\u56fe\uff1a\u9876\u70b9\u6570\u4e3an,\u5219\u8fb9\u6570\u4e3a\\(n*(n-1)/2\\)</li> <li>\u6709\u5411\u56fe\uff1a\u9876\u70b9\u6570\u4e3an,\u5219\u8fb9\u6570\u4e3a\\(n*(n-1)\\)</li> <li>\u76f8\u90bb\uff08adjacent\uff09\uff1a\u9876\u70b9\u95f4\u6709\u8fb9\u76f8\u8fde</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff1a\\(&lt;v_i,v_j&gt;\\)\u6307\\(v_i\\) is adjacent to \\(v_j\\) or \\(v_j\\) is adjacent from \\(v_i\\)</li> <li>\u5b50\u56fe subgraph:\u9876\u70b9\u662f\u5b50\u96c6\uff0c\u8fb9\u4e5f\u662f\u5b50\u96c6</li> <li>path\uff1a\u4ece\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u7ecf\u8fc7\u7684\u8def\u7a0b\uff0c\u957f\u5ea6\u662f\u8fb9\u7684\u6570\u91cf</li> <li>simple path\uff1a\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u70b9\u662f\u4e0d\u540c\u7684</li> <li>DAG: directed acyclic graph,\u6709\u5411\u65e0\u73af\u56fe</li> <li>\u5ea6\uff08degree\uff09\uff1a\u9876\u70b9\u7684\u8fb9\u7684\u6570\u91cf</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u5206\u4e3ain_degree\u548cout_degree</li> </ul>"},{"location":"FDS/graph/#_2","title":"\u56fe\u7684\u8868\u793a","text":""},{"location":"FDS/graph/#1","title":"\u6cd51\uff1a\u7528\u4e8c\u7ef4\u6570\u7ec4\u77e9\u9635","text":"<ul> <li>\u6709\u8fde\u63a5\u8d4b\u503c\u4e3a1\uff0c\u65e0\u8fde\u63a5\u8d4b\u503c\u4e3a0</li> <li>\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u56e0\u4e3a\u8981\\(2^n\\)\u7684\u7a7a\u95f4\uff0c\u8fdc\u5927\u4e8e\u5b9e\u9645\u8fb9\u6570</li> </ul>"},{"location":"FDS/graph/#2adjacent-list","title":"\u6cd52\uff1aadjacent list\u90bb\u63a5\u8868","text":"<ul> <li>\u6bcf\u4e2a\u7ed3\u70b9\u7528\u94fe\u8868\u7684\u5f62\u5f0f\u8bb0\u5f55\u8fb9\u6570</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u8bb0\u5f55\u7684\u662f\u51fa\u5ea6\u6216\u8005\u5165\u5ea6\uff0c\u56e0\u6b64\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u94fe\u8868\u6216\u8005\u7528\u4e00\u4e2amultilist\uff08\u540c\u65f6\u8bb0\u5f55tail\u548chead\uff09</li> </ul>"},{"location":"FDS/graph/#_3","title":"\u6700\u77ed\u8def\u5f84\u95ee\u9898","text":"<ul> <li>\u8ba1\u7b97\u542b\u6743\u91cd\u7684\u6700\u77ed\u8def\u5f84</li> <li>\u4e0d\u8003\u8651\u8d1f\u8fb9</li> </ul>"},{"location":"FDS/graph/#breadth-first","title":"\u5e7f\u5ea6\u4f18\u5148\uff08breadth first\uff09","text":"<p>\u4ece\u4e00\u4e2a\u9876\u70b9\u5f00\u59cb\uff0c\u5148\u627e\u8def\u5f84\u4e3a0\u7684\uff0c\u518d\u627e\u8def\u5f84\u4e3a1\u7684\uff08\u76f8\u90bb\uff09\uff0c\u518d\u627e\u8def\u5f84\u4e3a2\u7684\uff08\u76f8\u90bb\u7684\u76f8\u90bb\uff09\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7</p> <ul> <li> <p>\u4e0d\u5e26\u6743\u91cd <pre><code>void Unweighted(Table T){\n  Queue Q;\n  Vertex V,W;\n  Enqueue(S,Q);\n  while(!isEmpty(Q)){\n    V=dequeue(Q);\n    for(each W adjacent to V){\n      if(T[W].Dist==infinity){\n        T[W].Dist=T[V].Dist++;\n        T[W].path=V;\n        Enqueue(W,Q);\n      }\n    }\n  }\n}\n</code></pre></p> </li> <li> <p>\u5e26\u6743\u91cd\uff08dijkstra's algorithm\uff09 </p> </li> </ul> <ol> <li>\u628a\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u4e00\u4e2a\u662f\u5df2\u77e5\u8def\u5f84\u7684\uff0c\u8bb0\u4f5cS\uff0c\u53e6\u4e00\u4e2a\u662f\u672a\u77e5\u7684</li> <li>\u5bf9\u4e8e\u672a\u77e5\u96c6\u5408\u4e2d\u7684u,\u8bb0distance[u]=smallest path to S</li> <li>\u9009\u5b9adistance\u6700\u5c0f\u7684u\uff0c\u628a\u5b83\u52a0\u5165S\u96c6\u5408\u4e2d,\u5e76\u66f4\u65b0\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09</li> </ol> <pre><code> for(;;){\n  //\u4e00\u5f00\u59cb\u6240\u6709\u70b9\u8ddd\u79bb\u8bbe\u4e3a\u65e0\u7a77\u5927\n  v=smallest unknown distance\n  for(each vertex adjacent to v){\n    if(!T[w].know){\n      if(T[v].dist+cvw&lt;T[w].dist){\n        decrease(T[w].dist to t[v].dist+cvw);\n        t[w].path=v;\n      }\n    }\n  }\n }\n</code></pre>"},{"location":"FDS/graph/#_4","title":"\u6df1\u5ea6\u4f18\u5148","text":"<p>\u5148\u4e00\u6761\u8def\u8d70\u5230\u9ed1\uff0c\u518d\u9010\u6b65\u540e\u9000</p>"},{"location":"FDS/graph/#_5","title":"\u6d41\u91cf\u95ee\u9898","text":"<ul> <li>greedy+undo</li> <li>\u6743\u91cd\u662f\u6709\u7406\u6570\u5c31\u53ef\u4ee5\u7ec8\u6b62</li> <li>O\uff08\\(E^2\\)logV\uff09</li> </ul>"},{"location":"FDS/graph/#_6","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<ul> <li>\u5305\u542b\u6bcf\u4e2a\u9876\u70b9\u4e14\u8fb9\u7684\u6743\u91cd\u548c\u6700\u5c0f</li> <li>\u5b58\u5728\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u8fde\u901a\u56fe</li> <li>\u53ef\u80fd\u6709\u591a\u4e2a</li> </ul>"},{"location":"FDS/graph/#prim-algorithm","title":"prim algorithm","text":"<p>\u628a\u70b9\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff08\u7c7b\u4f3cdijkstra\u7b97\u6cd5\uff09\uff0c\u4ece\u4e00\u4e2a\u9876\u70b9\u51fa\u53d1\uff0c\u6bcf\u6b21\u90fd\u627e\u6743\u91cd\u6700\u5c0f\u7684\u76f8\u90bb\u9876\u70b9\u52a0\u5165\u96c6\u5408</p> <ul> <li>\u9009\u8fb9</li> <li>\u5148\u628a\u8fb9\u6309\u7167\u6743\u91cd\u6392\u5e8f\uff0c\u4f9d\u6b21\u9009\u51fa\u6700\u5c0f\u7684\u8fb9\uff0c\u5e76\u786e\u4fdd\u4e0d\u6210\u73af\uff0c\u9009\u51faV-1\u4e2a\u8fb9\u4e3a\u6b62</li> </ul>"},{"location":"FDS/graph/#dfs","title":"DFS\u6df1\u5ea6\u4f18\u5148\u7b97\u6cd5","text":"<pre><code>void DFS(int v){\n  visited[v]=true;\n  for(each w adjacent to v){\n    if(!visited[w])\n    DFS[w];\n  }\n}\nvoid ListComponents(Graph G){\n  for(each v in G){\n    DFS(v);\n    pritnf(\"\\n\");//\u8868\u793a\u6709\u591a\u5c11\u4e2a\u4e0d\u8fde\u901a\u7ec4\u4ef6\n  }\n}\n</code></pre>"},{"location":"FDS/hash/","title":"hashing","text":""},{"location":"FDS/hash/#hash-table","title":"hash table","text":"<p>\u6709b\u4e2a\u6876\uff08bucket\uff09\uff0c\u6bcf\u4e2a\u6876\u653es\u4e2a\u7269\u4f53\uff08slot\uff09\uff0c\u6876\u662f\u884c\uff0c\u7269\u4f53\u662f\u5217 f\uff08x\uff09\u51fd\u6570\u8fd4\u56de\u7684\u662fx\u5904\u4e8e\u7684\u6876 T(search)=T(delete)=T(insert)=O(1)</p>"},{"location":"FDS/hash/#_1","title":"\u57fa\u672c\u5f62\u5f0f","text":"<ul> <li>n\uff1atotal number of identifiers in hash table(\u73b0\u5728\u5df2\u7ecf\u653e\u5165\u7684\u7269\u4f53)</li> <li>T: total number of distinct possible values for x</li> <li>identifier density\uff1an/T</li> <li>loading density\uff1a n/sb</li> <li>collision\uff1atwo nonidentical identifiers into the same bucket,i,e,f(i)=f(j)when i!=j;</li> <li>overfolw: when a new identifier into a full bucket</li> <li>if s=1,collision=overflow</li> <li>\u5c3d\u91cf\u907f\u514d\u53d1\u9001collision\uff0c\u4e0d\u5141\u8bb8\u53d1\u751foverflow</li> </ul>"},{"location":"FDS/hash/#hash-function","title":"hash function","text":"<ul> <li>f(x)\u8fd4\u56dex\u6240\u5728\u7684\u6876\uff08\u54c8\u5e0c\u8868\u6240\u5728\u7684\u884c\uff09</li> <li>easy to compute and minimize collision</li> <li>uniform:\u5747\u5300\u5206\u5e03</li> </ul>"},{"location":"FDS/hash/#_2","title":"\u6574\u6570","text":"<p>f(x) = x%tablesize - \u6ce8\u610ftablesize\u53d6\u79bbsize\u6700\u8fd1\u7684\u7d20\u6570</p>"},{"location":"FDS/hash/#_3","title":"\u4e09\u4f4d\u5b57\u7b26\u4e32","text":"<p>f(x) = \\((\\Sigma{x[N-i-1]}*32^i)\\%tablesize\\) - \u4e5832\u662f\u4e3a\u4e86\u52a0\u901f\uff08\u76f8\u5f53\u4e8e\u5de6\u79fb5\u4f4d\uff09 <pre><code>index hash3(const char* x,int tablesize){\n  unsigned int hashval=0;\n  while(*x!='\\0'){\n    hashval=(hashval&lt;&lt;5)+*x++;\n  }\n  return hashval%tablesize;\n}\n</code></pre></p>"},{"location":"FDS/hash/#_4","title":"\u89e3\u51b3\u78b0\u649e\u95ee\u9898","text":""},{"location":"FDS/hash/#1separate-chaining","title":"1.Separate Chaining","text":"<p>creat a list of all keys that hash to the same value</p> <p>\u5c3d\u91cf\u8ba9\u6bcf\u4e2alist\u8282\u70b9\u4e0d\u8981\u592a\u591a</p> <ul> <li>\u5b9a\u4e49\u7ed3\u6784</li> </ul> <pre><code>struct node{\n  int element;\n  struct node* next;\n}\nstruct hashtable{\n  int tablesize;\n  node** thelists;\n}\n</code></pre> <ul> <li>create an empty table <pre><code>hashtable creattable(int tablesize){\n  hashtable* h;\n  int i;\n  h=malloc(sizeof(struct hashtable));\n  h-&gt;tablesize=tablesize; //\u6ce8\u610f tablesize \u662f\u7d20\u6570\n  h-&gt;thelists=malloc(sizeof(node*)*h-&gt;tablesize);\n  for(i=0;i&lt;h-&gt;tablesize;i++){\n    h-&gt;thelist[i]=malloc(sizeof(struct node));\n    h-&gt;thelist[i]-&gt;next=NULL;\n  }\n  return h;\n}\n</code></pre></li> <li>find a key from hash table <pre><code>node* find(int key,hashtable h){\n  node* p;\n  node* l;\n  l=h-&gt;thelists[hash(key,h-&gt;tablesize)];//hash function\n  p=l-&gt;next;\n  while(p!=NULL&amp;&amp;p-&gt;element!=key){\n    p=p-&gt;next;\n  }\n  return p;\n}\n</code></pre></li> </ul>"},{"location":"FDS/hash/#2open-addressing","title":"2.open addressing","text":"<p>find another empty cell to solve collsin</p> <p>\u7528\u6570\u7ec4\u5b9e\u73b0,\u63a2\u6d4b\uff0c\u5f00\u653e\u5bfb\u5740 <pre><code>index=hash(key);\nint i=0;\nwhile(collision){\n  index=(hash(key)+f(i))%tablesize;\n  i++;\n}\n</code></pre></p>"},{"location":"FDS/hash/#linear-probing","title":"linear probing","text":"<p>f(i)=i</p>"},{"location":"FDS/hash/#quadratic-probing","title":"quadratic probing","text":"<ul> <li>\\(f(i)=i^2\\)</li> <li>\u7406\u8bba\uff1a\u5bf9\u4e8e\u4e8c\u6b21\u63a2\u6d4b\u7684\u54c8\u5e0c\u8868\uff08\u5927\u5c0f\u4e3a\u7d20\u6570\uff09\uff0c\u81f3\u5c11\u6709\u4e00\u534a\u7684\u5143\u7d20\u53ef\u4ee5\u63d2\u5165\u8fdb\u6765</li> </ul> <p>find <pre><code>position find(int key,hashtable H){\n  position currentpos;\n  int collisionnum;\n  collisionnum=0;//\u63a2\u6d4b\u6b21\u6570\n  currentpos=Hash(key,H-&gt;tablesize);\n  while(H-&gt;thecells[currentpos].info!=empty&amp;&amp;H-&gt;thecells[currentpos].element!=key){\n    currentpos+=2*++collisionnum-1;//f(i)=f(i-1)+2i-1\n    if(currentpos&gt;=H-&gt;tablesize)//\u7b49\u540c\u4e8e\u6a21\u9664\n      currentpos-=H-&gt;tablesize;\n  }\n  return currentpos;\n}\n</code></pre></p> <p>insert <pre><code>void insert(int key,hashtable H){\n  position pos;\n  pos=find(key,H);\n  if(H-&gt;thecells[pos].info!=legitimate){\n    H-&gt;thecells[pos].info=legitimate;\n    H-&gt;thecells[pos].element=key;\n\n  }//legitimate\u8868\u793a\u53ef\u7528\n}\n</code></pre></p>"},{"location":"FDS/hash/#double-hash","title":"double hash","text":"<p>\\(f(i)=i*hash_2(X)\\)  \u6211\u4eec\u5728 \\(X\\) \u8ddd\u79bb \\(hash_2(X),2hash_2(X),\\ldots\\) \u7b49\u4f4d\u7f6e\u8fdb\u884c\u63a2\u6d4b\u3002 \u5e38\u7528 \\(hash_2(X)=R-(X mod R)\\), \u5176\u4e2d \\(R\\) \u662f\u4e00\u4e2a\u6bd4 \\(TableSize\\) \u5c0f\u7684\u7d20\u6570\u3002</p> <ul> <li>\u5982\u679c\u6b63\u786e\u5b9e\u73b0\u4e86\u53cc\u91cd\u54c8\u5e0c\uff0c\u6a21\u62df\u8868\u660e\u9884\u671f\u7684\u63a2\u6d4b\u6570\u91cf\u51e0\u4e4e\u4e0e\u968f\u673a\u51b2\u7a81\u89e3\u51b3\u7b56\u7565\u76f8\u540c\u3002</li> <li>\u4e8c\u6b21\u63a2\u6d4b\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u5b9e\u8df5\u4e2d\u53ef\u80fd\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u3002</li> </ul>"},{"location":"FDS/hash/#rehash","title":"rehash","text":"<p>\u5bf9\u4e8e\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\u7684\u5f00\u653e\u5730\u5740\u6563\u5217\u6cd5\uff0c\u5982\u679c\u8868\u7684\u5143\u7d20\u8fc7\u591a\uff0c\u90a3\u4e48\u64cd\u4f5c\u7684\u8fd0\u884c\u65f6\u95f4\u5c06\u5f00\u59cb\u6d88\u8017\u8fc7\u957f\u3002  </p> <ul> <li>\u5efa\u7acb\u4e00\u4e2a\u4e24\u500d\u5927\u7684\u8868</li> <li>\u626b\u63cf\u539f\u59cb\u6563\u5217\u8868</li> <li>\u5229\u7528\u65b0\u7684\u6563\u5217\u51fd\u6570\u5c06\u5143\u7d20\u6620\u5c04\u5230\u65b0\u7684\u6563\u5217\u503c\uff0c\u5e76\u63d2\u5165</li> </ul> <p>\\(T(N)=O(N)\\) </p> <p>\u4ec0\u4e48\u65f6\u5019\u518d\u6563\u5217\uff1f</p> <ul> <li>\u8868\u586b\u6ee1\u4e00\u534a\u5c31\u518d\u6563\u5217</li> <li>\u5f53\u63d2\u5165\u5931\u8d25\u65f6</li> <li>\u5f53\u8868\u8fbe\u5230\u67d0\u4e00\u4e2a\u88c5\u586b\u56e0\u5b50\u65f6\u8fdb\u884c\u518d\u6563\u5217\u3002  </li> </ul> <p>\u901a\u5e38\u5728\u91cd\u54c8\u5e0c\u4e4b\u524d\u5e94\u8be5\u6709 \\(N/2\\) \u4e2a\u63d2\u5165\uff0c\u6240\u4ee5 \\(O(N)\\) \u91cd\u54c8\u5e0c\u53ea\u4f1a\u7ed9\u6bcf\u4e2a\u63d2\u5165\u589e\u52a0\u4e00\u4e2a\u6052\u5b9a\u7684\u4ee3\u4ef7\u3002 \u7136\u800c\uff0c\u5728\u4ea4\u4e92\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u5e78\u7684\u7528\u6237\u7684\u63d2\u5165\u5bfc\u81f4\u91cd\u65b0\u6563\u5217\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u901f\u5ea6\u51cf\u6162\u3002</p>"},{"location":"FDS/heap/","title":"heap","text":""},{"location":"FDS/heap/#1-min-heap","title":"1. min heap","text":"<ul> <li>min heap \u662f\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u5e76\u4e14\u662f\u4e00\u4e2amin tree. <p>min tree : \u6bcf\u4e2a\u7236\u4eb2\u8282\u70b9\u90fd\u6bd4\u5b69\u5b50\u8282\u70b9\u5c0f</p> </li> <li>min heap \u53ef\u4ee5\u7528\u6765\u5feb\u901f\u627e\u5230\u6700\u5c0f\u5143\u7d20</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6O(1) \u4ee5\u4e0b\u4ecb\u7ecdmin heap\u7684\u5404\u79cd\u64cd\u4f5c\uff0cmaxheap\u540c\u7406\u53ef\u5f97</li> </ul>"},{"location":"FDS/heap/#_1","title":"\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"FDS/heap/#11-min-heap","title":"1.1 \u6570\u7ec4\u6a21\u62dfmin heap","text":"<ul> <li>\u8bbe\u7f6earray[0]\u4e3a\u7a7a\u5934\u8282\u70b9</li> </ul> \\[ parent[index]=\\left\\{ \\begin{array}{rcl} i/2 &amp; {i&gt;1}\\\\ 1   &amp;{i=1}\\\\ \\end{array} \\right. \\] \\[ leftchild[index]=\\left\\{ \\begin{array}{rcl} 2*i &amp; {i*2&lt;=n}\\\\ None   &amp;{i*2&gt;n}\\\\ \\end{array} \\right. \\] \\[ rightchild[index]=\\left\\{ \\begin{array}{rcl} 2*i+1 &amp; {i*2+1&lt;=n}\\\\ None   &amp;{i*2+1&gt;n}\\\\ \\end{array} \\right. \\]"},{"location":"FDS/heap/#12","title":"1.2 \u5b9a\u4e49\u7ed3\u6784(\u5bf9\u5b8c\u5168\u4e8c\u53c9\u6811\u7528\u6570\u7ec4\u8868\u793a)\uff1a","text":"<pre><code>struct heap{\n    int capacity; //\u6700\u5927\u5bb9\u91cf\n    int size; //\u76ee\u524d\u5927\u5c0f\n    int *array;\n}\n</code></pre>"},{"location":"FDS/heap/#13","title":"1.3 \u521d\u59cb\u5316","text":"<pre><code>heap* creat_heap(int maxsize){\n    heap* head=(heap*)malloc(sizeof(heap));\n    head-&gt;array=(int *)malloc(sizeof(int)*(maxsize+1));\n    head-&gt;capacity=maxsize;\n    head-&gt;size=0;\n    //\u628a\u7a7a\u8282\u70b9\u7684\u5143\u7d20\u8bbe\u7f6e\u4e3a\u8be5\u7c7b\u578b\u6570\u636e\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u4ee5\u786e\u4fdd\u4efb\u4f55\u4e00\u4e2a\u6839\u5143\u7d20\u90fd\u6bd4\u5176\u5927\uff0c\u5982\u8bbe\u7f6e\u4e3a\u8d1f\u65e0\u7a77\n    head-&gt;array[0]=mindata;\n    return head;\n}\n</code></pre>"},{"location":"FDS/heap/#14-insertion","title":"1.4 insertion","text":"<p>\u8be5\u64cd\u4f5c\u4ee5\u53ca\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u7684\u5171\u540c\u601d\u60f3\u662f\uff1a\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u662f\u56fa\u5b9a\u7684\uff0c\u5c06\u8981\u63d2\u5165\u6216\u5220\u9664\u7684\u5143\u7d20\u653e\u5165\u56fa\u5b9a\u7684\u4f4d\u7f6e\uff0c\u518d\u6bd4\u8f83\u8c03\u6574\u5143\u7d20\u95f4\u7684\u4f4d\u7f6e\u5373\u53ef - \u5e38\u89c4\u601d\u8def\u662f\u7528\u4ea4\u6362\uff1a  <pre><code>void insert{heap* head,int x}{\n    if(array is full) return;\n    head-&gt;array[++head-&gt;size]=x;\n    for(int i=size;head-&gt;array[i]&lt;head-&gt;array[i/2];i/=2){\n        swap(head-&gt;array[i],head-&gt;array[i/2]);\n    }\n}\n</code></pre> - \u4f46\u662f\u4ea4\u6362\u592a\u6162\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u63d2\u5165\u7684\u601d\u60f3\uff0c\u5148\u4e0d\u628a\u8981\u63d2\u5165\u7684\u5143\u7d20\u653e\u8fdb\u53bb\uff0c\u800c\u662f\u62ff\u5728\u624b\u4e0a\uff0c\u9010\u6b65\u6bd4\u8f83\u5e76\u8c03\u6574\u76f8\u5e94\u8282\u70b9\u4f4d\u7f6e\u540e\u518d\u63d2\u5165 <pre><code>void insert{heap* head,int x}{\n    if(array is full) return;\n    int i;\n    for(i=++head-&gt;size;head-&gt;array[i/2]&gt;x;i/=2){\n        head-&gt;array[i]=head-&gt;array[i/2];\n    }\n    head-&gt;array[i]=x;\n}\n</code></pre> - \u65f6\u95f4\u590d\u6742\u5ea6O(logn)</p>"},{"location":"FDS/heap/#15-deletemin","title":"1.5 deletemin","text":"<ul> <li>\u5220\u9664\u6700\u5c0f\u5143\u7d20\uff0c\u5373\u6839\u5143\u7d20\u3002\u6838\u5fc3\u5728\u4e8e\u8981\u4fdd\u6301\u6811\u7684\u7ed3\u6784\u4e0d\u53d8\uff0c\u5373\u628a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5148\u653e\u5230\u6839\u8282\u70b9\u4e0a\u6765\uff0c\u518d\u8c03\u6574\u5404\u5143\u7d20\u7684\u4f4d\u7f6e</li> <li>\u53c2\u7167\u4e0a\u6587\u7684\u63d2\u5165\u601d\u60f3\uff0c\u6211\u4eec\u4ecd\u662f\u5148\u628a\u5176\u62ff\u5728\u624b\u4e0a\u4f5c\u6bd4\u8f83\uff0c\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u518d\u63d2\u5165 <pre><code>void deletemin(heap* head){\n    if(size==0) return;\n    int lastelement=head-&gt;array[head-&gt;size--];\n    int i,child;\n    for(i=1;i*2&lt;=head-&gt;size;i=child){\n        child=2*i;\n        //\u627e\u5230\u5de6\u53f3\u5b69\u5b50\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\n        if(child&lt;size&amp;&amp;head-&gt;array[child]&gt;head-&gt;array[child+1]){\n            child++;\n            }\n        if(head-&gt;array[child]&lt;lastelement){\n            head-&gt;array[i]=head-&gt;array[child];    \n        }else{\n            break;\n        }\n    }\n    head-&gt;array[i]=lastelement;\n}\n</code></pre></li> </ul>"},{"location":"FDS/heap/#16-buildheap","title":"1.6 buildheap","text":"<ul> <li>\u5148\u76f4\u63a5\u8bfb\u5230\u6570\u7ec4\u91cc</li> <li>\u4ece\u6700\u540e\u7684\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u8c03\u987a\u5e8f\uff08\u4e0b\u6c89\u64cd\u4f5c\uff09,\u904d\u5386\u52301\u4f4d\u7f6e</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n\uff09</li> <li>\u6700\u5dee\u60c5\u51b5\u662f\u6240\u6709\u5143\u7d20\u90fd\u8981\u4e0b\u79f0\u4e14\u4e0b\u79f0\u5230\u5e95\uff0c\u5373\u6240\u6709\u8282\u70b9\u9ad8\u5ea6\u7684\u548c</li> <li>\u5b8c\u7f8e\u4e8c\u53c9\u6811\u6709\\(2^{h+1}-1\\)\u4e2a\u8282\u70b9\uff0c\u6240\u6709\u8282\u70b9\u7684\u9ad8\u5ea6\u548c\u4e3a\\(2^{h+1}-1-(h+1)\\),\u5176\u4e2d\u9ad8\u5ea6h=logn,\u6545\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)</li> <li>\u4e0e\u5143\u7d20\u6570\u636e\u5927\u5c0f\u7684\u5148\u540e\u65e0\u5173</li> </ul>"},{"location":"FDS/heap/#17","title":"1.7 \u5176\u4ed6","text":"<ul> <li>\u627e\u7b2ck\u5927\u7684\u5143\u7d20\uff1a\u5efa\u5806\uff0c\u7136\u540e\u505ak\u6b21deletemin</li> <li>\u5220\u9664\u5806\u4e2d\u67d0\u8282\u70b9\uff1a \u5148\u5bf9\u5176\u505a\u4e0a\u6d6e\u64cd\u4f5c\uff0c\u518ddeletemin</li> </ul>"},{"location":"FDS/sort/","title":"\u6392\u5e8f","text":""},{"location":"FDS/sort/#_2","title":"\u63d2\u5165\u6392\u5e8f","text":"<p>\u63d2\u5165\u6392\u5e8f\u6709 N-1 \u8d9f(pass), \u5bf9\u4e8e \\(P=1\\) \u5230 \\(P=N-1\\) \u8d9f\u6211\u4eec\u4fdd\u8bc1\u4f4d\u7f6e 0 \u5230\u4f4d\u7f6e \\(P-1\\) \u4e0a\u7684\u5143\u7d20\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u7684\uff0c\u800c\u7b2c \\(P\\) \u8d9f\u8981\u505a\u7684\u5c31\u662f\u5c06\u4f4d\u7f6e \\(P\\) \u7684\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u5230\u5b83\u5728\u524d \\(P+1\\) \u4e2a\u5143\u7d20\u4e2d\u7684\u6b63\u786e\u4f4d\u7f6e\u4e0a\u3002  </p> <pre><code>void InsertionSort ( ElementType A[ ], int N ) \n{ \n    int j, P; \n    ElementType  Tmp; \n\n    for ( P = 1; P &lt; N; P++ ) { \n    Tmp = A[ P ];  /* the next coming card */\n    for ( j = P; j &gt; 0 &amp;&amp; A[ j - 1 ] &gt; Tmp; j-- ) \n          A[ j ] = A[ j - 1 ]; \n          /* shift sorted cards to provide a position \n                       for the new coming card */\n    A[ j ] = Tmp;  /* place the new card at the proper position */\n      }  /* end for-P-loop */\n}\n</code></pre>"},{"location":"FDS/sort/#_3","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u4f73\u60c5\u51b5 - \u8f93\u5165\u6570\u636e\u662f\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u95f4\u4e3a \\(O(N)\\) </li> <li>\u6700\u574f\u60c5\u51b5 - \u8f93\u5165\u6570\u636e\u662f\u9006\u5e8f\u7684\uff0c\u90a3\u4e48\u8fd0\u884c\u65f6\u95f4\u4e3a \\(O(N^2)\\)</li> <li>\u5047\u8bbe\u6709I\u4e2a\u9519\u5e8f\u5bf9\uff08\u5982\uff083\uff0c2\uff09\uff09\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N+I)</li> <li>\u6bcf\u6b21\u7ea0\u6b63\u4e00\u7ec4\u9519\u5e8f\u5bf9</li> <li>\u4efb\u610f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e73\u5747\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u662f\\(n*(n-1)/4\\)<ul> <li>\u6570\u7ec4\u4e00\u5171\u6709n*(n-1)/2\u4e2a\u5bf9\uff0c\u6bcf\u4e2a\u5bf9\u6709\u00bd\u7684\u6982\u7387\u662f\u9006\u5e8f\u5bf9</li> <li>\u7531\u6b64\u5f97\u5230\u5e73\u5747\u65f6\u95f4\u6548\u7387\u4ecd\u662fO(\\(N^2\\))</li> </ul> </li> </ul>"},{"location":"FDS/sort/#_4","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u5e0c\u5c14\u6392\u5e8f\u4f7f\u7528\u4e00\u4e2a \\(h_1,h_2,\\ldots,h_t\\) \u7684\u589e\u91cf\u5e8f\u5217(\\(h_1=1\\)). \\(h_k\\)-sort \u7684\u4e00\u822c\u505a\u6cd5\u662f\uff0c\u5bf9\u4e8e \\(h_k,h_k+1,\\ldots,N-1\\) \u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e \\(i\\), \u5c06\u5176\u5143\u7d20\u653e\u5230 \\(i,i-h_k,i-2h_k,\\ldots\\) \u4e2d\u95f4\u7684\u6b63\u786e\u4f4d\u7f6e\u4e0a\u3002\u76f8\u5f53\u4e8e\u5bf9 \\(h_k\\) \u4e2a\u72ec\u7acb\u7684\u5b50\u6570\u7ec4\u5404\u8fdb\u884c\u4e00\u6b21\u63d2\u5165\u6392\u5e8f\u3002\\(h_k\\)-sort \u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(i\\) \u6211\u4eec\u90fd\u6709 \\(a_i\\leq a_{i+h_k}\\), \u6b64\u65f6\u6210\u79f0\u4e3a \\(h_k\\)-sorted. </p> <p>\u5e0c\u5c14\u6392\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28: \u4e00\u4e2a \\(h_k\\)-sorted \u7684\u6587\u4ef6\uff08\u6b64\u540e\u5c06\u662f \\(h_{k-1}\\)-sorted\uff09\u4fdd\u6301\u4ed6\u7684 \\(h_k\\)-sorted \u6027\u8d28\u3002  </p>"},{"location":"FDS/sort/#_5","title":"\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217","text":"<p>\\(h_t=\\lfloor N/2 \\rfloor, h_k=\\lfloor h_{k+1}/2 \\rfloor\\)(\u53ef\u4ee5\u6709\u66f4\u597d\u7684\u589e\u91cf\u5e8f\u5217)</p> <pre><code>void Shellsort( ElementType A[ ], int N ) \n{ \n      int  i, j, Increment; \n      ElementType  Tmp; \n      for ( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n    /*h sequence */\n    for ( i = Increment; i &lt; N; i++ ) { /* insertion sort */\n          Tmp = A[ i ]; \n          for ( j = i; j &gt;= Increment; j - = Increment ) \n        if( Tmp &lt; A[ j - Increment ] ) \n              A[ j ] = A[ j - Increment ]; \n        else \n              break; \n        A[ j ] = Tmp; \n    } /* end for-I and for-Increment loops */\n}\n</code></pre> <ul> <li> <p>\u6700\u574f\u60c5\u5f62\u5206\u6790 \u4f7f\u7528\u5e0c\u5c14\u589e\u91cf\u65f6\u7684\u5e0c\u5c14\u6392\u5e8f\u7684\u6700\u574f\u60c5\u5f62\u8fd0\u884c\u65f6\u95f4\u4e3a \\(\\Theta(N^2)\\) </p> </li> <li> <p>Hibbard \u589e\u91cf\u5e8f\u5217 \\(h_k= 2^k-1\\), \u4e14\u5176\u6700\u574f\u60c5\u5f62\u4e0b\u8fd0\u884c\u65f6\u95f4\u4e3a \\(O(N^{3/2})\\)</p> </li> </ul>"},{"location":"FDS/sort/#_6","title":"\u5806\u6392\u5e8f","text":"<ul> <li>\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u4e00\u4e2a Max \u5806</li> <li>\u5c06\u5806\u4e2d\u6700\u540e\u5143\u7d20\u4e0e\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u7f29\u51cf\u5806\u7684\u5927\u5c0f\u5e76\u8fdb\u884c\u4e0b\u6ee4\u3002\u6267\u884c N-1 \u6b21 <code>DeleteMax</code> \u64cd\u4f5c  </li> <li>\u7b97\u6cd5\u7ec8\u6b62\u65f6\uff0c\u6570\u7ec4\u6309\u987a\u5e8f\u5373\u4e3a\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\u7ed3\u679c</li> </ul> <pre><code>void Heapsort( ElementType A[ ], int N ) \n{  int i; \n    for ( i = N / 2; i &gt;= 0; i - - ) /* BuildHeap */ \n        PercDown( A, i, N ); \n    for ( i = N - 1; i &gt; 0; i - - ) { \n        Swap( &amp;A[ 0 ], &amp;A[ i ] ); /* DeleteMax */ \n        PercDown( A, 0, i ); \n    } \n}\n</code></pre> <p>\u6ce8\uff1a\u8fd9\u91cc\u7684\u5806\u6211\u4eec\u662f\u4ece 0 \u5f00\u59cb\u8ba1\u6570\u7684\uff0c\u56e0\u6b64\u5de6\u513f\u5b50\u5e94\u8be5\u662f <code>2*i+1</code> </p> <p>\u5bf9 N \u4e2a\u4e92\u5f02\u9879\u7684\u968f\u673a\u6392\u5217\u8fdb\u884c\u5806\u6392\u5e8f\uff0c\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a \\(2N\\log N-O(N\\log\\log N)\\)</p>"},{"location":"FDS/sort/#merge-sort","title":"merge sort \u5f52\u5e76\u641c\u7d22","text":"<ul> <li>\u57fa\u7840\u51fd\u6570merge\uff0c\u5c06\u4e24\u4e2a\u6570\u7ec4\u6392\u597d\u5e8f\u53d1\u5728\u5269\u4e0b\u7684\u6570\u7ec4\u91cc</li> </ul> <pre><code>//\u6570\u7ec4a\u7684\u957f\u5ea6\u4e3alen1,\u6570\u7ec4b\u7684\u957f\u5ea6\u4e3alen2\uff0c\u5c06a,b\u6570\u7ec4\u6392\u597d\u5e8f\u5408\u5e76\u5165c\u6570\u7ec4\uff08a,b\u5df2\u6392\u597d\u5e8f\uff09\nvoid merge(int a[],int b[],int c[],int len1,int len2){\n  int i=0,j=0,k=0;\n  while(i&lt;len1||j&lt;len2){\n    if(j==len2||i&lt;len1&amp;&amp;a[i]&lt;b[j]){\n      c[k++]=a[i++];\n    }else{\n      c[k++]=b[j++];\n    }\n  }\n}\n</code></pre> <ul> <li>\u9012\u5f52\u5199\u6cd5 <pre><code>void merge(int a[],int begin, int mid,int end ){\n  int i=begin,j=mid+1,k=0;\n  //\u5b9a\u4e49\u597dlen\u5f88\u5173\u952e\uff0c\u65b9\u4fbf\u7b97\u51fan\u4e2d\u5143\u7d20\u6570\u91cf\n  int len=end-begin+1;\n  int b[len];\n  while(k&lt;=len-1){\n    if(j&gt;end||i&lt;=mid&amp;&amp;a[i]&lt;a[j]){\n      b[k++]=a[i++];\n    }else{\n      b[k++]=a[j++];\n    }\n  }\n  //\u5c06b\u4e2d\u6392\u597d\u5e8f\u7684\u62f7\u8d1d\u56dea\n  for(int m=0;m&lt;len;m++){\n    a[begin+m]=b[m];\n  }\n}\nvoid sort(int a[],int begin,int end){\n    if(begin&lt;end){\n        int mid=(begin+end)/2;\n      //\u8fd9\u91cc\u53ea\u80fd\u7528mid+1,\u5426\u5219\u4f1a\u6808\u6ea2\u51fa  \n      //split\n        sort(a,begin,mid);\n        sort(a,mid+1,end);\n      //merge  \n        merge(a,begin,mid,end);\n      }\n}\n</code></pre></li> <li> <p>\u8fed\u4ee3\u5199\u6cd5</p> <ul> <li>\u601d\u60f3\u662f\u4ece\u5c0f\u5230\u5927\uff0c\u4ece\u4e24\u4e2a\u4e00\u7ec4\u9010\u6b65\u6269\u5927 <pre><code>void merge(int a[],int begin, int mid,int end ){\n  int i=begin,j=mid+1,k=0;\n  //\u5b9a\u4e49\u597dlen\u5f88\u5173\u952e\uff0c\u65b9\u4fbf\u7b97\u51fan\u4e2d\u5143\u7d20\u6570\u91cf\n  int len=end-begin+1;\n  int b[len];\n  while(k&lt;=len-1){\n    if(j&gt;end||i&lt;=mid&amp;&amp;a[i]&lt;a[j]){\n      b[k++]=a[i++];\n    }else{\n      b[k++]=a[j++];\n    }\n  }\n  //\u5c06b\u4e2d\u6392\u597d\u5e8f\u7684\u62f7\u8d1d\u56dea\n  for(int m=0;m&lt;len;m++){\n    a[begin+m]=b[m];\n  }\n}\nint main(){\n  for(int k=1;k&lt;len;k*=2){//k\u8868\u793a\u5df2\u7ecf\u6392\u597d\u7684\u4e2a\u6570\n    for(int i=0;i&lt;len;i=i+2*k){\n//\u4f20\u9001\u5bf9\u5e94\u7684begin mid end \u4e0b\u6807\uff0c\u6ce8\u610f\u4e0d\u8981\u51fa\u73b0\u91cd\u53e0\n//min\u662f\u4e3a\u4e86\u9632\u6b62\u4e0b\u6807\u8d8a\u754c\n      merge(a,i,min(i+k-1,len-1),min(i+2*k-1,len-1));\n    }\n  }\n}\n</code></pre></li> </ul> </li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n*logn)</p> </li> </ul>"},{"location":"FDS/sort/#_7","title":"\u5feb\u6392","text":"<p>\u5feb\u6392\u9002\u7528\u4e8e\u5927\u91cf\u6570\u636e\uff0c\u5982\u679c\u6570\u636e\u5c0f\u4e8e20\uff0c\u4e00\u822c\u66ff\u6362\u4e3a\u63d2\u5165\u6392\u5e8f</p> <ol> <li>\u786e\u5b9a\u54e8\u5175\u4f4d\u7f6e\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u6570\uff0c\u4e4b\u540e\u4e00\u4e2a\u6570\u548c\u4e2d\u95f4\u6570\u4e09\u4e2a\u6570\u7684\u4e2d\u4f4d\u6570\u4e3a\u54e8\u5175 <pre><code>int mid3(int a[],int left,int right){\n//first,a[right]&gt;=a[mid]&gt;=a[left]\n  int mid=(right+left)/2;\n  if(a[left]&gt;a[mid]){\n    swap(a[left],a[mid]);\n  }\n  if(a[mid]&gt;a[right]){\n    swap(a[mid],a[right]);\n  }\n  if(a[left]&gt;a[right]){\n    swap(a[left],a[right]);\n  }\n//\u628a\u4e2d\u95f4\u7684\u54e8\u5175\u653e\u5230\u5bfc\u6570\u7b2c\u4e8c\u7684\u4f4d\u7f6e\n  swap(a[mid],a[right-1]);\n///return pivot\n  return a[right-1];\n}\n</code></pre></li> <li>\u6838\u5fc3\u7b97\u6cd5\uff0c\u786e\u5b9a\u54e8\u5175\u540e\u7528\u4e24\u4e2a\u6307\u9488i,j\uff0c\u628a\u6570\u7ec4\u5206\u4e3a\u6bd4\u54e8\u5175\u5c0f\u548c\u6bd4\u54e8\u5175\u5927\u7684\u4e24\u90e8\u5206 <pre><code>void qsort(int a[],int left,int right){\n  int i,j;\n  if(left+cutoff&lt;right){//\u8fd9\u91cc\u662f\u4fdd\u8bc1\u5927\u91cf\u5143\u7d20\u7528\u5feb\u6392\uff0c\u5c11\u91cf\u7528\u63d2\u5165\n    int pivot=mid3(a,left,right);\n    i=left;j=right-1;//\u6ce8\u610fi,j\u662f\u6bd4\u5f53\u524d\u8981\u6bd4\u8f83\u7684\u5143\u7d20\u5c111\u7684\n    for(;;){\n      while(a[++i]&lt;pivot){}\n      while(a[--j]&gt;pivot){}\n      if(i&lt;j) swap(a[i],a[j]);\n      else break;\n    } \n    swap(a[i],a[right-1]);//\u4ea4\u6362a[i]\u548c\u54e8\u5175,\u6ce8\u610f\u4e0d\u662fj,\u56e0\u4e3ai\u6307\u5411\u7684\u5143\u7d20\u624d\u6bd4\u54e8\u5175\u5c0f\n    qsort(a,left,i-1);\n    qsort(a,i+1,right);   \n  }else{\n    insertsort(a);\n  }\n}\n</code></pre></li> </ol>"},{"location":"FDS/sort/#_8","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u5de6\u53f3\u4e24\u8fb9\u5feb\u6392\u548cpartition \\(T(N)=T(i)+T(N-i-1)+cN\\) - worst case:T(n)=T(n-1)+cN,T(N)=O(n^2) - best case:T(n)=2T(n/2)+cN,T(n)=O(nlogn) - average:T(n)=O(nlogn)</p>"},{"location":"FDS/sort/#bucket-sort","title":"\u6876\u6392\u5e8f(Bucket sort)","text":"<ul> <li>\u5047\u8bben\u4e2a\u540c\u5b66\uff0c\u603b\u5171\u53ef\u80fd\u7684\u5206\u6570\u4e3am\uff0c\u6309\u5206\u6570\u6392\u5e8f</li> <li>\u8981\u6c42n&gt;&gt;m</li> <li>\u5efa\u7acbm\u4e2a\u6876\uff0c\u5f53\u67d0\u4e2a\u540c\u5b66\u7684\u5206\u6570\u662fi\u65f6\uff0c\u5c31\u628a\u4ed6\u653e\u5728count[i]\u91cc\uff08\u53ef\u4ee5\u4ee5\u94fe\u8868\u7b49\u5f62\u5f0f\uff09</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(m+n)=O(n)</li> </ul>"},{"location":"FDS/sort/#radix-sort","title":"\u57fa\u51c6\u6392\u5e8f\uff08Radix sort\uff09","text":""},{"location":"FDS/sort/#lsdleast-significant-digit-first","title":"LSD:least significant digit first","text":"<p>1.\u5efa\u7acb0-9\u7684\u6876</p> <p>2.\u653e\u7f6e\uff1a\u5c06\u5143\u7d20\u6309\u7167\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u653e\u5165\u6876\u4e2d(\u4e2a\u4f4d\u5f00\u59cb\uff0c\u4f9d\u6b21\u589e\u52a0\u4f4d)</p> <p>3.\u6536\u96c6\u5e76\u66f4\u65b0\u6876\uff1a\u6309\u7167\u4ece0\u52309\u7684\u6876\u5e8f\u628a\u6876\u4e2d\u7684\u5143\u7d20\u6309\u7167\u7b2c\u4e8c\u5b57\u7b26\u653e\u5728\u5bf9\u5e94\u7684\u6876\u4e2d\uff08\u6ce8\u610f\u6876\u4e2d\u662f\u6709\u5e8f\u7684\uff09</p> <p>4.\u91cd\u590d3\u76f4\u5230\u5b57\u7b26\u6392\u5b8c</p>"},{"location":"FDS/sort/#msd","title":"MSD","text":"<p>1.\u5148\u6309\u7167\u6700\u91cd\u8981\u7684\u5173\u952e\u8bcd\u653e\u5165\u6876\u4e2d</p> <p>2.\u5728\u6bcf\u4e2a\u6876\u4e2d\u6309\u7167\u7b2c\u4e8c\u91cd\u8981\u7684\u5173\u952e\u8bcd\u6392\u5e8f</p> <p>3.\u91cd\u590d2\u76f4\u5230\u6240\u6709\u7684\u5173\u952e\u8bcd\u6392\u5b8c</p>"},{"location":"FDS/tree/","title":"\u6811","text":""},{"location":"FDS/tree/#1","title":"1. \u57fa\u672c\u6982\u5ff5\u548c\u6027\u8d28","text":"<ul> <li>edge=node-1</li> <li>\u4e8c\u53c9\u6811\u4e2d\uff0c\u53f6\u8282\u70b9\u7684\u4e2a\u6570\u7b49\u4e8e\u5ea6\u4e3a0\u7684\u8282\u70b9\u4e2a\u6570\u52a0\u4e00</li> <li>\u4e8c\u53c9\u6811\u53ea\u6709\u5ea6\u4e3a0\uff0c1\uff0c2\u7684\u8282\u70b9\uff0c\u5229\u7528\u8282\u70b9\u4e0e\u8fb9\u7684\u5173\u7cfb\u8bbe\u65b9\u7a0b\u6c42\u89e3</li> <li>\u8282\u70b9\u7684\u5ea6\uff1a\u5b50\u8282\u70b9\u7684\u4e2a\u6570</li> <li>\u6811\u7684\u5ea6\uff1amax{degree of the node}</li> <li>\u53f6\uff1a\u6ca1\u6709\u5b69\u5b50\uff08\u5ea6\u4e3a0\uff09\u7684\u8282\u70b9</li> <li>length of path:edges\u7684\u6570\u91cf</li> <li>\u9ad8\u5ea6height\uff1a\u5230\u53f6\u8282\u70b9\u6700\u8fdc\u7684\u8def\u7684\u957f\u5ea6</li> <li>\u6df1\u5ea6depth\uff1a\u5230\u6839\u8282\u70b9\u7684\u957f\u5ea6   \u4e00\u9897\u6811\u8f6c\u5316\u4e3a\u4e8c\u53c9\u6811\uff0c\u5148\u5e8f\u7b49\u4e8e\u5148\u5e8f\uff0c\u539f\u6811\u7684\u540e\u5e8f\u7b49\u4e8eBT\u7684\u4e2d\u5e8f</li> </ul>"},{"location":"FDS/tree/#11","title":"1.1 \u5b8c\u7f8e\u4e8c\u53c9\u6811","text":"<ul> <li>\u6811\u9664\u4e86\u53f6\u8282\u70b9\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u586b\u6ee1\uff0c\u5373\u53f6\u8282\u70b9\u5ea6\u4e3a0\uff0c\u5176\u4f59\u8282\u70b9\u5ea6\u4e3a2</li> <li>\u6df1\u5ea6\u4e3ah\uff0c\u5219\u8282\u70b9\u6570\u4e3a\\(2^{h+1}-1\\)</li> </ul>"},{"location":"FDS/tree/#12","title":"1.2 \u5b8c\u5168\u4e8c\u53c9\u6811","text":"<ul> <li>\u5b8c\u7f8e\u4e8c\u53c9\u6811\u7684\u524dn\u4e2a\u8282\u70b9\uff08\u6309\u5c42\u5e8f\u904d\u5386\uff09</li> <li>\u5373\u53ea\u6709\u6700\u5de6\u8fb9\u7684\u8282\u70b9\u6ca1\u6709\u586b\u5145\uff0c\u4e14\u4f18\u5148\u5411\u5de6\u586b\u5145</li> </ul>"},{"location":"FDS/tree/#13-min-tree","title":"1.3 min tree","text":"<p>\u6bcf\u4e2a\u7236\u4eb2\u8282\u70b9\u90fd\u6bd4\u5b69\u5b50\u8282\u70b9\u5c0f</p>"},{"location":"FDS/tree/#14","title":"1.4 \u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<ul> <li>\u5de6\u5b50\u6811\u4e3a\u524d\u9a71\uff0c\u53f3\u5b50\u6811\u4e3a\u540e\u9a71</li> </ul>"},{"location":"FDS/tree/#2","title":"2. \u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":""},{"location":"FDS/tree/#preorder-traversal","title":"\u5148\u5e8f\u904d\u5386\uff08preorder traversal\uff09","text":"<ul> <li>\u987a\u5e8f\uff1a\u5148\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u5728\u4f9d\u6b21\u8bbf\u95ee\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811</li> <li>\u4ee3\u7801\uff1a <pre><code>preorder(tree_ptr tree)\nif(tree){\n    visit(tree);\n    preorder(tree-&gt;left);\n    preorder(tree-&gt;right);\n}\n</code></pre></li> </ul>"},{"location":"FDS/tree/#postorder","title":"\u540e\u7eed\u904d\u5386\uff08postorder\uff09","text":"<ul> <li>\u987a\u5e8f\uff1a\u5148\u8bbf\u95ee\u5de6\u5b50\u8282\u70b9\uff0c\u518d\u8bbf\u95ee\u53f3\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8bbf\u95ee\u6839\u8282\u70b9</li> <li>\u4ee3\u7801\uff1a <pre><code>postorder(tree_ptr tree)\nif(tree){\n    postorder(tree-&gt;left);\n    postorder(tree-&gt;right);\n    visit(tree);\n}\n</code></pre></li> </ul>"},{"location":"FDS/tree/#inorder","title":"\u4e2d\u5e8f\u904d\u5386\uff08inorder\uff09","text":"<ul> <li>\u987a\u5e8f\uff1a\u5148\u8bbf\u95ee\u5de6\u5b50\u8282\u70b9\uff0c\u518d\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u6700\u540e\u8bbf\u95ee\u53f3\u5b50\u8282\u70b9</li> <li>\u4ee3\u7801\uff1a <pre><code>inorder(tree_ptr tree)\nif(tree){\n    inorder(tree-&gt;left);\n    visit(tree);\n    inorder(tree-&gt;right);\n}\n</code></pre></li> </ul>"},{"location":"FDS/tree/#3","title":"3. \u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff1a \u5c42\u5e8f\u904d\u5386","text":"<ul> <li>\u987a\u5e8f\uff1a\u4e00\u5c42\u4e00\u5c42\uff0c\u4ece\u5de6\u5230\u53f3</li> <li>\u4ee3\u7801\uff1a <pre><code>void levelorder(tree_ptr tree)\n    enqueue(tree);\n    while(queue is not empty){\n        visit(T=dequeue());\n        for(each child c of T)\n            enqueue(c);\n    }\n</code></pre></li> </ul>"},{"location":"FDS/tree/#4","title":"4. \u4e2d\u5e8f\u548c\u540e\u7eed\uff08\u524d\u5e8f\uff09\u904d\u5386\u751f\u6210\u4e8c\u53c9\u6811","text":"<p>\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u540e\u5e8f\uff08\u524d\u5e8f\uff09\u627e\u5230\u6839\u8282\u70b9\uff0c\u518d\u5229\u7528\u4e2d\u5e8f\u627e\u5230\u6839\u8282\u70b9\u5de6\u53f3\u7684\u5b50\u6811 \u4ee3\u7801\u5b9e\u73b0\uff1a <pre><code>int findtree(int inorder[],int size,int k){\n    for(int i=0;i&lt;size;i++){\n        if(inorder[i]==k){\n            return i;\n        }\n    }\n}\ntree buildtree_in_postorder(int inorder[],int n1,int postorder[],int n2){\n    if(n1==0){\n        return NULL;\n    }\n    tree *t=(tree*)malloc(sizeof(tree));\n    t-&gt;data=postorder[n2-1];\n    int root=findtree(inorder,n1,t-&gt;data);\n    t-&gt;left=buildtree(inorder,root,postorder,root);\n    t-&gt;right=buildtree(inorder+root+1,n1-root-1,postorder+root,n2-root-1);\n    return t;\n}\ntree buildtree_in_preorder(int inorder[],int n1,int preorder[],int n2){\n    if(n1==0){\n        return NULL;\n    }\n    tree *t=(tree*)malloc(sizeof(tree));\n    t-&gt;data=preorder[0];\n    int root=findtree(inorder,n1,t-&gt;data);\n    t-&gt;left=buildtree(inorder,root,preorder+1,root);\n    t-&gt;right=buildtree(inorder+root+1,n1-root-1,preorder+root,n2-root-1);\n    return t;\n}\n</code></pre></p>"},{"location":"FDS/tree/#5-binary-searching-tree","title":"5. binary searching tree","text":""},{"location":"FDS/tree/#51-find","title":"5.1 find","text":"<p>\u5faa\u73af\u7248\u672c\uff1a <pre><code>tree* find(int x,tree* tree);\nwhile(tree){\n    if(tree-&gt;data==x){\n        return tree;\n    }else if(tree-&gt;data&lt;x){\n        tree=tree-&gt;right;\n    }else{\n        tree=tree-&gt;left;\n    }\n}\nreturn NULL;\n</code></pre> \u9012\u5f52\u7248\u672c\uff1a <pre><code>tree* find(int x,tree* tree){\n    if(tree==NULL){\n        return NULL;\n    }\n    if(tree-&gt;data==x){\n        return tree;\n    }else if(tree-&gt;data&lt;x){\n        return find(x,tree-&gt;right);\n    }else{\n        return find(x,tree-&gt;left);\n    }\n}\n</code></pre></p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(depth)</li> </ul>"},{"location":"FDS/tree/#findmin-and-findmax","title":"findmin and findmax","text":"<ul> <li>\u6700\u5c0f\u7684\u662f\u5de6\u5b50\u6811\u7684\u5de6\u4e00\u4e2a\u53f6\u8282\u70b9\uff0c\u6700\u5927\u7684\u662f\u53f3\u5b50\u6811\u6700\u53f3\u7684\u4e00\u4e2a\u53f6\u8282\u70b9 <pre><code>tree* findmin(tree* t){\n    if(t){\n        while(t-&gt;left){//\u7ec8\u6b62\u6761\u4ef6\u662ft\u7684\u5de6\u8282\u70b9\u5df2\u7ecf\u8d70\u5b8c\uff0c\u6b64\u65f6\u627e\u5230\u6700\u5de6\u8fb9\u7684\u4e00\u4e2a\u8282\u70b9\n            t=t-&gt;left;\n        }\n    }\n    return t;\n}\n</code></pre></li> </ul>"},{"location":"FDS/tree/#52-insert","title":"5.2 insert","text":"<pre><code>tree* insert(int x,tree* t){\n    if(t==NULL){\n        t=(tree*)malloc(sizeof(tree));\n        t-&gt;data=x;\n        t-&gt;left=t-&gt;right=NULL;\n    }else{\n        if(x&gt;t-&gt;data){\n            t-&gt;right=insert(x,t-&gt;right);\n        }else{\n            t-&gt;left=insert(x,t-&gt;left);\n        }\n    }\n    return t;\n}\n</code></pre>"},{"location":"FDS/tree/#53-delete","title":"5.3 delete","text":"<pre><code>tree* delete(int x,tree* t){\n    if(t==NULL){\n        printf(\"error\");\n    }else if(t-&gt;data&gt;x){\n        t-&gt;left=delete(x,t-&gt;left);\n    }else if(t-&gt;data&lt;x){\n        t-&gt;right=delete(x,t-&gt;right);\n    }else{\n        if(t-&gt;right&amp;&amp;t-&gt;left){\n            tree* tempcell=findmin(t-&gt;right);\n            t-&gt;data=tempcell-&gt;data;\n            t-&gt;right=delete(t-&gt;data,t-&gt;right);\n        }else{\n            tree *tempcell=t;\n            if(t-&gt;right==NULL){\n                t=t-&gt;left;\n            }else{\n                t=t-&gt;right;\n            }\n            free(tempcell);\n        }\n    }\n    return t;\n}\n</code></pre> <ul> <li>time complexity=O(depth)</li> </ul>"},{"location":"ads/","title":"Index","text":"<p>Note</p> <p>\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5</p>"},{"location":"ads/algorithm/","title":"\u7b97\u6cd5","text":""},{"location":"ads/algorithm/#backtracking","title":"\u56de\u6eaf\u6cd5\uff08backtracking\uff09","text":"<p>\u6838\u5fc3\uff1a\u6784\u5efa\u51b3\u7b56\u6811\uff0c\u6709\u9519\u8bef\u5c31\u56de\u6eaf\uff0c\u6ce8\u610f\u526a\u679d\uff08pruning\uff09</p> <ul> <li>\u516b\u7687\u540e\u95ee\u9898</li> <li>\u6536\u8d39\u516c\u8def\u95ee\u9898\uff08turnpike reconstruction problem\uff09\uff1a\u4e00\u5171\u6709n(n-1)/2\u5bf9\u8ddd\u79bb\u3002\u6211\u4eec\u5148\u901a\u8fc7\u6700\u5927\u8ddd\u79bb\u786e\u5b9a\u4e24\u4e2a\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u4f9d\u6b21\u53d6\u5269\u4e0b\u7684\u6700\u5927\u7684\u8ddd\u79bb\u6765\u786e\u5b9a\u65b0\u7684\u70b9\u7684\u4f4d\u7f6e\uff08\u6ce8\u610f\u8fd9\u4e2a\u8ddd\u79bb\u4e00\u5b9a\u662f\u4e0e\u4e24\u4e2a\u7aef\u70b9\u7684\uff0c\u6240\u4ee5\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\uff09\uff0c\u518d\u901a\u8fc7\u56de\u6eaf\u5f97\u5230\u6700\u7ec8\u7ed3\u679c</li> </ul> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code>bool reconstruct(DistType x[],DistSet D,int N,int left,int right){\n//D\u662f\u7ed9\u5b9a\u7684\u8ddd\u79bb\u96c6\u5408\n//x[1]...x[left-1]\uff0cx[right+1]...x[N]\u662f\u5df2\u7ecf\u786e\u5b9a\u4f4d\u7f6e\u7684\u70b9\n    bool Found=false;\n    if(is_empty(D)) return True;\n    D_max=Find_Max(D);\n//case1:x[right]=D_max\n    //check\u51fd\u6570\u7528\u6765\u5224\u65ad\u8fd9\u4e2a\u63d2\u5165\u5e26\u6765\u7684\u65b0\u8ddd\u79bb\u662f\u5426\u4e0eD\u4e2d\u8ddd\u79bb\u51b2\u7a81\n    OK=Check(D_max,N,left,right);//pruning\n    if(OK){\n        x[right]=D_max;\n    //\u66f4\u65b0D\u4e2d\u7684\u8ddd\u79bb\n        for(i=1;i&lt;left;i++) delete(x[right]-x[i],D);\n        for(i=right+1;i&lt;=N;i++) delete(x[i]-x[right],D);\n    //\u9012\u5f52\n        Found=reconstruct(x,D,N,left,right+1);\n        if(!Found){\n            //\u6709\u51b2\u7a81\uff0c\u56de\u6eaf\uff0c\u6062\u590d\u4e4b\u524d\u5220\u6389\u7684\u8ddd\u79bb\n            for(i=1;i&lt;left;i++) insert(x[right]-x[i],D);\n            for(i=right+1;i&lt;=N;i++) insert(x[i]-x[right],D);\n        }\n    }\n//case2:x[left]=x[N]-D_max\n    if(!Found){\n        OK=check(x[N]-D_max,N,left,right);\n        if(OK){\n            for(i=1;i&lt;left;i++) delete(x[left]-x[i],D);\n            for(i=right+1;i&lt;=N;i++) delete(x[i]-x[left],D);\n            Found=reconstruct(x,D,N,left+1,right);\n            if(!Found){\n            //\u6709\u51b2\u7a81\uff0c\u56de\u6eaf\uff0c\u6062\u590d\u4e4b\u524d\u5220\u6389\u7684\u8ddd\u79bb\n            for(i=1;i&lt;left;i++) insert(x[left]-x[i],D);\n            for(i=right+1;i&lt;=N;i++) insert(x[i]-x[left],D);\n            }\n        }\n    }\n    return Found;\n}\n</code></pre> <ul> <li>stick problem</li> </ul>"},{"location":"ads/algorithm/#_2","title":"\u793a\u4f8b\u4ee3\u7801","text":"<pre><code>bool Backtracking(int i){\n    bool Found=false;\n    if(i&gt;N) return True;\n    for(each xi){\n        OK=check(xi); //pruning\n        if(OK){\n            count xi in;\n            Found=Backtracking(i+1);\n            if(!Found){\n                undo(i);\n            }\n        }\n        if(Found) break;\n    }\n    return Found;\n}\n</code></pre>"},{"location":"ads/algorithm/#_3","title":"\u535a\u5f08","text":"<ul> <li>\u6700\u5927\u6700\u5c0f\u641c\u7d22\uff1a\u5f53\u81ea\u5df1\u7684\u56de\u5408\u65f6\uff0c\u627e\u6536\u76ca\u6700\u5927\u7684\uff0c\u5f53\u5bf9\u624b\u56de\u5408\u65f6\uff0c\u627e\u6536\u76ca\u6700\u5c0f\u7684</li> <li>\\(\\alpha-\\beta \\ pruning\\)</li> </ul>"},{"location":"ads/algorithm/#_4","title":"\u5206\u6cbb\u6cd5","text":"<p>\u4e3b\u5b9a\u7406\uff1a \\(T(N)=aT(N/b)+O(N^klog^pN)\\) \\(\\(T(N)=\\begin{equation}     \\begin{cases}     O(N^{log_ba})  &amp; a&gt;b^k \\\\     O(N^klog^{p+1}N) &amp; a=b^k \\\\     O(N^klog^pN) &amp; a&lt;b^k       \\end{cases} \\end{equation}\\)\\)</p>"},{"location":"ads/algorithm/#_5","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"ads/algorithm/#_6","title":"\u8fd1\u4f3c\u7b97\u6cd5","text":"<p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u7b97\u6cd5A,\u5982\u679c\u5bf9\u4efb\u610f\u7684\u793a\u4f8b\uff08instance\uff09I \u90fd\u6709\uff1amax{A(I)/opt(I),opt(I)/A(I)}&lt;=p(I),\u5219\u79f0A\u662f\u4e00\u4e2ap(n)-approximation algorithm</p>"},{"location":"ads/algorithm/#bin-packing","title":"\u88c5\u7bb1\u95ee\u9898\uff08Bin packing\uff09","text":"<ul> <li>next fit</li> <li>\u4e00\u4e2a\u4e00\u4e2a\u7bb1\u5b50\u88c5\uff0c\u5982\u679c\u4e00\u4e2a\u7bb1\u5b50\u88c5\u4e0d\u4e0b\u65b0\u7269\u4f53\uff0c\u5c31\u628a\u8fd9\u4e2a\u7bb1\u5b50\u5c01\u8d77\u6765\u7136\u540e\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50</li> </ul> <p>!!!      next fit\u7684\u8fd1\u4f3c\u6bd4\u4e3a2.</p> <pre><code>\u8bc1\u660e\uff1a\u8bbe\u7b97\u6cd5\u7528\u4e86k\u4e2a\u7bb1\u5b50\uff0c\u6bcf\u4e2a\u7bb1\u5b50\u88c5\u4e86$S_k$\u4e2a\u7269\u4f53\u3002\u5219$S_{i}+S_{i-1} \\geq 1$,\u5219$opt=\u603b\u7269\u4f53\u6570\u91cf\\geq k-1/2$\n</code></pre> <ul> <li>first fit</li> <li>\u628a\u7269\u4f53\u88c5\u5230\u7b2c\u4e00\u4e2a\u6709\u7a7a\u4f4d\u7684\u7bb1\u5b50\u91cc\uff0c\u5982\u679c\u6ca1\u6709\u518d\u65b0\u5f00\u7bb1\u5b50</li> <li>best fit</li> <li>\u628a\u7269\u4f53\u88c5\u5230\u6709\u7a7a\u4f4d\u4e14\u7a7a\u4f59\u6700\u5c0f\u7684\u7bb1\u5b50\u91cc\uff08\u5145\u5206\u5229\u7528\u7a7a\u95f4\uff09\uff0c\u5982\u679c\u6ca1\u6709\u518d\u65b0\u5f00\u7bb1\u5b50</li> <li>worst fit</li> <li>\u628a\u7269\u4f53\u88c5\u5230\u6709\u7a7a\u4f4d\u4e14\u7a7a\u4f59\u6700\u5927\u7684\u7bb1\u5b50\u91cc\uff0c\u5982\u679c\u6ca1\u6709\u518d\u65b0\u5f00\u7bb1\u5b50</li> </ul> <p>first fit\u548cbest fit \u8fd1\u4f3c\u6bd4\u4e3a1.7;\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u628a\u8f93\u5165\u6309\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u6765\u4f18\u5316\u3002</p>"},{"location":"ads/algorithm/#knapsack-problem","title":"\u80cc\u5305\u95ee\u9898 Knapsack problem","text":""},{"location":"ads/algorithm/#fractional-version","title":"Fractional version","text":"<ul> <li>\u6bcf\u4e2a\u7269\u4f53\u90fd\u53ef\u4ee5\u5207\u5272\u6210\u4e00\u90e8\u5206\u518d\u653e\u5165\u80cc\u5305</li> <li>\u7b97\u6cd5\uff1a\u901a\u8fc7\u6027\u4ef7\u6bd4(v/w)\u8fdb\u884c\u8d2a\u5fc3\u7b97\u6cd5</li> </ul>"},{"location":"ads/algorithm/#01","title":"01\u80cc\u5305","text":"<p>\u572801\u80cc\u5305\u95ee\u9898\u4e0b\uff0c\u6bcf\u4e2a\u7269\u4f53\u53ea\u6709\u5b8c\u5168\u653e\u5165\u548c\u4e0d\u653e\u5165\u4e24\u79cd\u9009\u62e9\u3002</p> <p>\u7528\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\uff1a\u8bbef[i][j]\u8868\u793a\u524di\u4e2a\u7269\u4f53\u5bb9\u91cf\u4e3aj\u65f6\u7684\u6700\u5927\u4ef7\u503c\uff0c\u663e\u7136\u5bf9\u7b2ci\u4e2a\u7269\u4f53\uff0c\u6709\u653e\u548c\u4e0d\u653e\u4e24\u79cd\u9009\u62e9\uff1a</p> <p>f[ i ][ j ]=max{ f[ i - 1 ][ j ],f[ i - 1 ][ j - w[ i ] ]+ v[ i ] }</p> <p>\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(nV),V\u8868\u793a\u7269\u54c1\u4ef7\u503c\u4e4b\u548c\u3002\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u4f2a\u591a\u9879\u5f0f\u65f6\u95f4\u7684\uff0c\u56e0\u4e3a\u8f93\u5165\u6309\u7167\u4e8c\u8fdb\u5236\u8868\u793a\u540e\u662f\u6307\u6570\u7ea7\u522b\u7684</p>"},{"location":"ads/algorithm/#_7","title":"\u591a\u9879\u5f0f\u8fd1\u4f3c\u65b9\u6848","text":"<p>A polynomial-time approximation scheme(PTAS) is a family of algorithm {\\(A_k\\)} such that for any k&gt;0,\\(A_k\\) is a (1+k)-approximation algorithm that run in polynomial in n (given k is a constant).</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u901a\u8fc7k\u6765\u8c03\u8282\u8fd1\u4f3c\u6bd4\uff0c\u7136\u540e\u628ak\u770b\u6210\u4e00\u4e2a\u5e38\u6570\uff0c\u6b64\u65f6\u5f97\u5230\u7684\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u3002</p> <ul> <li>PTAS:\\(O(n^{\\frac{1}{k}})\\)</li> <li>efficient PTAS(EPTAS): \\(O(f({\\frac{1}{k}}) poly(n))\\)</li> <li>full PTAS(FPTAS): \\(O(poly({\\frac{1}{k}})poly(n))\\)</li> </ul>"},{"location":"ads/algorithm/#k-center-problem","title":"k-center problem","text":""},{"location":"ads/avl/","title":"week 1","text":""},{"location":"ads/avl/#avl-tree","title":"AVL tree","text":""},{"location":"ads/avl/#_1","title":"\u5b9a\u4e49","text":"<p>\u8bbe\u8ba1avl tree\u7684\u76ee\u7684\u5c31\u662f\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\uff0c\u4ece\u800c\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u51cf\u4f4e\u3002</p> <p>\u5b9a\u4e49avl tree:</p> <ol> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u4ed6\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u7684\uff1b</li> <li>\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\uff1b</li> </ol> <p>height\uff1a\u5b9a\u4e49\u7a7a\u6811\u7684\u9ad8\u5ea6\u4e3a-1\uff0c\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u6811\u7684\u9ad8\u5ea6\u4e3a0\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>balance factor\uff08\u5e73\u8861\u56e0\u5b50\uff09\uff1a\\(BF(node)=h_L-h_R\\) .</p> <p>\u5bf9\u4e8eavl tree,BF=0\uff0c-1\uff0c1.</p>"},{"location":"ads/avl/#_2","title":"\u64cd\u4f5c","text":"<p>\u65cb\u8f6c\uff1a</p> <p>\u65cb\u8f6c\u9700\u8981O(1)\u7684\u65f6\u95f4\uff0c\u65cb\u8f6c\u7684\u76ee\u7684\u662f\u53ef\u4ee5\u6539\u53d8\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\uff0c\u4f7f\u6811\u66f4\u5e73\u8861\u3002</p> <p>\u65cb\u8f6c\u53ef\u4ee5\u770b\u4f5c\u628a\u67d0\u4e2a\u8282\u70b9\u201c\u62ce\u8d77\u6765\u201d\uff0c\u62ce\u8d77\u6765\u7684\u90a3\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e5f\u4f1a\u6709\u76f8\u5e94\u7684\u53d8\u5316\u3002</p> <p>\u63d2\u5165\uff1a</p> <p>\u63d2\u5165\u5b8c\u5143\u7d20\u540e\u8981\u6062\u590davl tree\u7684\u6027\u8d28\uff0c\u6b64\u65f6\u4ece\u4e0b\u5f80\u4e0a\u627e\u5230\u7b2c\u4e00\u4e2aBF\u4e0d\u6b63\u5e38\u7684\u8282\u70b9\uff0c\u6b64\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>RR/LL case:\u63d2\u5165\u5728\u53f3\uff08\u5de6\uff09\u513f\u5b50\u7684\u53f3\uff08\u5de6\uff09\u5b50\u6811\u4e0a\uff0c\u6b64\u65f6\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff1b </li> <li>RL/LR case\uff1a\u63d2\u5165\u5728\u53f3\uff08\u5de6\uff09\u513f\u5b50\u7684\u5de6\uff08\u53f3\uff09\u5b50\u6811\u4e0a\uff0c\u6b64\u65f6\u8fdb\u884c\u4e24\u6b21\u65cb\u8f6c\uff1b </li> </ol> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u8282\u70b9\u5728\u4e00\u6761\u7ebf\u4e0a\u65f6\uff0c\u4e00\u6b21\u65cb\u8f6c\u5c31\u80fd\u8c03\u6574\u597d\u9ad8\u5ea6\uff1b\u5f53\u8282\u70b9\u5448\u73b0\u952f\u9f7f\u72b6\uff0c\u8981\u7528\u4e24\u6b21\u65cb\u8f6c\u8fdb\u884c\u8c03\u6574\u3002</p>"},{"location":"ads/avl/#_3","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>avl tree\u7684\u7ed3\u6784\u5b9a\u4e49\uff0c\u8fd9\u91cc\u4f7f\u7528\u9ad8\u5ea6\u6765\u8ba1\u7b97\u5e73\u8861\u56e0\u5b50\uff0c\u66f4\u597d\u7ef4\u62a4\uff1a</p> <pre><code>typedef struct _node{\n    int data;\n    int height;\n    struct _node* left;\n    struct _node* right;\n}avltree;\n\nint get_height(avltree* t){\n    if(t){\n        return t-&gt;height;\n    }else{\n        return -1;\n    }\n}\n</code></pre> <p>\u63d2\u5165\u7684\u5b9e\u73b0\uff0c\u5148\u6309\u7167BST\u7684\u63d2\u5165\u65b9\u6cd5\u8fdb\u884c\u9012\u5f52\uff0c\u7136\u540e\u8fdb\u884c\u76f8\u5e94\u7684\u65cb\u8f6c\u4ee5\u7ef4\u62a4avltree\u7684\u6027\u8d28\uff1a <pre><code>avltree* insert(avltree* t,int x){\n    if(t){\n        if(x&lt;t-&gt;data){\n            t-&gt;left=insert(t-&gt;left,x);\n            if(get_height(t-&gt;left)-get_height(t-&gt;right)&gt;=2){\n                if(x&lt;t-&gt;left-&gt;data){\n                    t=LL(t);\n                }else{\n                    t=LR(t);\n                }\n            }\n        }else if(x&gt;t-&gt;data){\n            t-&gt;right=insert(t-&gt;right,x);\n            if(get_height(t-&gt;right)-get_height(t-&gt;left)&gt;=2){\n                if(x&lt;t-&gt;right-&gt;data){\n                    t=RL(t);   \n                }else{\n                    t=RR(t);\n                }\n            }\n        }\n    }else{\n        t=(avltree*)malloc(sizeof(avltree));\n        t-&gt;data=x;\n        t-&gt;height=0;\n        t-&gt;right=NULL;\n        t-&gt;right=NULL;  \n    }\n    t-&gt;height=max(get_height(t-&gt;right),get_height(t-&gt;left))+1;\n    return t;\n}\n</code></pre></p> <p>\u56db\u79cd\u65cb\u8f6c\u7684\u5b9e\u73b0\uff0c\u81ea\u5df1\u753b\u56fe\u7136\u540e\u4fee\u6539\u5bf9\u5e94\u6307\u9488\u5373\u53ef\uff0c\u6ce8\u610f\u9ad8\u5ea6\u7684\u7ef4\u62a4\uff1a <pre><code>avltree* LL(avltree* t){\n    avltree* temp=t-&gt;left;\n    t-&gt;left=temp-&gt;right;\n    temp-&gt;right=t;\n    t-&gt;height=max(get_height(t-&gt;right),get_height(t-&gt;left))+1;\n    temp-&gt;height=max(get_height(temp-&gt;right),get_height(temp-&gt;right))+1;\n    return temp;\n}\n\navltree* RR(avltree* t){\n    avltree* temp=t-&gt;right;\n    t-&gt;right=temp-&gt;left;\n    temp-&gt;left=t;\n    t-&gt;height=max(get_height(t-&gt;right),get_height(t-&gt;left))+1;\n    temp-&gt;height=max(get_height(temp-&gt;right),get_height(temp-&gt;right))+1;\n    return temp;\n}\n\navltree* LR(avltree* t){\n    avltree* temp=t-&gt;left-&gt;right;\n    t-&gt;left-&gt;right=temp-&gt;left;\n    avltree* temp1=t-&gt;left;\n    t-&gt;left=temp-&gt;right;\n    temp-&gt;left=temp1;\n    temp-&gt;right=t;\n    t-&gt;height=max(get_height(t-&gt;right),get_height(t-&gt;left))+1;\n    temp1-&gt;height=max(get_height(temp1-&gt;right),get_height(temp1-&gt;right))+1;\n    temp-&gt;height=max(t-&gt;height,temp1-&gt;height)+1;\n    return temp;\n}\n\navltree* RL(avltree* t){\n    avltree* temp=t-&gt;right-&gt;left;\n    t-&gt;right-&gt;left=temp-&gt;right;\n    avltree* temp1=t-&gt;right;\n    t-&gt;right=temp-&gt;left;\n    temp-&gt;right=temp1;\n    temp-&gt;left=t;\n    t-&gt;height=max(get_height(t-&gt;right),get_height(t-&gt;left))+1;\n    temp1-&gt;height=max(get_height(temp1-&gt;right),get_height(temp1-&gt;right))+1;\n    temp-&gt;height=max(t-&gt;height,temp1-&gt;height)+1;\n    return temp;\n}\n</code></pre></p>"},{"location":"ads/avl/#_4","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u5f15\u8bba\uff1a\u5b58\u5728\u67d0\u4e2a\u5e38\u6570c\uff0c\u4f7f\u5f97 \\(n \\geq c^h\\).</p> <p>\u8bc1\u660e\uff1a\u8bbe\u4e00\u4e2a\u9ad8\u5ea6\u4e3a h \u7684 avl tree \u7684\u8282\u70b9\u7684\u6700\u5c11\u4e2a\u6570\u4e3aN(h),\u90a3\u4e48\u4ed6\u7684\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5206\u522b\u4e3aN(h-1),N(h-2),\u4e0d\u96be\u5f97\u51fa \\(N(h)=N(h-1)+N(h-2)+1\\).\u4ece\u800c\u63a8\u51faN(h)\u4e0e\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6709\u5173\u7cfb\uff1a\\(N(h)=F_{h+3}-1\\)\u3002\u5f97\u51fac\u662f\u4e0e\\(\\sqrt5+1 \\over 2\\)\u6709\u5173\u7684\u5e38\u6570\u3002</p> <p>\u6709\u5f15\u8bba\u63a8\u51fa\uff0c$h \\leq \\log_c n $,\u5219\u6709h=O(logN).</p>"},{"location":"ads/avl/#amortized-analysis","title":"\u644a\u8fd8\u5206\u6790 Amortized Analysis","text":"<p>worst-case bound &gt; amortized bound &gt; average bound</p> <p>\u644a\u8fd8\u5206\u6790\u5254\u9664\u6389\u4e86\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u6700\u597d\u4ece\u4e00\u4e2a\u7a7a\u7684\u7ed3\u6784\u5f00\u59cb\u5206\u6790\u4e00\u8fde\u4e32\u64cd\u4f5c\u7684\u5e73\u5747\u82b1\u8d39\u65f6\u95f4\u3002</p> <p>\u4ee5\u6808\u64cd\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6709pop,push\u548cmultipush( \u8fde\u7eed\u5f39\u51fak\u4e2a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(k) )\u4e09\u79cd\u64cd\u4f5c\u3002</p>"},{"location":"ads/avl/#aggregate-analysis","title":"\u805a\u5408\u5206\u6790 Aggregate analysis","text":"<p>n\u6b21\u64cd\u4f5c\u7684\u6700\u574f\u65f6\u95f4\u4e3aT(n),\u90a3\u4e48 amortized cost = T(n)/n.</p> <p>\u5bf9\u4e8e\u6808\u7684\u4f8b\u5b50\uff0c\u6700\u574f\u60c5\u51b5\u662fpush n-1 \u6b21\uff0c\u7136\u540emultipush \u4e00\u6b21\u3002T(n)=2n-2=O(n),\u644a\u8fd8\u590d\u6742\u5ea6\u4e3aO(1).</p>"},{"location":"ads/avl/#accounting-method","title":"\u6838\u7b97\u6cd5 Accounting method","text":"<p>\u6838\u7b97\u6cd5\u7684\u601d\u60f3\u5728\u4e8e\u53d6\u957f\u8865\u77ed\uff0c\u5373\u6211\u4eec\u53ef\u4ee5\u628a\u591a\u51fa\u6765\u7684\u6d88\u8017\u5b58\u5728Credits\u91cc\uff0c\u4e0d\u591f\u65f6\u518d\u53d6\u51fa\u6765\u7528\u3002\u8bb0\u6bcf\u4e00\u6b21\u7684\u644a\u8fd8\u6210\u672c\u4e3a \\(\\widehat{c_i}\\) ,actural cost\u4e3a \\(c_i\\)\uff0c \u6709\uff1a\\(\\(\\widehat{c_i}=c_i+credits\\)\\)</p> <p>\u9700\u8981\u6ce8\u610f\uff0c\u6211\u4eec\u9700\u4fdd\u8bc1\u644a\u8fd8\u6210\u672c\u6bd4\u5b9e\u9645\u603b\u82b1\u8d39\u5927\uff0c\u5373\uff1a \\(\\(\\sum_{i=1}^{n}{\\widehat{c_i}} \\geq \\sum_{i=1}^{n}{c_i}\\)\\) \u6216\uff1a \\(\\(\\sum_{i=1}^{n}credits \\geq 0\\)\\)</p> <p>\u4f8b\u5b50\uff1a </p>"},{"location":"ads/avl/#potential-method","title":"Potential method","text":"<p>\u7531\u4e8e\u6838\u7b97\u6cd5\u7684\u5747\u644a\u6210\u672c\u4e0d\u4e00\u5b9a\u597d\u8bbe\u8ba1\uff0c\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49\u7b2ci\u6b21\u64cd\u4f5c\u4e3a\\(D_i\\),\u6709\uff1a \\(credits_i=f(D_i)-f(D_{i-1})\\)\u3002</p> <p>\u8fd9\u6837\u53ea\u8981\u4fdd\u8bc1 \\(D_0\\) \u6700\u5c0f\u5373\u53ef\uff0c\u4e00\u4e2a\u6280\u5de7\u662f\u8ba9\u4ed6\u7b49\u4e8e0.</p> <p>\u4f8b\u5b50\uff1a </p>"},{"location":"ads/avl/#splay-tree","title":"Splay tree","text":"<p>Splay tree\u7684\u60f3\u6cd5\u662f\u7528\u66f4\u5c11\u7684\u4ee3\u4ef7\u6765\u5b9e\u73b0\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ed6\u4f1a\u5c06\u6bcf\u4e00\u6b21\u67e5\u627e\u5230\u7684\u8282\u70b9\u79fb\u52a8\u5230\u6839\u8282\u70b9\u4e0a\u3002\u4ed6\u5b9e\u73b0\u4e86\uff1a\u4ece\u4e00\u4e2a\u7a7a\u6811\u5f00\u59cb\u8fdb\u884cM\u6b21\u64cd\u4f5c\uff0c\u90a3\u4e48\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7O(MlogN).</p> <p>\u6ce8\u610f\u4e0d\u662f\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(logN),\u800c\u662f\u5747\u644a\u4e0b\u6765\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(MlogN).</p>"},{"location":"ads/avl/#_5","title":"\u63d2\u5165","text":"<p>\u7528bst\u7684\u65b9\u6cd5\u8fdb\u884c\u63d2\u5165\uff0c\u7136\u540e\u628a\u521a\u521a\u63d2\u5165\u7684\u8282\u70b9\u901a\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u79fb\u52a8\u5230\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\u3002</p> <p>\u5b9a\u4e49\u521a\u63d2\u5165\u7684\u8282\u70b9\u4e3ax,\u7236\u8282\u70b9\u4e3aP,\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e3aG.</p> <ol> <li>zig-zag(\u952f\u9f7f\u5f62):\u5bf9x\u8fdb\u884c double rotation\uff0c\u64cd\u4f5c\u4e0eLR/RL case\u5b8c\u5168\u76f8\u540c; </li> <li>zig-zig(\u4e00\u6761\u7ebf)\uff1a\u5148\u63d0\u8d77P,\u5728\u63d0\u8d77x; </li> </ol> <p>\u5982\u6b64\u53cd\u590d\u64cd\u4f5c\uff0c\u76f4\u5230x\u5230\u8fbe\u6839\u8282\u70b9\u3002</p>"},{"location":"ads/avl/#_6","title":"\u5220\u9664","text":"<ol> <li>\u9996\u5148\u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\uff0c\u7528\u4e0a\u8ff0splay\u65b9\u6cd5\u628a\u4ed6\u79fb\u52a8\u5230\u6839\u8282\u70b9\u4f4d\u7f6e</li> <li>\u5220\u9664\u6839\u8282\u70b9\uff0c\u6b64\u65f6\u5269\u4e0b\u5de6\u53f3\u4e24\u9897\u5b50\u6811 \\(T_L\\) , \\(T_R\\) .</li> <li>\u627e\u5230\u5de6\u5b50\u6811 \\(T_L\\) \u6700\u5927\u7684\u8282\u70b9\uff0c\u7528\u4e0a\u8ff0splay\u65b9\u6cd5\u628a\u4ed6\u79fb\u52a8\u5230\u6839\u8282\u70b9\u4f4d\u7f6e\uff0c\u7531\u4e8e\u8fd9\u662f\u5de6\u5b50\u6811\u6700\u5927\u7684\u8282\u70b9\uff0c\u6240\u4ee5\u5f97\u5230\u7684\u65b0\u6811\u6ca1\u6709\u53f3\u5b50\u6811\u3002\u56e0\u6b64\u76f4\u63a5\u628a\u539f\u6765\u7684 \\(T_R\\) \u63a5\u5230\u53f3\u8fb9\u5373\u53ef\u3002</li> </ol>"},{"location":"ads/avl/#_7","title":"\u5747\u644a\u5206\u6790","text":"<p>\u524d\u7f6e\u516c\u5f0f\uff1a\u82e5 $a+b\\leq c $,\u5219 \\(loga+logb\\leq 2logc-2\\)</p> <p>\u6211\u4eec\u8bbe\u7f6e\u7684\u5e42\u51fd\u6570\u4e3a\u5b50\u6811\u7684\u70b9\u7684\u6570\u91cf\u7684\u5bf9\u6570\uff0c\u7531\u4e8e\u5b50\u6811\u70b9\u6570\u91cf\u53ef\u80fd\u5f88\u591a\uff0c\u6240\u4ee5\u53d6\u5bf9\u6570\u4f7f\u5176\u53d8\u5c0f\uff0c\u66f4\u6709\u5229\u4e8e\u4f30\u7b97\u51fa\u7cbe\u786e\u7684\u4e0a\u754c\u3002\u5373R(i)=log S(i).\u5176\u4e2drank\u7ea6\u7b49\u4e8e\u6811\u9ad8\u3002</p> <p>\u63a5\u4e0b\u6765\u5206\u6790splay tree\u67e5\u8be2\u7684\u4e09\u79cd\u64cd\u4f5c,\u901a\u8fc7\u653e\u7f29\uff0c\u628acredit\u653e\u7f29\u5230\u53ea\u4e0eX\u8fd9\u4e2a\u8282\u70b9\u6709\u5173\u3002\u540c\u65f6\u7531\u4e8ezig-zag\u548czig-zig\u53ef\u80fd\u4f1a\u64cd\u4f5c\u591a\u6b21\uff0c\u6240\u4ee5\u653e\u7f29\u65f6\u5fc5\u987b\u6d88\u6389\u5e38\u65702\uff08\u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f\uff09\u3002\u8fd8\u6709\u4e00\u70b9\u6280\u5de7\uff0c\u5982zig-zag\u4e2d\\(R_1(G)=R_2(X)\\):</p> <p></p> <p>\u5176\u4e2dzig-zag\u548czig-zig\u4e0d\u77e5\u9053\u4f1a\u64cd\u4f5c\u591a\u5c11\u6b21\uff0czig\u81f3\u591a\u64cd\u4f5c\u4e00\u6b21\uff0c\u6211\u4eec\u90fd\u628a\u4ed6\u4eec\u653e\u7f29\u5230 \\(3[R_2(x)-R_1(x)]\\) .\u7531\u4e8e\u6bcf\u6b21\u7ed3\u675f\u65f6\u7684\\(R_2(x)\\)\u662f\u4e0b\u4e00\u6b21\u64cd\u4f5c\u7684\\(R_1(x)\\)\uff0c\u6240\u4ee5\u90fd\u4f1a\u6d88\u6389\uff0c\u53ea\u5269\u4e0b\u6700\u540e\u7684 \\(\\sum_{i=1}^{n}{\\widehat{c_i}}=3[R_2(root)-R_1(leaf)]=O(logN)\\) ,</p>"},{"location":"ads/binomialqueue/","title":"week 5","text":""},{"location":"ads/binomialqueue/#binomial-queue","title":"Binomial Queue \u4e8c\u9879\u961f\u5217","text":""},{"location":"ads/binomialqueue/#_1","title":"\u5b9a\u4e49","text":"<ol> <li>\u4e8c\u9879\u961f\u5217\u662f\u4e00\u4e2a\u68ee\u6797\uff08\u5373\u5f88\u591a\u6811\u7ec4\u6210\uff09\uff0c\u6bcf\u68f5\u6811\u5177\u6709\u5806\u7684\u6027\u8d28\uff08\u4e0b\u6587\u4ee5\u6700\u5c0f\u5806\u4e3a\u4f8b\uff09</li> <li>\u9ad8\u5ea6\u4e3a0\u7684\u4e8c\u9879\u6811\u53ea\u6709\u4e00\u4e2a\u8282\u70b9</li> <li>\u9ad8\u5ea6\u4e3ak\u7684\u4e8c\u9879\u6811\\(B_k\\)\u662f\u628a\u4e00\u4e2a\\(B_{k-1}\\)\u4f5c\u4e3a\u53e6\u4e00\u9897\\(B_{k-1}\\)\u7684\u6839\u8282\u70b9\u7684\u5b50\u6811</li> </ol>"},{"location":"ads/binomialqueue/#_2","title":"\u6027\u8d28","text":"<p>\u57fa\u672c\u6027\u8d28\uff1a</p> <ul> <li>\\(B_k\\) \u6839\u8282\u70b9\u6709k\u4e2a\u5b69\u5b50\uff0c\u5206\u522b\u662f\\(B_0,B_1,...B_{k-1}\\)</li> <li>\\(B_k\\)\u6709\\(2^k\\)\u4e2a\u8282\u70b9</li> <li>\\(B_k\\)\u6df1\u5ea6\u4e3ad\u7684\u8282\u70b9\u6570\u91cf\u4e3a\\(C_k^d\\)</li> </ul> <p>\u7531\u4e8e\u4efb\u4f55\u6570\u5b57\u90fd\u53ef\u4ee5\u88ab\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u56e0\u6b64\u77e5\u9053\u8282\u70b9\u6570\u5c31\u53ef\u4ee5\u552f\u4e00\u786e\u8ba4\u4e8c\u9879\u961f\u5217</p>"},{"location":"ads/binomialqueue/#findmin","title":"Findmin","text":"<p>\u76f4\u63a5\u904d\u5386\u6240\u6709\u7684\u6839\u8282\u70b9\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u5c0f\u7684\u503c\u3002\u7531\u4e8e\u6700\u591alogN\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6T=O(logN)</p> <p>\u4f46\u662f\u8fd9\u6837\u7684\u64cd\u4f5c\u6709\u4e9b\u5197\u4f59\uff0c\u4e00\u4e2a\u4f18\u5316\u662f\u4e00\u76f4\u8bb0\u5f55\u6700\u5c0f\u7684\u503c\u5e76\u7ef4\u62a4\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002\u8003\u8bd5\u5199\u8fd9\u4e2a</p>"},{"location":"ads/binomialqueue/#merge","title":"Merge","text":"<p>\u7c7b\u4f3c\u4e8c\u8fdb\u5236\u7684\u52a0\u6cd5\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u961f\u5217\u6709\\(B_k\\),\u5c31\u76f4\u63a5\u4fdd\u7559\uff1b\u4e24\u4e2a\u90fd\u6709\\(B_k\\)\uff0c\u5c31\u5408\u5e76\uff1b\u52a0\u4e0a\u8fdb\u4f4d\u6709\u4e09\u4e2a\\(B_k\\)\uff0c\u5c31\u5408\u5e76\u4e24\u4e2a\u7559\u4e00\u4e2a\u3002</p> <p>\u5408\u5e76\u4e24\u4e2a\u4e8c\u9879\u961f\u5217\u662fO(1),\u6700\u591a\u5408\u5e76O(logN)\u6b21\uff08\u8981\u6c42\u4e8c\u9879\u961f\u5217\u6309\u9ad8\u5ea6\u6392\u5e8f\uff09\uff0c\u6545\u65f6\u95f4\u590d\u6742\u5ea6T=O(logN)\u3002</p>"},{"location":"ads/binomialqueue/#insert","title":"Insert","text":"<p>\u770b\u4f5c\u7279\u6b8a\u7684merge\u64cd\u4f5c\u3002</p>"},{"location":"ads/binomialqueue/#_3","title":"\u5747\u644a\u5206\u6790","text":"<p>\u4ece\u4e00\u4e2a\u7a7a\u7684\u4e8c\u9879\u961f\u5217\u5f00\u59cb\u63d2\u5165n\u4e2a\u5143\u7d20\u662fO(n)\u7684\u590d\u6742\u5ea6</p> <p>\u805a\u5408\u6cd5\uff1a</p> <p>\u63d2\u5165\u6709\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e00\u79cd\u662fstep:\u6539\u53d8\u6839\u8282\u70b9\uff1b\u4e00\u79cd\u662flink\uff1a\u5408\u5e76\u64cd\u4f5c\u3002\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u90fd\u67091\u6b21step\uff0c\u6240\u4ee5\u603bstep=N\u3002</p> <p>\u5408\u5e76\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\u4e8c\u8fdb\u5236\u52a0\u6cd5\uff0clink=1\u5bf9\u5e9401-&gt;10,link=2\u5bf9\u5e94011-&gt;100,\u4ee5\u6b64\u7c7b\u63a8\uff0c\u603blink=\\(\\frac{1}{4}+\\frac{1}{8}*2+\\frac{1}{16}*3\u00b7\u00b7\u00b7=O(N)\\)</p> <p>\u56e0\u6b64\u4ece0\u5f00\u59cb\u63d2\u5165\uff0c\u6bcf\u6b21\u63d2\u5165\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3aO(1)</p> <p>\u52bf\u80fd\u6cd5\uff1a</p> <p>\u6ce8\u610f\u5230\u6bcf\u6b21link\u6811\u7684\u6570\u91cf\u51cf\u5c111\uff0c\u6bcf\u6b21step\u6811\u7684\u6570\u91cf\u589e\u52a01\uff0c\u5047\u8bbe\u8fdb\u884cc\u6b21\u64cd\u4f5c\uff0c\u90a3\u4e48\u67091\u6b21step\u548cc-1\u6b21link,\u56e0\u6b64\u589e\u52a0\u7684\u6811\u7684\u6570\u91cf\u4e3a2-c(\u53ef\u80fd\u4e3a\u8d1f\u6570)\u3002</p> <p>\u90a3\u4e48\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570\\(D_i\\)\u4e3a\u6811\u7684\u6570\u91cf\uff0c\u90a3\u4e48\\(D_0=0\\)\u4e14\\(D_i&gt;=0\\)\u3002\u6709\uff1a\\(\\hat{c_i}=c_i+D_i-D_{i-1}=c_i+2-c_i=2\\),\u6709\u603b\u5747\u644a\u6210\u672c=O(2N)=O(N),\u5f97\u8bc1\u3002</p>"},{"location":"ads/binomialqueue/#deletemin","title":"Deletemin","text":"<ol> <li>Findmin,T=O(logN)</li> <li>\u5220\u9664\u6700\u5c0f\u8282\u70b9\uff0c\u628a\u6240\u6709\u5b69\u5b50\u8282\u70b9\u770b\u4f5c\u4e00\u4e2a\u65b0\u7684\u4e8c\u9879\u961f\u5217\uff0cT=O(1)</li> <li>merge,T=O(logN)</li> </ol> <p>\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logN)</p>"},{"location":"ads/binomialqueue/#_4","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u91c7\u7528left-child-next-sibling with linked lists\u7684\u7ed3\u6784\uff0c\u5176\u4e2d\u5b50\u6811\u6309\u9ad8\u5ea6\u964d\u5e8f\u6392\u5217\uff08\u4e4b\u6240\u4ee5\u964d\u5e8f\u662f\u56e0\u4e3a\u5408\u5e76\u64cd\u4f5c\u65f6\uff0c\u662f\u628a\u4e00\u4e2a\\(B_k\\)\u63d2\u5165\u6210\u53e6\u4e00\u4e2a\\(B_k\\)\u7684\u5b50\u6811\uff0c\u964d\u5e8f\u6392\u5e8f\u53ea\u8981O(1)\u65f6\u95f4\u5c31\u53ef\u4ee5\u627e\u5230\u4f4d\u7f6e\uff09</p> <p>\u7ed3\u6784\u5b9a\u4e49\uff1a <pre><code>typedef struct BinNode{\n    int data;\n    struct BinNode* leftchild;\n    struct BinNode* NextSibling;\n}Bintree;\n\nstruct BinQueue{\n    int currentsize;\n    Bintree* tree[Maxsize];\n}\n</code></pre></p> <p>\u5408\u5e76\u64cd\u4f5c(equal size)\uff1a</p> <pre><code>Bintree* combine(Bintree* T1,Bintree* T2){\n    //\u9ed8\u8ba4T1\u6839\u8282\u70b9\u5c0f\u4e8eT2\n    if(T1-&gt;data&gt;T2-&gt;data){\n        return Bintree(T2,T1);\n    }\n    T2-&gt;nextsibling=T1-&gt;leftchild;\n    T1-&gt;leftchild=T2;\n    return T1;\n}\n</code></pre> <p>merge\u64cd\u4f5c:</p> <pre><code>BinQueue merge(BinQueue H1,BinQueue H2){\n    Bintree* T1,T2,carry=NULL;\n    H1-&gt;currentsize+=H2-&gt;currentsize;//\u9ed8\u8ba4\u8fd4\u56deH2\n    for(int i=0,j=1;j&lt;=H1-&gt;currentsize;i++,j*=2){\n        T1=H1-&gt;tree[i],T2=H2-&gt;tree[i];\n        //!!\u662f\u628a\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\n        switch(4*!!carry+2*!!T2+!!T1){\n            case 0:/*000*/  break;\n            case 1:/*001*/  break;\n            case 2:/*010*/  H1-&gt;tree[i]=T2;\n                            H2-&gt;tree[i]=NULL;\n                            break;\n            case 3:/*011*/  carry=combine(T1,T2);\n                            H1-tree[i]=H2-&gt;tree[i]=NULL;\n                            break;\n            case 4:/*100*/  H1-tree[i]=carry;\n                            carry=NULL;\n                            break;\n            case 5:/*101*/  carry=combine(T1,carry);\n                            H1-&gt;tree[i]=NULL;\n                            break;\n            case 6:/*110*/  carry=combine(carry,T2);\n                            H2-&gt;tree[i]=NULL;\n                            carry=NULL;\n                            break;\n            case 7:/*111*/  H1-&gt;tree[i]=carry;\n                            carry=combine(T1,T2);\n                            H2-&gt;tree[i]=NULL;\n                            break;\n        }\n    }\n    return H1;\n}\n</code></pre> <p>Deletemin\uff1a</p> <pre><code>int deletemin(BinQueue H){\n    Binqueue deletedqueue;\n    Bintree* deletetree,oldroot;\n    int min=infinity;\n    int i,j,mintree; //mintree is the index of the minimum item\n//step1:find the minimum element\n    for(i=0;i&lt;Maxsize;i++){\n        if(H-&gt;tree[i]&amp;&amp;H-&gt;tree[i]-&gt;data&lt;min){\n            min=H-&gt;tree[i]-&gt;data;\n            mintree=i;\n        }\n    }\n    deletetree=H-&gt;tree[i];\n//step2:remove the mintree from H\n    H-&gt;tree[i]=NULL;\n//step3.1:remove the root\n    oldroot=deletetree;\n    deletetree=deletetree-&gt;leftchild;\n    free(oldroot);\n//step3.2 creat H'\n    for(j=mintree-1;j&gt;=0;j--){\n        deletedqueue-&gt;tree[j]=deletetree;\n        deletetree=deletetree-&gt;nextsibling;\n        deletequeue-&gt;tree[j]-&gt;nextsibling=NULL;\n    }\n    H-&gt;currentsize-=deletequeue-&gt;currentsize+1;\n//step4:merge\n    H=merge(H,deletequeue);\n    return minitem;\n}\n</code></pre>"},{"location":"ads/invertindex/","title":"week4","text":""},{"location":"ads/invertindex/#inverted-file-index","title":"\u5012\u6392\u7d22\u5f15\uff08Inverted file index\uff09","text":"<ul> <li>\u94fe\u8868\u5b58\u50a8,\u4fdd\u5b58\u5355\u8bcd\u5728\u90a3\u4e9b\u6587\u6863\u51fa\u73b0\u4ee5\u53ca\u51fa\u73b0\u6b21\u6570</li> <li>\u5f53\u591a\u4e2a\u5355\u8bcd\u540c\u65f6\u641c\u7d22\u65f6\uff0c\u4ece\u51fa\u73b0\u6700\u5c11\u7684\u8bcd\u5165\u624b\u641c\u7d22\u4f1a\u66f4\u5feb\uff0c\u56e0\u4e3a\u51fa\u73b0\u591a\u7684\u8bcd\u4e0d\u80fd\u533a\u5206\u5404\u4e2a\u6587\u6863\u7684\u533a\u522b</li> </ul>"},{"location":"ads/invertindex/#_1","title":"\u6784\u5efa\u5012\u6392\u7d22\u5f15","text":"<ul> <li>\u9010\u4e2a\u8bfb\u53d6\u6784\u5efa\uff0c\u6ce8\u610f\uff1a</li> <li>Word stemming(\u63d0\u53d6\u8bcd\u8bed\u4e3b\u5e72):\u5982\u8fc7\u53bb\u5f0f\uff0c\u8fdb\u884c\u65f6\u7b49\u8bed\u6cd5\u770b\u4f5c\u540c\u4e00\u4e2a\u5355\u8bcd</li> <li>stop word\uff1a\u5373\u53bb\u6389\u51fa\u73b0\u6b21\u6570\u8fc7\u591a\u7684\u8bcd</li> <li>\u8bfb\u53d6\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</li> <li>searching tree\uff1a\u5982B+ tree</li> <li>hashing</li> <li> <p>\u50a8\u5b58\u65f6\u5185\u5b58\u4e0d\u591f\uff0c\u5219\u50a8\u5b58\u8fdb\u78c1\u76d8\uff0c\u78c1\u76d8\u53ef\u4ee5\u6709\u4e24\u79cd\u5206\u5e03\u5f0f\u50a8\u5b58\u65b9\u5f0f\uff1a</p> <ul> <li>\u7b2c\u4e00\u79cd\u65b9\u5f0f\u6548\u7387\u66f4\u9ad8\uff0c\u4f46\u51fa\u6545\u969c\u65f6\u5f71\u54cd\u8f83\u5927\uff0c\u6240\u4ee5\u4e00\u822c\u5de5\u7a0b\u4e0a\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f </li> </ul> </li> <li> <p>dynamic indexing\uff08\u63d2\u5165\uff0c\u5220\u9664\uff09</p> </li> <li>main index\u548cauxiliary index</li> <li>\u641c\u7d22\u5f15\u64ce\u7684\u8bc4\u4ef7:</li> <li>\u51c6\u786e\u5ea6(precision):\u51c6\u786e\u7387\u5f88\u9ad8\u5219\u53ef\u80fd\u8fd4\u56de\u7684\u7ed3\u679c\u4e0d\u5305\u62ec\u6240\u6709\u7684\u6b63\u786e\u7f51\u9875</li> <li>\u53ec\u56de\u7387(recall)\uff1a\u53ec\u56de\u7387\u5f88\u9ad8\u5219\u53ef\u80fd\u8fd4\u56de\u7ed3\u679c\u5305\u542b\u4e86\u6240\u6709\u6b63\u786e\u7f51\u9875\uff0c\u4f46\u4e5f\u5305\u542b\u4e86\u5f88\u591a\u9519\u8bef\u7f51\u9875</li> </ul>"},{"location":"ads/liftheap/","title":"week3","text":""},{"location":"ads/liftheap/#leftist-heap","title":"Leftist heap\uff08\u5de6\u5f0f\u5806/\u5de6\u503e\u6811\uff09","text":"<p>null path length(npl):\u4ece\u8282\u70b9\u5230NULL\u7684\u6700\u77ed\u8def\u5f84\u3002\u89c4\u5b9anpl(NULL)=-1,npl(leaf)=0\u3002</p> <p>\u5de6\u504f\u6811\uff1a\u6ee1\u8db3\u6700\u5c0f\uff08\u5927\uff09\u5806\u7684\u6027\u8d28\uff08\u4f46\u4e0d\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\uff0c\u5e76\u5bf9\u4efb\u610f\u8282\u70b9x,npl\uff08left child\uff09&gt;=npl(right child)</p> <p>\u4ee5\u4e0b\u4ee5\u6700\u5c0f\u5806\u4e3a\u4f8b\u5b50\u3002</p>"},{"location":"ads/liftheap/#_1","title":"\u6027\u8d28","text":"<p>\u5b9a\u7406\uff1aright path\u6709r\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5de6\u504f\u6811\u81f3\u5c11\u6709\\(2^r-1\\)\u4e2a\u8282\u70b9</p>"},{"location":"ads/liftheap/#merge","title":"merge","text":"<p>merge\u662f\u6838\u5fc3\u64cd\u4f5c\uff0c\u4ee5\u4e0b\u662f\u9012\u5f52\u7684\u5b9e\u73b0\uff1a</p> <ol> <li>\u5982\u679c\u4e24\u4e2a\u5806\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u5373\u53ef\uff1b</li> <li>\u5982\u679c\u4e24\u4e2a\u5806\u90fd\u975e\u7a7a\uff0c\u6211\u4eec\u6bd4\u8f83\u4e24\u4e2a\u5806\u7684\u6839\u7ed3\u70b9key\u7684\u5927\u5c0f\uff0ckey\u5c0f\u7684\u662fH1\uff0ckey\u5927\u7684\u662fH2\uff1b</li> <li>\u5982\u679cH1\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\uff08\u6839\u636e\u5de6\u5f0f\u5806\u7684\u5b9a\u4e49\uff0c\u53ea\u8981\u5b83\u6ca1\u6709\u5de6\u5b69\u5b50\u5c31\u4e00\u5b9a\u662f\u5355\u70b9\uff09\uff0c\u76f4\u63a5\u628aH2\u653e\u5728H1\u7684\u5de6\u5b50\u6811\u5c31\u5b8c\u6210\u4efb\u52a1\u4e86\uff08\u5f88\u5bb9\u6613\u9a8c\u8bc1\u8fd9\u6837\u5f97\u5230\u7684\u7ed3\u6784\u7b26\u5408\u5de6\u5f0f\u5806\u6027\u8d28\uff0c\u6b64\u65f6Npl\u4e5f\u6ca1\u6709\u53d8\u5316\uff09\uff1b</li> <li>\u5982\u679cH1\u4e0d\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\uff0c\u5219\u5c06H1\u7684\u53f3\u5b50\u6811\u548cH2\u5408\uff08\u8fd9\u662f\u9012\u5f52\u7684\u4f53\u73b0\uff09</li> <li>\u5982\u679c H1 \u7684Npl \u6027\u8d28\u88ab\u8fdd\u53cd\uff0c\u5219\u4ea4\u6362\u5b83\u7684\u4e24\u4e2a\u5b50\u6811\uff1b</li> <li>\u66f4\u65b0 H1 \u7684Npl\uff0c\u7ed3\u675f\u4efb\u52a1.</li> </ol> <pre><code>Heap merge(Heap H1,Heap H2){\n    if(H1==NULL){\n        return H1;\n    }\n    if(H2==NULL){\n        return H2;\n    }\n    if(H1-&gt;key&lt;H2-&gt;key){\n        return merge1(H1,H2);\n    }else{\n        return merge1(H2,H1);\n    }\n}\n\nHeap merge1(Heap H1,Heap H2){\n    if(H1-&gt;left==NULL){\n        H1-&gt;left=H2;\n    }else{\n        H1-&gt;right=merge(H1-&gt;right,H2);\n        if(H1-&gt;left-&gt;npl&lt;H1-&gt;right-&gt;npl){\n            swap_children(H1);\n        }\n        H1-&gt;npl=H1-&gt;right-&gt;npl+1;\n    }\n    return H1;\n}\n</code></pre> <p>\u4ee5\u4e0b\u662f\u8fed\u4ee3\u7248\u672c\uff1a 1. \u6bd4\u8f83\u6839\u8282\u70b9\u5927\u5c0f\uff0c\u628a\u6839\u8282\u70b9\u5927\u5c0f\u8f83\u5c0f\u7684\u4f5c\u4e3a\u6839\u8282\u70b9\u5e76\u4fdd\u7559\u5176\u5de6\u5b50\u6811\u3002 2. \u7ee7\u7eed\u8fed\u4ee3\u6bd4\u8f83\u4ed6\u7684\u53f3\u5b50\u6811\u548c\u5269\u4e0b\u7684\u5806\u7684\u6839\u8282\u70b9\u5927\u5c0f\uff0c\u91cd\u590d\u6b65\u9aa41\u76f4\u5230\u7ed3\u675f 3. \u4ee5\u6b64\u68c0\u67e5\u53f3\u8def\u5f84\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684npl\u5e76\u505a\u76f8\u5e94\u4fee\u590d</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u9012\u5f52\u7684\u6700\u5927\u6df1\u5ea6\u662f\u4e24\u4e2a\u5806\u7684\u53f3\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\uff0c\u90a3\u4e48T=O(logN)\u3002</p>"},{"location":"ads/liftheap/#insert","title":"insert","text":"<p>\u89c6\u4e3a\u5c06\u4e00\u4e2a\u5806\u4e0e\u4e00\u4e2a\u5355\u4e2a\u8282\u70b9\u7684merge</p>"},{"location":"ads/liftheap/#deletemin","title":"deletemin","text":"<p>\u5148\u5220\u9664\u6839\u8282\u70b9\uff0c\u7136\u540emerge\u4e24\u4e2a\u5b50\u5806</p>"},{"location":"ads/liftheap/#skew-heap","title":"skew heap\uff08\u659c\u5806\uff09","text":"<p>\u4e0eliftist heap\u76f8\u6bd4\uff0c\u4e0d\u9700\u8981\u7ef4\u62a4npl\u7684\u6027\u8d28\uff0cmerge\u64cd\u4f5c\u65e0\u8111\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u5373\u53ef\uff0c\u4ee5\u4e0b\u662f\u6ce8\u610f\u7684\u70b9\uff1a</p> <ol> <li>\u5728 base case \u662f\u5904\u7406 H \u4e0enull \u8fde\u63a5\u7684\u60c5\u51b5\u65f6\uff0c\u5de6\u5f0f\u5806\u76f4\u63a5\u8fd4\u56deH \u5373\u53ef\uff0c\u4f46\u659c\u5806\u5fc5\u987b\u770bH \u7684\u53f3\u8def\u5f84\uff0c\u6211\u4eec\u8981\u6c42H \u53f3\u8def\u5f84\u4e0a\u9664\u4e86\u6700\u5927\u7ed3\u70b9\u4e4b\u5916\u90fd\u5fc5\u987b\u4ea4\u6362\u5176\u5de6\u53f3\u5b69\u5b50\u3002</li> <li>\u5728\u975e base case \u65f6\uff0c\u82e5 H1 \u7684\u6839\u7ed3\u70b9\u5c0f\u4e8e H2\uff0c\u5982\u679c\u662f\u5de6\u5f0f\u5806\uff0c\u6211\u4eec\u9700\u8981\u5408\u5e76 H1 \u7684\u53f3\u5b50\u6811\u548c H2\u4f5c\u4e3aH1 \u7684\u65b0\u53f3\u5b50\u6811\uff0c\u6700\u540e\u518d\u5224\u65ad\u8fd9\u6837\u662f\u5426\u8fdd\u53cd\u6027\u8d28\u51b3\u5b9a\u662f\u5426\u4ea4\u6362\u5de6\u53f3\u5b69\u5b50\uff0c\u659c\u5806\u76f4\u63a5\u65e0\u8111\u4ea4\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u8fd9\u79cd\u60c5\u51b5\u90fd\u628aH1 \u7684\u5de6\u5b69\u5b50\u6362\u5230\u53f3\u5b69\u5b50\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u628a\u65b0\u5408\u5e76\u7684\u63d2\u5165\u5728H1\u7684\u5de6\u5b50\u6811\u4e0a\u3002</li> </ol>"},{"location":"ads/liftheap/#_2","title":"\u644a\u8fd8\u5206\u6790","text":"<p>\u5b9a\u4e49\uff1a\u6211\u4eec\u79f0\u4e00\u4e2a\u7ed3\u70b9P\u662f\u91cd\u7684\uff08heavy\uff09\uff0c\u5982\u679c\u5b83\u7684\u53f3\u5b50\u6811\u7ed3\u70b9\u4e2a\u6570\u81f3\u5c11\u662fP\u7684\u6240\u6709\u540e\u4ee3\u7684\u4e00\u534a\uff08\u540e\u4ee3\u5305\u62ecP\u81ea\u8eab\uff09\u3002\u53cd\u4e4b\u79f0\u4e3a\u8f7b\u7ed3\u70b9\uff08light node\uff09\u3002</p> <p>\u5f15\u7406\uff1a\u5bf9\u4e8e\u53f3\u8def\u5f84\u4e0a\u6709l\u4e2a\u8f7b\u7ed3\u70b9\u7684\u659c\u5806\uff0c\u6574\u4e2a\u659c\u5806\u81f3\u5c11\u6709\\(2^l\u22121\\)\u4e2a\u7ed3\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2an\u4e2a\u7ed3\u70b9\u7684\u659c\u5806\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u7ed3\u70b9\u4e2a\u6570\u4e3aO(logn)\u3002</p> <p>\u8bc1\u660e\uff1a\u5bf9\u4e8el=1\u663e\u7136\u6210\u7acb\uff0c\u73b0\u5728\u8bbe\u5c0f\u4e8e\u7b49\u4e8el\u90fd\u6210\u7acb\uff1b</p> <p>\u5bf9\u4e8el+1\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u627e\u5230\u53f3\u8def\u5f84\u4e0a\u7b2c\u4e8c\u4e2a\u8f7b\u7ed3\u70b9\uff0c\u90a3\u4e48\u5b83\u6240\u5728\u5b50\u6811\u5927\u5c0f\u6839\u636e\u5f52\u7eb3\u5047\u8bbe\u81f3\u5c11\u6709\\(2^l\u22121\\)\u4e2a\u7ed3\u70b9\u3002\u73b0\u5728\u8003\u8651\u7b2c\u4e00\u4e2a\u8f7b\u7ed3\u70b9\uff0c\u6839\u636e\u8f7b\u7ed3\u70b9\u5b9a\u4e49\u5b83\u7684\u5de6\u5b50\u6811\u66f4\u5927\uff0c\u800c\u53f3\u8def\u5f84\u4e0a\u7b2c\u4e8c\u4e2a\u8f7b\u7ed3\u70b9\u6240\u5728\u7684\u5b50\u6811\u5728\u5176\u53f3\u5b50\u6811\u4e2d\uff0c\u56e0\u6b64\u5b83\u7684\u5de6\u5b50\u6811\u81f3\u5c11\u6709\\(2^l\u22121\\)\u4e2a\u7ed3\u70b9\u3002\u6545\u6574\u4e2a\u5806\u81f3\u5c11\u6709\\(1+(2^l\u22121)+(2^l\u22121)=2^{l+1}\u22121\\)\u4e2a\u7ed3\u70b9\u3002</p> <p>\u644a\u8fd8\u5206\u6790\uff1a\u82e5\u6211\u4eec\u6709\u4e24\u4e2a\u659c\u5806H1\u548cH2\uff0c\u5b83\u4eec\u5206\u522b\u6709n1\u548cn2\u4e2a\u7ed3\u70b9\uff0c\u5219\u5408\u5e76H1\u548cH2\u7684\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log(n1+n2)).</p> <p>\u8bc1\u660e\uff1a\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570D(x)=x\u7684\u91cd\u8282\u70b9\u4e2a\u6570\u3002\u5206\u6790merge\u64cd\u4f5c,\u8bbe\\(H_1,H_2\\)\u5408\u6210\\(H_3\\)\uff1b\\(h_i,l_i\\)\u4e3a\\(H_i\\)\u7684\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\uff0c\u8f7b\u8282\u70b9\u4e2a\u6570,\u6709\uff1a\\(\\hat{c}=c+D(H_3)-[D(H_1)+D(H_2)]\\)\u3002</p> <p>\\(D(H_1)+D(H_2)=h_1+h_2+h\\),h\u4e3a\u6240\u6709\u4e0d\u5728\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u8282\u70b9\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u91cd\u8282\u70b9\u624d\u53ef\u80fd\u6539\u53d8\uff0c\u540c\u65f6\uff0c\u7531\u4e8e\u659c\u5806\u6bcf\u6b21\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u90a3\u4e48\u91cd\u8282\u70b9\u4e00\u5b9a\u4f1a\u53d8\u6210\u8f7b\u8282\u70b9\uff0c\u8f7b\u8282\u70b9\u53ef\u80fd\u53d8\u6210\u91cd\u8282\u70b9\uff0c\u5373\uff1a\\(D(H_3)\\leq h+l_1+l_2\\).</p> <p>\\(c=l_1+l_2+h_1+h_2\\),\u4ee3\u5165\u5f97\uff1a\\(\\hat{c} \\leq 2(l_1+l_2)=O(logN_1+logN_2)=O(log(N_1+N_2))\\)</p>"},{"location":"ads/np/","title":"np","text":"<p>\u4e0d\u53ef\u89e3\u95ee\u9898\uff1a\u505c\u673a\u95ee\u9898</p> <p>p:\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u6c42\u89e3\u7684\u95ee\u9898</p> <p>np:\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u9a8c\u8bc1\u7684\u95ee\u9898</p> <p>p\u5c5e\u4e8enp,\u56e0\u4e3a\u53ef\u89e3\u4e00\u5b9a\u53ef\u9a8c\u8bc1\u3002</p> <p>np\u91cc\u6700\u96be\u7684\u95ee\u9898npc</p>"},{"location":"ads/np/#reduction","title":"reduction\u5f52\u7ea6","text":"<p>\u5047\u8bbe\u6709\u4e24\u4e2a\u95ee\u9898X\u548cY\uff0c\u5b58\u5728\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u7684\u7b97\u6cd5f\uff0c\u4f7f\u5f97\uff1a</p> <ul> <li>\u53ef\u4ee5\u628ax\u7684\u8f93\u5165\u8f6c\u5316\u4e3ay\u7684\u8f93\u5165\uff0c\u5373\\(y_i=f(x_i)\\)</li> <li>\u8be5\u7b97\u6cd5\u4fdd\u8bc1\u4e24\u4e2a\u95ee\u9898\u8f6c\u5316\u524d\u540e\u7684\u7b54\u6848\u76f8\u540c\uff0c\u5373\\(x_i \\in X\\ \\  iff\\ \\  y_i \\in Y\\)</li> </ul> <p>Y\u66f4\u96be\uff0c\u56e0\u4e3a\u5982\u679c\u53ef\u4ee5\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3Y,\u90a3\u4e48\u5c31\u53ef\u4ee5\u89e3\u51b3X,\u5373\u4e3a\\(X\\leq _pY\\)</p>"},{"location":"ads/np/#travelling-salesman-problem","title":"travelling salesman problem \u65c5\u884c\u5546\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8fb9\u5e26\u6743\u91cd\u7684\u7684\u5b8c\u5168\u56fe\uff08\u4efb\u610f\u4e24\u70b9\u90fd\u6709\u8fb9\u76f8\u8fde\uff09\u548c\u4e00\u4e2a\u6574\u6570k\uff0c\u6c42\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u7b80\u5355\u73af\u8def\uff0c\u4f7f\u5f97\u7ecf\u5386\u6bcf\u4e2a\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6b21\uff0c\u5e76\u4e14\u8def\u5f84&lt;=k</p>"},{"location":"ads/np/#vertex-cover-problem","title":"vertex cover problem\u9876\u70b9\u8986\u76d6","text":""},{"location":"ads/np/#_1","title":"\u6700\u5927\u56e2\u95ee\u9898","text":""},{"location":"ads/np/#_2","title":"\u968f\u673a\u7b97\u6cd5","text":""},{"location":"ads/np/#_3","title":"\u9762\u8bd5\u7b56\u7565","text":"<ul> <li>\u975e\u968f\u673a\u7b97\u6cd5\uff1a\u8bb0\u5f55\u4e00\u4e2a\u6700\u597d\u7684\uff0c\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u9762\u8bd5\uff0c\u5f53\u6709\u66f4\u597d\u7684\u65f6\uff0c\u96c7\u4f63\u4ed6\u5e76\u66f4\u65b0\u6700\u5927\u503c<ul> <li>\u6700\u574f\u60c5\u51b5\uff1a\u5168\u90e8\u90fd\u88ab\u96c7\u4f63</li> </ul> </li> <li>\u968f\u673a\u7b97\u6cd5\uff1a\u5bf9\u6240\u6709\u9762\u8bd5\u8005\u8fdb\u884c\u968f\u673a\u7b97\u6cd5\uff0c\u4f7f\u5f97\u6700\u597d\u7684\u4eba\u51fa\u73b0\u5728\u524di\u4e2a\u4f4d\u7f6e\u7684\u6982\u7387\u4e3a1/i</li> </ul>"},{"location":"ads/rbtree/","title":"week 2","text":""},{"location":"ads/rbtree/#_1","title":"\u7ea2\u9ed1\u6811","text":"<p>\u7ea2\u9ed1\u6811\u6ee1\u8db3\u4ee5\u4e0b\u4e94\u6761\u5b9a\u4e49\uff1a</p> <ol> <li>\u6240\u6709\u8282\u70b9\u975e\u9ed1\u5373\u7ea2</li> <li>\u6839\u8282\u70b9\u65f6\u9ed1\u8272\u7684\uff08\u4fdd\u8bc1\u6811\u7684\u8868\u793a\u552f\u4e00\uff09</li> <li>\u6bcf\u4e2aNIL\u8282\u70b9\u662f\u9ed1\u8272\u7684</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u90a3\u4e48\u4ed6\u7684\u5b69\u5b50\u8282\u70b9\u662f\u9ed1\u8272\u7684</li> <li>\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u6709\u4ece\u4ed6\u5230\u53f6\u5b50\u8282\u70b9\uff08NIL\uff09\u7684\u8def\u5f84\u7684\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u662f\u76f8\u540c\u7684.\u5b9a\u4e49\u9ed1\u9ad8\u4e3a\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u9ed1\u8272\u8282\u70b9\u6570\u91cf\uff08\u4e0d\u5305\u542b\u81ea\u5df1\uff09</li> </ol>"},{"location":"ads/rbtree/#_2","title":"\u6027\u8d28","text":"<p>N\u4e2a\u5185\u90e8\u8282\u70b9(\u5373\u975eNIL\u8282\u70b9)\u7684\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u6700\u591a\u662f2log(N+1).</p> <p>\u5148\u8bc1\u5bf9\u4efb\u610f\u8282\u70b9x\uff0c\\(N(x)\\geq 2^{bh(x)}-1\\)</p> <p>\u5f52\u7eb3\u6cd5\u8bc1\u660e\uff1ah(x)=0\u65f6\u663e\u7136\u6210\u7acb;</p> <p>\u5047\u8bbeh(x)=k\u65f6\u6210\u7acb\uff0c\u5f53h(x)=k+1\u65f6\uff0cbh(child)=bh(x) or bh(x)-1</p> <p>\u7531\u5f52\u7eb3\u5047\u8bbe\uff1a\\(N(child)\\geq 2^{bh(child)}-1\\geq 2^{bh(x)-1}-1\\)</p> <p>\u5219 \\(N(x)=N(child1)+N(child2)+1\\geq 2^{bh(x)}-1\\),\u5f97\u8bc1\u5f15\u7406.</p> <p>\u53c8\u7531 \\(h=bh+rh\\leq 2*bh\\) \u5f97\u5230\uff1a\\(N(x)\\geq 2^{\\frac{h(x)}{2}}-1\\)\uff0c\u8bc1\u6bd5.</p>"},{"location":"ads/rbtree/#insert","title":"insert","text":"<p>\u6211\u4eec\u6309\u7167BST\u7684\u65b9\u6cd5\u63d2\u5165\uff0c\u5e76\u628a\u989c\u8272\u8bbe\u7f6e\u4e3a\u7ea2\u8272\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e0d\u7834\u574f\u6027\u8d285\uff0c\u73b0\u5728\u6211\u4eec\u8981\u6765\u7ef4\u62a4\u6027\u8d284\uff0c\u5982\u679c\u7236\u4eb2\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u628a\u4ed6\u53d8\u9ed1\uff0c\u6240\u4ee5\u53c8\u8981\u7ef4\u62a4\u6027\u8d285.</p> <p>\u5148\u770b\u53d4\u53d4\u8282\u70b9\uff0c\u5982\u679c\u53d4\u53d4\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u76f4\u63a5\u6539\u53d8\u7236\u4eb2\uff0c\u53d4\u53d4\u548c\u7237\u7237\u8282\u70b9\u989c\u8272\u5373\u53ef(\u6b64\u65f6\u628a\u95ee\u9898\u63a8\u7ed9\u7956\u7236\u8282\u70b9)\uff1b</p> <p>\u5982\u679c\u53d4\u53d4\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u518d\u770b\u53d4\u53d4\u7684\u4f84\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\u8fd1\u4f84\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u65cb\u8f6c\u6210\u8fdc\u4f84\u5b50\uff1b\u63a5\u4e0b\u6765\u6539\u53d8\u76f8\u5e94\u989c\u8272\u65cb\u8f6c\u5373\u53ef\u3002</p> <p>\u4e00\u4e2a\u60f3\u6cd5\u662f\uff0c\u54ea\u8fb9\u7684\u9ed1\u591a\u4e86\uff0c\u5c31\u901a\u8fc7\u65cb\u8f6c\uff08\u628a\u8fd9\u6761\u8fb9\u63d0\u8d77\u6765\uff09\u6765\u5e73\u8861\u9ed1\u9ad8\u3002</p> <p></p>"},{"location":"ads/rbtree/#delete","title":"delete","text":"<p>\u901a\u8fc7BST\u7684\u5220\u9664\u65b9\u6cd5\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u5220\u9664\u7684\u5bf9\u8c61\u6c38\u8fdc\u662f\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u5220\u9664\u7684\u662f\u7ea2\u8272\u8282\u70b9\uff0c\u663e\u7136\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\u3002</p> <p>\u82e5\u5220\u9664\u7684\u662f\u9ed1\u8272\u8282\u70b9\uff0c\u90a3\u4e48\u9ed1\u9ad8\u8981\u51cf\u5c0f\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u589e\u52a0\u9ed1\u8272\u8282\u70b9\uff0c\u4e0d\u59a8\u589e\u52a0\u9ed1\u8272\u5230\u5f85\u5220\u9664\u8282\u70b9X\u4e0a\uff08\u8fd9\u6837\u64cd\u4f5c\u5177\u6709\u552f\u4e00\u6027\uff09\uff0c\u628ax\u8282\u70b9\u53d8\u6210\u53cc\u9ed1\u8282\u70b9\uff0c\u7136\u540e\u901a\u8fc7\u53d8\u5316\u6d88\u9664\u53cc\u9ed1\uff0c\u6700\u540e\u518d\u5220\u9664X.</p> <p>\u5148\u770b\u5144\u5f1f\u8282\u70b9\uff0c\u82e5\u5144\u5f1f\u4e3a\u7ea2\uff0c\u8981\u5148\u8f6c\u5316\u6210\u4e3a\u9ed1\u7684\u60c5\u51b5\u3002</p> <p></p> <p>\u518d\u770b\u4f84\u5b50\u8282\u70b9,\u4f84\u5b50\u90fd\u662f\u9ed1\u8272\u5219\u5f88\u597d\u89e3\u51b3\uff1b\u82e5\u4f84\u5b50\u4e0d\u4e3a\u9ed1\u8272\uff0c\u5148\u770b\u8fdc\u4f84\u5b50\uff0c\u628a\u8fdc\u4f84\u5b50\u8f6c\u5316\u4e3a\u7ea2\u8272\u3002</p> <p></p>"},{"location":"ads/rbtree/#b","title":"B+\u6811","text":"<p>M\u9636\u7684B+\u6811\u6ee1\u8db3\uff1a</p> <ol> <li>\u6839\u8282\u70b9\u662f\u53f6\u5b50\u6216\u8005\u67092\u5230M\u4e2a\u5b69\u5b50\u8282\u70b9</li> <li>\u975e\u53f6\u5b50\u7684\u8282\u70b9\uff08\u9664\u6839\uff09\u90fd\u6709\\(\\lceil M/2\\rceil\\)\u5230M\u4e2a\u5b69\u5b50\u8282\u70b9</li> <li>\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5728\u540c\u4e00\u5c42</li> <li>\u6240\u6709\u952e\u503c\u5b58\u5728\u53f6\u5b50\u91cc\uff0c\u6bcf\u4e2a\u53f6\u5b50\u5305\u542b\\(\\lceil M/2\\rceil\\)\u5230M\u4e2a\u6570\u636e</li> <li>\u4e00\u4e2a\u8282\u70b9\u91cc\u6709\\(e_1,e_2,...e_k\\)\u4e2a\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u662f\u5b50\u6811\\(T_2,T_3,...T_{k+1}\\)\u4e2d\u5b58\u50a8\u7684\u952e\u503c\u7684\u6700\u5c0f\u503c</li> <li>\u53f6\u5b50\u8282\u70b9\u50a8\u5b58\u7684\u952e\u503c\u5927\u5c0f\u662f\u5355\u8c03\u9012\u589e\u7684</li> </ol>"},{"location":"ads/rbtree/#_3","title":"\u63d2\u5165","text":"<ol> <li>\u627e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u63d2\u5165</li> <li>\u5982\u679c\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\u8d85\u8fc7\u4e86M\uff0c\u5148\u770b\u540c\u4e00\u4e2a\u7236\u4eb2\u8282\u70b9\u5f97\u5144\u5f1f\u8282\u70b9\u6709\u6ca1\u6709\u7a7a\u4f4d\uff0c\u5982\u679c\u6709\uff0c\u5c31\u628a\u591a\u51fa\u7684\u8282\u70b9\u63a8\u8fc7\u53bb\uff1b\u5982\u679c\u5144\u5f1f\u8282\u70b9\u90fd\u6ee1\u4e86\uff0c\u5c31\u5206\u88c2\u6210\u4e24\u4e2a\u8282\u70b9</li> <li>\u6ce8\u610f\u66f4\u65b0\u5404\u4e2a\u8282\u70b9\u7684\u5bfc\u822a</li> </ol>"},{"location":"ads/rbtree/#_4","title":"\u5220\u9664","text":"<p>\u4e0e\u63d2\u5165\u7c7b\u4f3c</p>"},{"location":"ads/rbtree/#_5","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u6700\u5c11\u6709\\(\\lceil M/2\\rceil\\)\u4e2a\u5b69\u5b50\uff0c\u90a3\u4e48\u6811\u6700\u574f\u9ad8\u5ea6\\(h=\\log_{\\lceil M/2\\rceil}N\\).\u5219T(find)=O(h)=O(logN).</p>"},{"location":"co/","title":"Index","text":"<p>Note</p> <ul> <li>\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1\u7b14\u8bb0</li> <li>\u53c2\u8003\u4e66\u7c4d\uff1acomputer organization and design the hardware/software interface,risc-v edition</li> </ul>"},{"location":"co/instruction/","title":"Instruction: Language of Computer","text":""},{"location":"co/instruction/#_1","title":"Instruction: Language of Computer","text":"<p>Main memory used for composite data - arrays,structures,dynamic,data - \u53ea\u6709load,store\u53ef\u4ee5\u8bbf\u95eememory memory is byte addressed risc-v is little endian(\u5c0f\u7aef) 0x12345678 -&gt;3,2,1,0  ; 78-&gt;0</p> <p>word aligned\uff08\u5bf9\u9f50\uff09: \u5730\u5740\u6309\u5b57\u8282\u6392\u5217\uff0c\u7b2c\u4e00\u4e2a\u5730\u57400\uff0c\u7b2c\u4e8c\u4e2a\u5730\u57404\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7</p> <p>RISC-v\u4e0d\u9700\u8981word aligned</p>"},{"location":"co/instruction/#register-vs-memory","title":"register vs memory","text":"<p>registers are faster than memory</p> <p>operating on memory data requires loads and stores</p> <p>compiler must use registers for variables as much as possible</p> <p>32\u4e2a\u5bc4\u5b58\u5668\uff0cx0~x31</p> <p>and used to mask</p> <p>signed:blt bge unsigned: bltu,bgeu</p> <p>jalr x1,100(x6):\u628apc+4\u5b58\u5728x1\u91cc\u9762,\u7136\u540e\u8df3\u5230x6+100  callee jal x1,ProcedureAddress:  caller x1\u5e38\u505ara t\u548cs</p> <p>basic block\uff1a\u987a\u5e8f\u6267\u884c\uff0c\u6ca1\u6709\u8df3\u8f6c\u6307\u4ee4</p> <p>lui:\u628a\u7acb\u5373\u6570\u653e\u5230\u5bc4\u5b58\u5668\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u586b0\uff0820\u4f4d\uff09</p> <p>branch\u6307\u4ee4\u662f\u76f8\u5bf9\u4f4d\u7f6e\u8df3\u8f6c\uff0c\u7acb\u5373\u6570\u6700\u540e\u4e00\u4f4d\u4e3a0</p> <p>\u57fa\u5740\u5bfb\u5740\uff0cpc\u76f8\u5bf9\u5bfb\u5740\uff0c</p> <p>auipc rd,immed : rd = (imm&lt;&lt;12)+pc</p>"},{"location":"co/introduction/","title":"introduction","text":""},{"location":"co/introduction/#_1","title":"\u91cd\u8981\u601d\u60f3","text":"<ul> <li>\u6469\u5c14\u5b9a\u5f8b</li> <li>\u62bd\u8c61\uff08\u5982ISA\uff09</li> <li>\u52a0\u901f\u5927\u6982\u7387\u4e8b\u4ef6</li> <li>\u5e76\u884c</li> <li>\u6d41\u6c34\u7ebf</li> <li>\u9884\u6d4b</li> <li>\u5b58\u50a8\u5668\u5c42\u6b21</li> <li>\u5197\u4f59\u63d0\u9ad8\u53ef\u9760\u6027</li> </ul>"},{"location":"co/introduction/#_2","title":"\u8f6f\u4ef6","text":"<ul> <li>systems software:aimed at programmers</li> <li>applications software: aimed at users</li> <li>operating systems</li> <li>complier</li> <li>firmware(\u9a71\u52a8)</li> </ul> <p>\u9ad8\u7ea7\u8bed\u8a00\u7ecf\u8fc7\u7f16\u8bd1\u751f\u6210\u6c47\u7f16\u8bed\u8a00\uff0c\u6c47\u7f16\u8bed\u8a00\u7ecf\u8fc7\u6c47\u7f16\u751f\u6210\u4e8c\u8fdb\u5236\u673a\u5668\u6307\u4ee4\u3002</p>"},{"location":"co/introduction/#_3","title":"\u786c\u4ef6","text":""},{"location":"co/introduction/#_4","title":"\u51af\u8bfa\u4f9d\u66fc\u67b6\u6784","text":"<ul> <li>\u7531I/O\u8bbe\u5907\uff0c\u6570\u636e\u901a\u8def\uff0c\u63a7\u5236\u5668\uff0c\u50a8\u5b58\u5668\u7ec4\u6210 </li> </ul>"},{"location":"co/introduction/#_5","title":"\u5b58\u50a8\u5668\u5c42\u6b21","text":"<p>\u7531\u9876\u7aef\u5230\u5e95\u7aef\uff1a\u5feb\uff0c\u8d35\uff0c\u5c0f-&gt;\u6162\uff0c\u4fbf\u5b9c\uff0c\u5927:</p> <p>\u7f13\u5b58/cach ~ SRAM</p> <p>\u4e3b\u5b58/\u5185\u5b58 ~ DRAM (\u6613\u5931\u6027\u5b58\u50a8\u5668)</p> <p>\u8f85\u5b58/\u5916\u5b58/\u4e8c\u7ea7\u50a8\u5b58\u5668 ~ \u95ea\u5b58\uff08flash\uff09\uff0c\u78c1\u76d8(\u975e\u6613\u5931\u6027\u50a8\u5b58\u5668)</p> <p>\u53ea\u6709\u653e\u5165\u5185\u5b58\u7684\u7a0b\u5e8f\u624d\u80fd\u88abcpu\u6267\u884c\uff0ccache\u4e5f\u5728cpu\u4e2d</p>"},{"location":"co/introduction/#_6","title":"\u6307\u4ee4\u96c6\u4f53\u7cfb\u67b6\u6784","text":"<ul> <li>RISC\uff08reduced instruction set computer\uff09:MIPS\uff0cARM\u7b49</li> <li>CISC\uff08complex instruction set computer\uff09\uff1ax86\u7b49</li> </ul> <p>ISA\u8054\u7cfb\u4e86\u786c\u4ef6\u548c\u8f6f\u4ef6</p>"},{"location":"co/introduction/#_7","title":"\u751f\u4ea7","text":"<p>\u96c6\u6210\u7535\u8def\uff08Integrated Circuit\uff09</p>"},{"location":"co/introduction/#_8","title":"\u8ba1\u7b97\u673a\u6027\u80fd","text":"<ul> <li>\u6267\u884c\u65f6\u95f4\uff08execution time\uff09:\u4e00\u4e2a\u4efb\u52a1\u4ece\u5f00\u59cb\u5230\u5b8c\u6210\u7684\u65f6\u95f4</li> <li>\u541e\u5410\u91cf\uff08throughput\uff09\uff1a\u5355\u4f4d\u65f6\u95f4\u5185\u5b8c\u6210\u7684\u4efb\u52a1\u6570\u91cf</li> <li>x is n times faster than y:\\(performance_x/performance_y=execution\\_time_y/execution\\_ time_x\\)</li> </ul> <p>\u91cd\u8981\u516c\u5f0f\uff1a</p> <p>\\(\u65f6\u949f\u5468\u671f\u957f\uff08clock\\ period\uff09=1/\u65f6\u949f\u5468\u671f\u9891\u7387\uff08clock\\  rate\uff09\\)</p> <p>\\(cpu\u6267\u884c\u65f6\u95f4(CPU\\ time)=\u6307\u4ee4\u6570\uff08IC\uff09*\u6bcf\u6761\u6307\u4ee4\u7684\u5e73\u5747\u5468\u671f\u6570\uff08CPI\uff09*\u65f6\u949f\u5468\u671f\u957f\\)</p> <p>\\(MIPS=IC/(CPU\\ time * 10^6)\\)</p> <p>\u5f71\u54cd\u56e0\u7d20\uff1a</p> <ul> <li>Algorithm: affects IC, possibly CPI</li> <li>Programming language: affects IC, CPI</li> <li>Compiler: affects IC, CPI</li> <li>Instruction set architecture</li> </ul>"},{"location":"co/introduction/#_9","title":"\u529f\u8017","text":"<p>\\(P=(C*U^2*f)/2\\)</p> <p>Amdahl's law:</p> <p>\\(T_{improved}=\\dfrac{T_{affected}}{improvement\\ factor}+T_{unaffected}\\).</p> <p>SPEC\u57fa\u51c6\u6d4b\u8bd5:\u6d4b\u8bd5CPU\u6027\u80fd\u3002</p>"},{"location":"co/lab/","title":"lab record","text":""},{"location":"co/lab/#_1","title":"\u5185\u8054\u6c47\u7f16","text":"<pre><code>static uint64_t add_sp(uint64_t addend, uint64_t *dst) {\n  uint64_t retval;\n  asm volatile(\"mv a0, sp\\n\"\n               \"mv a1, %[arg]\\n\"\n               \"add %[ret], a0, a1\\n\"\n               \"sd %[ret], 0(%[dst])\\n\"\n               \"mv a0, %[ret]\\n\"\n               \"call puti\\n\"\n               : [ret] \"=r\"(retval)\n               : [arg] \"r\"(addend), [dst] \"r\"(dst)\n               : \"ra\", \"a0\", \"a1\", \"memory\");\n  return retval;\n}\n</code></pre>"},{"location":"co/lab/#riscv","title":"RISCV\u6c47\u7f16","text":"<ul> <li>CSR\u5bc4\u5b58\u5668\uff1a\u7528\u4e8e\u63a7\u5236\u548c\u7ba1\u7406 RISC-V \u5904\u7406\u5668\u7684\u72b6\u6001\u3001\u5f02\u5e38\u3001\u4e2d\u65ad\u7b49\u91cd\u8981\u4fe1\u606f\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u3002</li> <li>\u8bbf\u95ee CSR\uff1a\u901a\u8fc7\u4e13\u95e8\u7684\u6307\u4ee4\uff08\u5982 csrr\u3001csrw\u3001csrs\u3001csrc\uff09\u6765\u8bfb\u53d6\u3001\u5199\u5165\u6216\u4fee\u6539\u8fd9\u4e9b\u5bc4\u5b58\u5668\u3002</li> </ul>"},{"location":"co/os/","title":"os","text":"<ul> <li>a.out  ELF:executable and linkable format</li> </ul> <p>rodata data test bss</p> <p>memory lay out of c</p> <p>objdump,readelf</p>"},{"location":"co/os/#os-structure","title":"os structure","text":"<p>direct memory access(DMA):it is a way for cpu to let memory-I/O operations(data transform) independently</p> <p>cache: - temporal locality:tend to reference addresses it has recently referenced - spatial locality:tend to reference addresses near the recently referenced</p> <p>time sharing: multi programing with rapid context-switching</p> <p>user/kernal mode</p> <ul> <li>kernel is a running job</li> <li>\u7b49\u5f85\u5176\u4ed6job\u901a\u8fc7event\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf</li> </ul> <p>system call:do something privileged</p> <p>timer:</p> <ul> <li>process management</li> <li>memory management</li> <li>storage management</li> <li>protection and  security</li> </ul>"},{"location":"co/os/#processes","title":"processes(\u8fdb\u7a0b)","text":"<ul> <li>process is a unit of resource allocation and protection.And it is a program in execution.</li> <li>process=code(text),data section(global variables),program counter,stack,heap\uff1b\u5177\u4f53\u5982\u56fe\uff1a</li> </ul> <p>\uff08\u6ce8\u610f\u6808\u662f\u7531\u9ad8\u5230\u4f4e\u7684\uff09</p> <p>\u5bf9\u4e8e\u540c\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5982\u679c\u8fd0\u884c\u4e24\u6b21\uff0c\u4ea7\u751f\u76842\u4e2a\u8fdb\u7a0b\u4e2d\uff0cstack\uff0cheap\u7684\u5927\u5c0f\u548c\u5185\u5bb9\u662f\u4e0d\u4e00\u6837\u7684\uff08\u56e0\u4e3a\u4e24\u4e2a\u7a0b\u5e8f\u53ef\u80fd\u6b63\u5728\u8c03\u7528\u4e0d\u540c\u51fd\u6570\u7b49\uff09\uff0cdata\u6bb5\u7684\u5927\u5c0f\u4e00\u6837\u4f46\u5185\u5bb9\u4e0d\u4e00\u6837\uff08\u53ef\u80fd\u4e0d\u540c\u53d8\u91cf\u7684\u503c\u88ab\u4fee\u6539\uff09\uff0ctext\u6bb5\u7684\u5927\u5c0f\uff0c\u5185\u5bb9\u4e00\u6837</p>"},{"location":"co/os/#pcb","title":"PCB","text":"<ul> <li>process control block(PCB):information associated with each process</li> <li>\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2aPCB\uff0c\u5728new\u9636\u6bb5\u5206\u914dPCB\uff0c\u5728termination\u9636\u6bb5free PCB.</li> <li>PCB\u50a8\u5b58\u4e86process number(pid),program counter,registers,process state,memory management\u7b49\u4fe1\u606f</li> </ul>"},{"location":"co/os/#process-state","title":"Process State(\u91cd\u70b9)","text":""},{"location":"co/os/#new","title":"new\u9636\u6bb5","text":"<p>\u6838\u5fc3\u662f\u4e24\u4e2asyscall:folk\u548cexecv.</p>"},{"location":"co/os/#fork","title":"fork()","text":"<p>fork\u4f1a\u521b\u9020\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2a\u7236\u8fdb\u7a0b\uff0c\u5e76\u4e14\u4ed6\u4f1a\u6709\u4e00\u4e2a\u65b0\u7684pid\u3002\u5b50\u8fdb\u7a0b\u7684\u5185\u5bb9\u662f\u7236\u8fdb\u7a0b\u7684\u590d\u5236\uff0c\u5e76\u4e14\u6240\u6709\u7684resource\u521d\u59cb\u5316\u4e3a0</p> <p>fork\u6709\u4e24\u4e2a\u8fd4\u56de\u503c\uff0cfork\u4f1a\u628a\u5b50\u8fdb\u7a0b\u7684pid\u8fd4\u56de\u7ed9\u7236\u8fdb\u7a0b\uff0c\u628a0\u8fd4\u56de\u7ed9\u5b50\u8fdb\u7a0b\u3002\u53e6\u5916\uff0c\u901a\u8fc7<code>getpid()</code>\u53ef\u4ee5\u5f97\u5230\u81ea\u5df1\u7684pid\uff0c\u901a\u8fc7<code>getppid()</code>\u5f97\u5230\u7236\u8fdb\u7a0b\u7684pid\u3002</p> <pre><code>pid=fork();\nif(pid==0){\n    printf(\"\u8fd9\u662f\u5b50\u8fdb\u7a0b\");\n}else if(pid&gt;0){\n    printf(\"\u8fd9\u662f\u7236\u8fdb\u7a0b\");\n}\n</code></pre> <p>\u6ce8\u610f\uff0c\u5728fork()\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5c06\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u8bed\u53e5\uff0c\u4e14\u6bcf\u4e2a\u8fdb\u7a0b\u5185\u7684\u53d8\u91cf\u4e92\u4e0d\u5e72\u6270\u3002</p> <p>\u4f8b\u5b50\u4e00\uff1a</p> <pre><code>pid1=fork();\nprintf(\"hello\");\npid2=fork();\nprintf(\"hello\");\n</code></pre> <p>\u7b2c\u4e00\u6b21fork\uff0c\u8fdb\u7a0b\u75311\u4e2a\u53d8\u62102\u4e2a\uff0c\u7136\u540e\u8f93\u51fa\u4e24\u4e2ahello\uff1b\u7b2c\u4e8c\u6b21fork\uff0c\u8fdb\u7a0b\u75312\u4e2a\u53d84\u4e2a\uff0c\u7136\u540e\u8f93\u51fa4\u4e2ahello\u3002\u603b\u5171\u8f93\u51fa6\u4e2ahello\u3002</p> <p>\u4f8b\u5b50\u4e8c\uff1a</p> <pre><code>fork();\nif(fork()){\n    fork();\n}\nfork();\n</code></pre> <p>\u7b2c\u4e00\u6b21fork\uff0c\u8fdb\u7a0b\u75311\u4e2a\u53d82\u4e2a\uff0cif\u5224\u65ad\u6761\u4ef6\u7684fork\u4f7f\u8fdb\u7a0b\u75312\u53d84\uff0cif\u8bed\u53e5\u5185\u7684fork\u53ea\u4f1a\u5bf9\u7236\u8fdb\u7a0b\u6267\u884c\uff0c\u53732\u4e2a\u7236\u8fdb\u7a0b\u8fdb\u884cfork\u4ea7\u751f2\u4e2a\u65b0\u8fdb\u7a0b\u3002\u6b64\u65f6\u5171\u67096\u4e2a\u8fdb\u7a0b\uff0c\u6700\u540e\u6267\u884c\u7684fork\u4f7f\u8fdb\u7a0b\u75316\u523012\u4e2a\uff0c\u6700\u7ec8\u4e00\u5171\u4ea7\u751f12\u4e2a\u8fdb\u7a0b\u3002</p> <p>pros and cons:fork\u7684\u4f18\u70b9\u662f\u7b80\u6d01\uff0c\u4e0d\u9700\u8c03\u7528\u590d\u6742\u53c2\u6570\uff0c\u4fdd\u6301\u8fdb\u7a0b\u4e0e\u8fdb\u7a0b\u4e4b\u95f4\u7684\u8054\u7cfb\uff1b\u7f3a\u70b9\u662f\u6027\u80fd\u5dee\u4e14\u6709\u5b89\u5168\u6027\u95ee\u9898</p>"},{"location":"co/os/#execv","title":"execv()","text":"<p>execv\u4f1a\u7528\u65b0\u7684\u8fdb\u7a0b\u6620\u50cf\u6765\u66ff\u4ee3\u5f53\u524d\u8fdb\u7a0b\uff0c\u6b64\u65f6\u5f53\u524d\u8fdb\u7a0b\u4f1a\u88ab\u6e05\u7a7a\u3002</p> <pre><code>int main(int argc,char* argv[]){\n    pid_t pid=fork();\n    if(pid==0){\n        printf(\"1\");\n        execv(\"./callee\",argc);\n        printf(\"2\");\n    }else if(pid&gt;0){\n        printf(\"3\");\n    }\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7236\u8fdb\u7a0b\u4f1a\u6b63\u786e\u6267\u884c\u5e76\u8f93\u51fa\u201c3\u201d\u3002\u4f46\u662fexecv\u7684\u6267\u884c\u4f1a\u6e05\u7a7a\u5b50\u8fdb\u7a0b\u5e76\u8fdb\u5165\u201ccallee\u201d\u8fdb\u7a0b\uff0c\u6b64\u65f6\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u88ab\u6e05\u7a7a\uff0c\u6240\u4ee5\u53ea\u4f1a\u8f93\u51fa\u201c1\u201d\uff0c\u4e0d\u4f1a\u8f93\u51fa\u201c2\u201d.</p>"},{"location":"co/os/#terminations","title":"Terminations \u9636\u6bb5","text":"<p>\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7<code>exit()</code>\u8fd9\u4e2asystem call\u6765\u7ec8\u6b62\u3002</p>"},{"location":"co/process/","title":"processor","text":"<ol> <li>fetch the instruction from the memory</li> <li>decode and read the registers</li> <li>next steps depend on the instruction class    - memory-reference    - arithmetic-logical    - branches</li> <li>alu to calulate    - arithmetic result    - memory address for load/store    - branch comparison</li> </ol>"},{"location":"co/process/#datapath","title":"datapath","text":"<p>r:\u53d6\u51fa\u5bc4\u5b58\u5668\u4e2drs1,rs2\u4e2d\u7684\u503c\u8fdb\u5165alu\u8ba1\u7b97\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668\uff08rd\uff09</p> <p>i\uff08load\uff09:\u4ece\u5bc4\u5b58\u5668\u4e2d\u53d6\u51fars1\u7684\u503c,\u4e0e\u7acb\u5373\u6570\u8fdb\u5165alu\u76f8\u52a0\uff0c\u5f97\u5230\u5730\u5740\uff0c\u4ecedata memory\u4e2d\u53d6\u51fa\u8be5\u503c\u5e76\u5199\u56de\u5bc4\u5b58\u5668\uff08rd\uff09</p> <p>s:\u4e0ei\u578b\u6307\u4ee4\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5f97\u5230\u5730\u5740\uff1ars1\u4e0e\u7acb\u5373\u6570\u76f8\u52a0\uff1b\u5e76\u628ars2\u7684\u503c\u5199\u5165\u8be5data memory\u7684\u8be5\u5730\u5740 </p> <p>sb\uff08eg: beq a1,a2,200\uff09:\u53d6\u51fars1,rs2\u7684\u503c\u8fdb\u5165alu\u8fdb\u884c\u6bd4\u8f83,\u7531\u6bd4\u8f83\u7ed3\u679c\u51b3\u5b9a\u662fpc+4\u8fd8\u662fpc+\u7acb\u5373\u6570\uff08sb\u6307\u4ee4\u4e2d\u7684\u7acb\u5373\u6570\u662f\u76f8\u5bf9pc\u7684\u5730\u5740\uff09</p> <p>j:jump\u6307\u4ee4\u663e\u793a\u5728\u5bf9pc\u7684\u8f6c\u53d8\u4e0a\u9762\uff0c\u8df3\u8f6c\u5230pc+\u7acb\u5373\u6570\u7684\u5730\u5740</p>"},{"location":"co/process/#controller","title":"controller","text":""},{"location":"co/process/#isa","title":"ISA\u8bbe\u8ba1","text":"<p>\u663e\u793a\u64cd\u4f5c\u6570\uff1a\u5bc4\u5b58\u5668\uff0c\u5185\u5b58\uff0c\u7acb\u5373\u6570</p> <ul> <li>\u6808\u7ed3\u6784\uff1a\u6808\u9876\u6307\u9488\u662f\u7b2c\u4e8c\u64cd\u4f5c\u6570\uff0c\u6808\u9876\u6307\u9488\u4e0b\u9762\u7684\u662f\u7b2c\u4e00\u64cd\u4f5c\u6570\uff08\u6ce8\u610fsub\uff09</li> <li>\u7d2f\u52a0\u5668\u7ed3\u6784:\u7b2c\u4e00\u6e90\u64cd\u4f5c\u6570\u662f\u5bc4\u5b58\u5668\uff0c\u7b2c\u4e8c\u662f\u5185\u5b58</li> <li>\u901a\u7528\u5bc4\u5b58\u5668\u7ed3\u6784\uff08GPR\uff09</li> <li>register-memory architecture\uff1a\u6240\u6709\u6307\u4ee4\u90fd\u53ef\u4ee5\u8bbf\u95eememory</li> <li>load-store architecture\uff1a\u53ea\u6709load/store\u6307\u4ee4\u53ef\u4ee5\u8bbf\u95eememory</li> </ul> <p>\u591a\u7528GPR\u67b6\u6784\uff0c\u56e0\u4e3a\u5bc4\u5b58\u5668\u8bbf\u95ee\u901f\u5ea6\u66f4\u5feb\uff08\u6bd4\u7f13\u5b58\u90fd\u5feb\uff09\uff0c\u5e76\u4e14\u5bc4\u5b58\u5668\u65b9\u4fbf\u4e34\u65f6\u53d8\u91cf\u7684\u50a8\u5b58</p>"},{"location":"co/process/#_1","title":"\u5bfb\u5740","text":"<p>\u5b57\u8282\u4e3a\u57fa\u672c\u5355\u5143</p> <p>\u5c0f\u7aef\u5e8f\uff1a\u4f4e\u4f4d\u653e\u5728\u5730\u5740\u7684\u4f4e\u4f4d \u5927\u7aef\u5e8f\uff1a\u9ad8\u4f4d\u653e\u5728\u5730\u5740\u7684\u4f4e\u4f4d</p>"},{"location":"co/process/#address-alignment","title":"address alignment\uff08\u5b57\u8282\u5bf9\u9f50\uff09","text":"<p>\u5f53 \u5730\u5740 mod \u6570\u636e\u957f\u5ea6 = 0 \u65f6\uff0c\u5219\u662f\u5bf9\u9f50\u7684</p> <p>\u5982\u679c\u4e0d\u5bf9\u9f50\uff0c\u5219\u9700\u8981\u591a\u6b21\u624d\u80fd\u8bfb\u51fa\u60f3\u8981\u7684\u6570\u636e\u3002\u6bd4\u5982\u8981\u8bfb4\u5b57\u8282\u6570\u636e\uff0c\u90a3\u4e48\u5185\u5b58\u662f\u4ece0\uff0c4\uff0c8\u7b49\u5730\u5740\u5f00\u59cb\u8bfb\u53d6\uff0c\u4e0d\u80fd\u4ece1\uff0c2\uff0c3\u7b49\u5730\u5740\u5f00\u59cb\u8bfb\uff0c\u6240\u4ee5\u8981\u5b57\u8282\u5bf9\u9f50</p>"},{"location":"co/process/#pipelined","title":"Pipelined","text":"<p>\u8fd9\u662f\u4e00\u79cd\u91cd\u53e0\u6267\u884c\uff08 overlapping execution \uff09 \uff0c\u76f8\u6bd4\u4e8e\u987a\u5e8f\u6267\u884c\uff08 sequential execution\uff09\uff0c\u5bf9\u5404\u6a21\u5757\u7684\u5229\u7528\u7387\u66f4\u9ad8\uff0c\u5f53\u540c\u65f6\u786c\u4ef6\u7ed3\u6784\u4e5f\u66f4\u590d\u6742\uff0c\u5f00\u9500\u66f4\u5927\u3002</p> <p>Each subprocess and its functional components in the pipelining are called stages or segments,the number of segment are called the depth of pipelining.</p> <ul> <li>pass time :\u4ece\u7b2c\u4e00\u4e2a\u4efb\u52a1\u8fdb\u5165\u5f00\u59cb\u5230\u5b8c\u5168\u8fdb\u5165\uff08\u6700\u591a\u91cd\u53e0\u7684\u65f6\u5019\uff09</li> <li>empty time\uff1a\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\u4ece\u8fdb\u5165\u5230\u51fa\u6765\uff08\u4e0epass time\u76f8\u5bf9\uff09</li> </ul>"},{"location":"co/process/#_2","title":"\u5206\u7c7b","text":"<p>\u6309\u529f\u80fd\u5206\uff1a</p> <ul> <li>single function pipelining\uff1a\u53ea\u80fd\u6267\u884c\u4e00\u79cd\u529f\u80fd\u7684\u6307\u4ee4\uff08\u5982\u6d6e\u70b9\u6307\u4ee4\u96c6\uff09</li> <li>multi function pipelining\uff1a\u53ef\u4ee5\u6267\u884c\u591a\u79cd\u6307\u4ee4\u529f\u80fd</li> <li>static pipelining\uff1a\u4e00\u6b21\u53ea\u80fd\u6267\u884c\u4e00\u79cd\u7c7b\u578b\u7684\u6307\u4ee4</li> <li>dynamic pipelining\uff1a\u4e00\u6b21\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u591a\u79cd\u7c7b\u578b\u7684\u6307\u4ee4</li> </ul> <p>\u6309\u7ebf\u6027\u6027\u5206\uff1a</p> <ul> <li>linear pipelining\uff1a\u6d41\u6c34\u7ebf\u7684\u6bcf\u4e00\u9636\u6bb5\u7684\u6267\u884c\u662f\u4e0d\u53ef\u9006\u7684</li> <li>nonlinear pipelining\uff1a\u6267\u884c\u5230\u6d41\u6c34\u7ebf\u7684\u67d0\u4e00\u9636\u6bb5\u540e\u4e5f\u53ef\u4ee5\u56de\u5230\u4e4b\u524d\u7684\u9636\u6bb5</li> </ul> <p>\u6309\u6709\u5e8f\u6027\u5206:</p> <ul> <li>ordered pipelining\uff1ainflow\u987a\u5e8f\u548coutflow\u987a\u5e8f\u4e00\u6837</li> <li>disordered pipelining\uff1aoutflow\u7684\u987a\u5e8f\u548cinflow\u4e0d\u540c</li> </ul>"},{"location":"co/process/#_3","title":"\u541e\u5410\u91cf\uff0c\u52a0\u901f\u6bd4\uff0c\u6548\u7387","text":"<ul> <li>\u5355\u5468\u671f\u7684\u65f6\u949f\u5468\u671f\uff1a\u6700\u957f\u7684\u4e00\u6761\u6307\u4ee4\u7684\u6267\u884c\u65f6\u95f4</li> <li>\u6d41\u6c34\u7ebf\u65f6\u949f\u5468\u671f\uff1a\u9636\u6bb5\u7684\u6700\u957f\u65f6\u95f4</li> </ul> <p>\u91cd\u8981\u53c2\u6570\uff1a</p> <ul> <li>n:\u8868\u793a\u6307\u4ee4\u6761\u6570</li> <li>m:\u8868\u793a\u4e00\u6761\u6307\u4ee4\u5206\u51e0\u4e2a\u9636\u6bb5\u6267\u884c </li> </ul> <p></p> <p>\u541e\u5410\u91cf\uff08Throughput\uff09\uff1a\\(Tp=\\frac{n}{T}\\)</p> <p>\u5176\u4e2dn\u662f\u6307\u4ee4\u7684\u6570\u91cf\uff0cT\u662f\u6267\u884c\u603b\u65f6\u95f4\uff0c\u541e\u5410\u91cf\u8868\u793a\u5355\u4f4d\u65f6\u95f4\u6267\u884c\u7684\u6307\u4ee4\u7684\u6761\u6570\u3002</p> \\[Tp\\leq Tp_{max}=\\lim\\limits_{n\\to\\infty}Tp\\] <p>\u5bf9\u4e8e\u4e00\u822c\u7684\u6d41\u6c34\u7ebf\u6307\u4ee4\uff0c\\(Tp=\\frac{n}{(m+n-1)t_0},Tp_{max}=\\frac{1}{t_0}\\).</p> <p>\u52a0\u901f\u6bd4\uff08Speedup\uff09\uff1a\\(Sp=\\frac{Extime_{single \\  cycle} }{Extime_{pipelining}}\\)</p> <p>\u4e00\u822c\u6d41\u6c34\u7ebf\uff1a\\(Sp=\\frac{n*m*t_0}{(n+m-1)t_0}=\\frac{n*m}{n+m-1}\\)</p> <p>\u6548\u7387\u6bd4\uff08Efficiency\uff09\uff1a\\(\u03c1=\\frac{n*m*t_0}{(n+m-1)*m*t_0}=\\frac{n}{n+m-1}\\)</p> <p>\u6548\u7387\u7684\u542b\u4e49\u5c31\u662f\u5373\u8003\u8651\u65f6\u95f4\u6d88\u8017\u53c8\u8003\u8651\u7a7a\u95f4\u6d88\u8017\uff0c\u5728\u65f6\u7a7a\u56fe\u4e0a\uff0c\u4f53\u73b0\u5728\u753b\u51fa\u7684\u683c\u5b50\u5360\u603b\u683c\u5b50\u7684\u6bd4\u4f8b.</p> <p>\u5728\u52a0\u901f\u6bd4\u548c\u6548\u7387\u6bd4\u4e2d\uff0c\u5982\u679c\\(n\\to+\\infty,\u5219Sp=m,\u03c1=1\\)\uff0c\u8bf4\u660e\u5f53\u6307\u4ee4\u975e\u5e38\u591a\uff0c\u586b\u6ee1\u6d41\u6c34\u65f6\u6548\u7387\u6700\u9ad8\u3002</p>"},{"location":"co/process/#_4","title":"\u9759\u6001\u6d41\u6c34\u7ebf\u4f8b\u5b50","text":"<p>\u6ce8\u610f\u662f\u9759\u6001\u6d41\u6c34\u7ebf\uff0c\u6240\u4ee5\u8981\u7b49\u4e58\u6cd5\u6267\u884c\u5b8c\u4e4b\u540e\u624d\u80fd\u6267\u884c\u52a0\u6cd5\uff1b\u540c\u65f6\uff0c\u52a0\u6cd5\u64cd\u4f5c\u4e5f\u8981\u5148\u7b49\u4e4b\u524d\u7684\u7ed3\u679c\u8ba1\u7b97\u51fa\u6765\u4e4b\u540e\u624d\u80fd\u5f00\u59cb\u6267\u884c\uff1a</p> <p></p> <p>\u753b\u51fa\u56fe\u6613\u5f97\uff1a\\(T=15t_0\\)\uff0c\u518d\u4f9d\u56fe\u8ba1\u7b97\u5373\u53ef\u3002</p>"},{"location":"co/process/#_5","title":"\u52a8\u6001\u6d41\u6c34\u7ebf\u4f8b\u5b50","text":"<p>\u4e58\u6cd5\u548c\u52a0\u6cd5\u53ef\u4ee5\u540c\u65f6\u6267\u884c\uff0c\u4e0d\u8fc7\u4ecd\u7136\u8981\u6ce8\u610f\uff0c\u5982\u679c\u9700\u8981\u4e4b\u524d\u7684\u7ed3\u679c\uff0c\u90a3\u4e48\u5fc5\u987b\u7b49\u5230\u4e4b\u524d\u7684\u6307\u4ee4\u6267\u884c\u5b8c\u6bd5\u624d\u53ef\u4ee5\u5f00\u59cb\u6267\u884c\u3002</p> <p></p>"},{"location":"co/process/#_6","title":"\u5b9e\u73b0","text":"<ol> <li>IF:instruction fetch from memory</li> <li>ID:Instruction decode and register read</li> <li>EX:EXecute operation or calculate address</li> <li>MEM:Access memory oprand</li> <li>WB:write result back to register</li> </ol> <p>reg\u5360\u534a\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u524d\u534a\u4e2a\u5199\uff0c\u540e\u534a\u4e2a\u8bfb</p>"},{"location":"co/process/#hazard","title":"hazard \u7ade\u4e89","text":"<p>\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u6682\u505c\uff08stall\uff09\uff0c\u6dfb\u52a0\u6c14\u6ce1(addi x0,x0,0)\u3002\u4f46\u662f\u8fd9\u4f1a\u5bfc\u81f4\u6548\u7387\u4e0b\u964d\u5f88\u591a\u3002</p>"},{"location":"co/process/#structure-hazard","title":"structure hazard","text":"<ul> <li>\u5b9a\u4e49\uff1aa required resource is busy</li> <li>\u6dfb\u52a0\u786c\u4ef6\u6765\u89e3\u51b3\uff0c\u6bd4\u5982\u628adata memory\u548cinstruction memory\u5206\u5f00 </li> </ul>"},{"location":"co/process/#data-hazard","title":"data hazard","text":"<ul> <li> <p>\u5b9a\u4e49\uff1a\u8be5\u6307\u4ee4\u9700\u8981\u7684\u6570\u636e\u8981\u7b49\u5230\u4e0a\u4e00\u6307\u4ee4\u5b8c\u6210\u540e\u5199\u56de</p> </li> <li> <p>\u89e3\u51b3\uff1a</p> </li> </ul> <ol> <li>forwarding\u2014\u2014adding extra hardware to retrieve the missing item early from the internal resources    - \u6bd4\u5982\u628a\u4e0a\u4e00\u6761\u6307\u4ee4EX\u9636\u6bb5\u6216MEM\u9636\u6bb5\u5f97\u5230\u7684\u6570\u636e\u63d0\u524d\u4f20\u9012\u7ed9\u4e0b\u4e00\u6307\u4ee4\u7684EX\u9636\u6bb5</li> <li>\u90e8\u5206\u60c5\u51b5\u4e5f\u53ef\u4ee5\u7531\u7f16\u8bd1\u5668\u89e3\u51b3\uff0c\u5982\u8c03\u6574\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f</li> </ol>"},{"location":"co/process/#forwarding","title":"forwarding","text":"<p>\u7b80\u5355\u60c5\u51b5\uff1a  double data hazard\uff1a  load-use hazard:</p>"},{"location":"co/process/#control-hazard","title":"control hazard","text":"<ul> <li>\u5b9a\u4e49\uff1aflow of execution depends on previous instruction</li> <li>\u89e3\u51b3\uff1a\u63d0\u524d\u9884\u6d4b\u4e0b\u6761\u6307\u4ee4\u662fpc+4\u8fd8\u662f\u8df3\u8f6c\u6307\u4ee4\uff0c\u5982\u679c\u9884\u6d4b\u9519\u8bef\u5219\u6709\u60e9\u7f5a\uff08\u628a\u9884\u6d4b\u7684\u7ed3\u679c\u7f6e0\uff0c\u6dfb\u52a0\u6b63\u786e\u7684\u8df3\u8f6c\u6307\u4ee4\uff09</li> <li>\u7b80\u5355\u9884\u6d4b\uff08\u5982\u9884\u6d4bpc+4\uff09</li> <li>\u6839\u636e\u7ecf\u9a8c\uff08\u5982\u9884\u6d4b\u5faa\u73af\u7ed3\u675f\u8df3\u8f6c\uff09</li> <li>\u52a8\u6001\u9884\u6d4b\uff08\u6839\u636e\u4e4b\u524d\u7684\u7ed3\u679c\u63a8\u65ad\uff09</li> <li>\u5ef6\u8fdf\u51b3\u7b56\uff08Delayed Decision\uff09\uff1a\u5c06 branch \u524d\u7684\u65e0\u5173\u6307\u4ee4\u79fb\u52a8\u5230 branch \u4e4b\u540e\u7684 bubble \u5904\uff08\u5206\u652f\u5ef6\u8fdf\u69fd\uff09\u6267\u884c\uff0c\u51cf\u5c11\u4e3a\u4e86\u7b49\u5f85\u800c\u63d2\u5165\u7684\u65e0\u610f\u4e49 bubble \u4ee3\u7801</li> </ul>"},{"location":"co/process/#_7","title":"\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u7684\u8c03\u5ea6","text":"<ol> <li>\u9996\u5148\u901a\u8fc7\u9884\u7ea6\u8868\uff08Reservation table\uff09\u6765\u786e\u5b9a\u7981\u6b62\u96c6\uff08prohibit sets\uff09\u3002\u7981\u6b62\u96c6\u5373\u4e3a\u8fc7\u591a\u5c11\u5468\u671f\u4e00\u5b9a\u4f1a\u51fa\u73b0\u51b2\u7a81\u3002</li> <li>\u518d\u6839\u636e\u7981\u6b62\u96c6\u51b3\u5b9a\u51b2\u7a81\u5411\u91cf\uff08conflict vector\uff09\u3002\u51b2\u7a81\u5411\u91cf\u628a\u7981\u6b62\u96c6\u4e2d\u6709\u7684\u5143\u7d20\u7f6e1\uff0c\u5176\u4ed6\u4f4d\u7f6e0.</li> <li>\u7531\u51b2\u7a81\u5411\u91cf\u753b\u51fa\u72b6\u6001\u8f6c\u79fb\u56fe\uff08state transition graph\uff09\uff0c\u4ece\u800c\u7b97\u51fa\u6240\u6709\u8c03\u5ea6</li> <li>\u6700\u540e\u7b97\u51fa\u6700\u4f73\u7684\u8c03\u5ea6</li> </ol> <p>\u4f8b\u5b50\uff1a</p> 1 2 3 4 5 6 7 \\(s_1\\) x x x \\(s_2\\) x x \\(s_3\\) x x \\(s_4\\) x <ol> <li>\u9996\u5148\u7b97\u51fa\u7981\u6b62\u96c6={3,4,6},\u51b2\u7a81\u5411\u91cf=0101100</li> <li>\u63a5\u7740\u7528\u79fb\u4f4d\u6216\u7684\u65b9\u6cd5\u7b97\u51fa\u6240\u6709\u53ef\u80fd\u7684\u51b2\u7a81\u5411\u91cf\u3002\u6bd4\u5982\u7b2c\u4e00\u4f4d\u4e3a0\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u9009\u62e9\u79fb\u52a8\u4e00\u4f4d\uff0c\u53730010110\uff08\u53f3\u79fb\u4e00\u4f4d\uff09| 0101100\uff08\u65b0\u9001\u8fdb\u6765\u7684\u6307\u4ee4\uff09=0111110\uff08\u66f4\u65b0\u540e\u7684\u51b2\u7a81\u5411\u91cf\uff09\u3002</li> <li>\u63a5\u4e0b\u6765\u753b\u51fa\u72b6\u6001\u8f6c\u79fb\u56fe\uff0c\u5373\u628a\u6240\u6709\u53ef\u80fd\u7684\u51b2\u7a81\u5411\u91cf\u753b\u8fdb\u72b6\u6001\u56fe\u91cc\u3002\u7136\u540e\u627e\u51fa\u6240\u6709\u6784\u6210\u7684\u5faa\u73af\u5373\u4e3a\u53ef\u80fd\u7684\u8c03\u5ea6:</li> </ol> <p> 4. \u6700\u540e\u7b97\u51fa\u6700\u4f73\u8c03\u5ea6\u3002\u6bd4\u5982{1\uff0c1\uff0c7}\u7684\u8c03\u5ea6\uff0c\u5e73\u5747\u8c03\u5ea6\u65f6\u95f4=\\(\\frac{1+1+7}{3}=3\\),\u7ed3\u679c\u5982\u4e0b\uff1a</p> \u8c03\u5ea6\u65b9\u6848 \u5e73\u5747\u8c03\u5ea6\u65f6\u95f4 7 7 1\uff0c7 4 1\uff0c1\uff0c7 3 2\uff0c7 4.5 2\uff0c5 3.5 2\uff0c5\uff0c7 4.67 5 5 5\uff0c2 3.5 5\uff0c7 6"},{"location":"co/process/#_8","title":"\u591a\u53d1\u5c04","text":"<ul> <li>static multiple issue<ul> <li>compiler groups instruction to be issued together</li> <li>packages them into issue slots</li> <li>compiler detects and avoid hazard</li> </ul> </li> <li>dynamic multiple issue<ul> <li>cpu examines instruction stream and chooses instruction to issue each cycle</li> <li>compiler can help by reordering instructions</li> <li>cpu resolves hazards using advanced techniques at runtime</li> </ul> </li> </ul> <p>speculation(\u731c\u6d4b)</p> <ul> <li>start operation as soon as possible</li> <li>predict;if not,roll-back</li> <li>examples:branch outcome,load</li> </ul>"},{"location":"co/process/#superscalar","title":"superscalar \u8d85\u6807\u91cf","text":"<ul> <li>The number of instructions which are issued in ezch clock cycle is not fixed.</li> <li>if the upper limit is n,then the processor is called n-issue.</li> <li>\u4e00\u6b21\u6027\u6253\u5305\u53d1\u9001\u591a\u6761\u6307\u4ee4</li> <li>it can be static or dynamic</li> </ul>"},{"location":"co/process/#vlimvery-long-instruction-word","title":"VLIM(very long instruction word) \u8d85\u957f\u6307\u4ee4\u5b57","text":"<ul> <li>The number of instructions which are issued in each clock cycle is fixeds.And these instructions constitute a long instruction</li> <li>\u628a\u51e0\u6761\u6307\u4ee4\u62fc\u63a5\u6210\u4e00\u6761\u957f\u6307\u4ee4\u53d1\u9001\u51fa\u53bb</li> <li>instruction scheduling is done statically by the compiler</li> </ul>"},{"location":"co/process/#super-pipeline","title":"super-pipeline","text":"<p>\u628a\u6d41\u6c34\u7ebf\u9636\u6bb5\u505a\u8fdb\u4e00\u6b65\u7684\u5212\u5206\uff0c\u4f46\u65f6\u949f\u5468\u671f\u6ca1\u6709\u7f29\u77ed\u3002\u5373\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u6307\u4ee4\u4e0d\u662f\u540c\u65f6\u53d1\u9001\u51fa\u53bb\u7684\uff0c\u800c\u662f\u628a\u8fd9\u4e2a\u65f6\u949f\u5468\u671f\u5206\u4e3an\u4e2a\u9636\u6bb5\uff0c\u6bcf1/n\u7684\u65f6\u95f4\u53d1\u9001\u4e00\u6761\u6307\u4ee4</p> <p></p>"},{"location":"co/process/#_9","title":"\u7ebf\u7a0b","text":"<p>\u5171\u4eab\u7684\uff1aaddress space \u4e0d\u5171\u4eab\uff1aregister\uff0cpc,\u6808</p>"},{"location":"co/processes/","title":"processes(\u8fdb\u7a0b)","text":"<ul> <li>process is a unit of resource allocation and protection.And it is a program in execution.</li> <li>\u8fdb\u7a0b\u662f\u5206\u914d\uff0c\u7ebf\u7a0b\u662f\u6267\u884c</li> <li>process=code(text),data section(global variables),program counter,stack,heap\uff1b\u5177\u4f53\u5982\u56fe\uff1a</li> </ul> <p>\uff08\u6ce8\u610f\u6808\u662f\u7531\u9ad8\u5230\u4f4e\u7684\uff1bdata\u548ctext\u6bb5\u662fELF\u7684\u6620\u5c04\uff09</p> <p>\u5bf9\u4e8e\u540c\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5982\u679c\u8fd0\u884c\u4e24\u6b21\uff0c\u4ea7\u751f\u76842\u4e2a\u8fdb\u7a0b\u4e2d\uff0cstack\uff0cheap\u7684\u5927\u5c0f\u548c\u5185\u5bb9\u662f\u4e0d\u4e00\u6837\u7684\uff08\u56e0\u4e3a\u4e24\u4e2a\u7a0b\u5e8f\u53ef\u80fd\u6b63\u5728\u8c03\u7528\u4e0d\u540c\u51fd\u6570\u7b49\uff09\uff0cdata\u6bb5\u7684\u5927\u5c0f\u4e00\u6837\u4f46\u5185\u5bb9\u4e0d\u4e00\u6837\uff08\u53ef\u80fd\u4e0d\u540c\u53d8\u91cf\u7684\u503c\u88ab\u4fee\u6539\uff09\uff0ctext\u6bb5\u7684\u5927\u5c0f\uff0c\u5185\u5bb9\u4e00\u6837</p>"},{"location":"co/processes/#pcb","title":"PCB","text":"<ul> <li>process control block(PCB):information associated with each process</li> <li>\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2aPCB\uff0c\u5728new\u9636\u6bb5\u5206\u914dPCB\uff0c\u5728termination\u9636\u6bb5free PCB.</li> <li>PCB\u50a8\u5b58\u4e86process number(pid),program counter,registers,process state,memory management\u7b49\u4fe1\u606f</li> </ul>"},{"location":"co/processes/#process-state","title":"Process State(\u91cd\u70b9)","text":""},{"location":"co/processes/#new","title":"new\u9636\u6bb5","text":"<p>\u6838\u5fc3\u662f\u4e24\u4e2asyscall:folk\u548cexecv.</p>"},{"location":"co/processes/#fork","title":"fork()","text":"<p>fork\u4f1a\u521b\u9020\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2a\u7236\u8fdb\u7a0b\uff0c\u5e76\u4e14\u4ed6\u4f1a\u6709\u4e00\u4e2a\u65b0\u7684pid\u3002\u5b50\u8fdb\u7a0b\u7684\u5185\u5bb9\u662f\u7236\u8fdb\u7a0b\u7684\u590d\u5236\uff0c\u5e76\u4e14\u6240\u6709\u7684resource\u521d\u59cb\u5316\u4e3a0</p> <p>fork\u6709\u4e24\u4e2a\u8fd4\u56de\u503c\uff0cfork\u4f1a\u628a\u5b50\u8fdb\u7a0b\u7684pid\u8fd4\u56de\u7ed9\u7236\u8fdb\u7a0b\uff0c\u628a0\u8fd4\u56de\u7ed9\u5b50\u8fdb\u7a0b\u3002\u53e6\u5916\uff0c\u901a\u8fc7<code>getpid()</code>\u53ef\u4ee5\u5f97\u5230\u81ea\u5df1\u7684pid\uff0c\u901a\u8fc7<code>getppid()</code>\u5f97\u5230\u7236\u8fdb\u7a0b\u7684pid\u3002</p> <pre><code>pid=fork();\nif(pid==0){\n    printf(\"\u8fd9\u662f\u5b50\u8fdb\u7a0b\");\n}else if(pid&gt;0){\n    printf(\"\u8fd9\u662f\u7236\u8fdb\u7a0b\");\n}\n</code></pre> <p>\u6ce8\u610f\uff0c\u5728fork()\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5c06\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u8bed\u53e5\uff0c\u4e14\u6bcf\u4e2a\u8fdb\u7a0b\u5185\u7684\u53d8\u91cf\u4e92\u4e0d\u5e72\u6270\u3002</p> <p>\u4f8b\u5b50\u4e00\uff1a</p> <pre><code>pid1=fork();\nprintf(\"hello\");\npid2=fork();\nprintf(\"hello\");\n</code></pre> <p>\u7b2c\u4e00\u6b21fork\uff0c\u8fdb\u7a0b\u75311\u4e2a\u53d8\u62102\u4e2a\uff0c\u7136\u540e\u8f93\u51fa\u4e24\u4e2ahello\uff1b\u7b2c\u4e8c\u6b21fork\uff0c\u8fdb\u7a0b\u75312\u4e2a\u53d84\u4e2a\uff0c\u7136\u540e\u8f93\u51fa4\u4e2ahello\u3002\u603b\u5171\u8f93\u51fa6\u4e2ahello\u3002</p> <p>\u4f8b\u5b50\u4e8c\uff1a</p> <pre><code>fork();\nif(fork()){\n    fork();\n}\nfork();\n</code></pre> <p>\u7b2c\u4e00\u6b21fork\uff0c\u8fdb\u7a0b\u75311\u4e2a\u53d82\u4e2a\uff0cif\u5224\u65ad\u6761\u4ef6\u7684fork\u4f7f\u8fdb\u7a0b\u75312\u53d84\uff0cif\u8bed\u53e5\u5185\u7684fork\u53ea\u4f1a\u5bf9\u7236\u8fdb\u7a0b\u6267\u884c\uff0c\u53732\u4e2a\u7236\u8fdb\u7a0b\u8fdb\u884cfork\u4ea7\u751f2\u4e2a\u65b0\u8fdb\u7a0b\u3002\u6b64\u65f6\u5171\u67096\u4e2a\u8fdb\u7a0b\uff0c\u6700\u540e\u6267\u884c\u7684fork\u4f7f\u8fdb\u7a0b\u75316\u523012\u4e2a\uff0c\u6700\u7ec8\u4e00\u5171\u4ea7\u751f12\u4e2a\u8fdb\u7a0b\u3002</p> <p>pros and cons:fork\u7684\u4f18\u70b9\u662f\u7b80\u6d01\uff0c\u4e0d\u9700\u8c03\u7528\u590d\u6742\u53c2\u6570\uff0c\u4fdd\u6301\u8fdb\u7a0b\u4e0e\u8fdb\u7a0b\u4e4b\u95f4\u7684\u8054\u7cfb\uff1b\u7f3a\u70b9\u662f\u6027\u80fd\u5dee\u4e14\u6709\u5b89\u5168\u6027\u95ee\u9898</p>"},{"location":"co/processes/#execv","title":"execv()","text":"<p>execv\u4f1a\u7528\u65b0\u7684\u8fdb\u7a0b\u6620\u50cf\u6765\u66ff\u4ee3\u5f53\u524d\u8fdb\u7a0b\uff0c\u6b64\u65f6\u5f53\u524d\u8fdb\u7a0b\u4f1a\u88ab\u6e05\u7a7a\u3002</p> <pre><code>int main(int argc,char* argv[]){\n    pid_t pid=fork();\n    if(pid==0){\n        printf(\"1\");\n        execv(\"./callee\",argc);\n        printf(\"2\");\n    }else if(pid&gt;0){\n        printf(\"3\");\n    }\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7236\u8fdb\u7a0b\u4f1a\u6b63\u786e\u6267\u884c\u5e76\u8f93\u51fa\u201c3\u201d\u3002\u4f46\u662fexecv\u7684\u6267\u884c\u4f1a\u6e05\u7a7a\u5b50\u8fdb\u7a0b\u5e76\u8fdb\u5165\u201ccallee\u201d\u8fdb\u7a0b\uff0c\u6b64\u65f6\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u88ab\u6e05\u7a7a\uff0c\u6240\u4ee5\u53ea\u4f1a\u8f93\u51fa\u201c1\u201d\uff0c\u4e0d\u4f1a\u8f93\u51fa\u201c2\u201d.</p>"},{"location":"co/processes/#terminations","title":"Terminations \u9636\u6bb5","text":"<p>\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7<code>exit()</code>\u8fd9\u4e2asystem call\u6765\u7ec8\u6b62\u3002\u7ec8\u6b62\u540e\u8be5\u8fdb\u7a0b\u7684resource\u4f1a\u88abOS\u91cd\u65b0\u5206\u914d\u3002</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u53bb\u7ec8\u6b62\u5176\u4ed6\u8fdb\u7a0b\uff1a\u4f7f\u7528signals\u548ckill()\u8fd9\u4e2asystem call\u3002</p> <p>\u6ce8\u610fSIGKILL,SIGSTOP\u8fd9\u4e24\u4e2asignals\u4e0d\u80fd\u88abhandle\uff08\u51fa\u4e8e\u5b89\u5168\u7684\u8003\u8651\uff09</p>"},{"location":"co/processes/#wait-and-waitpid","title":"wait() and waitpid()","text":"<ul> <li>wait()</li> <li>block until any child complete</li> <li>returns the pid of the completed child and the child's exit code</li> <li>waitpid()</li> <li>block until a specific child complete</li> </ul>"},{"location":"co/processes/#zombie","title":"zombie","text":"<p>\u5f53\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u65f6\uff0c\u6709\u4e9b\u4e1c\u897f\u6ca1\u6709\u88abdeallocated(\u91ca\u653e)\u3002\u5176\u4e2dstack,heap\u662f\u88ab\u6e05\u7a7a\u7684\uff0cCPU\u4e0d\u5360\u7528\uff1b\u4f46\u662fPCB\u7b49\u672a\u88ab\u6e05\u7a7a\uff0c\u5185\u5b58\u4ecd\u7136\u5360\u7528\u3002</p> <p>\u4e3a\u4e86\u907f\u514d\u51fa\u73b0zombie\uff0c\u9700\u8981parent\u8c03\u7528wait()</p>"},{"location":"co/processes/#orphans","title":"Orphans\uff08\u5b64\u513f\uff09","text":"<ul> <li>an orphan process is one whose parent has died</li> <li>the orphan is \"adopted\" by the process with pid 1</li> <li>Therefore\uff0ca orphan never become zombie</li> </ul>"},{"location":"co/processes/#readyrunningwait","title":"ready,running,wait","text":"<p>\u901a\u8fc7scheduling queues\uff08\u6570\u636e\u7ed3\u6784\u662f\u94fe\u8868\uff09\u6765\u7ef4\u62a4\u3002\u5206\u4e3aready queue\u548cwait queues\u3002wait queues\u6709\u591a\u4e2a\u662f\u56e0\u4e3await target\uff08\u6bd4\u5982I/O,disk\u7b49\uff09\u6709\u591a\u4e2a\u3002</p>"},{"location":"co/processes/#context-switch","title":"context switch","text":"<ul> <li>\u8fd9\u91cc\u7684context\u5c31\u662f\u6307\u5bc4\u5b58\u5668</li> <li>\u5f53CPU\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u65f6\uff0ccontext switch\u5c31\u4f1a\u53d1\u751f</li> <li>context switch\u505a\u7684\u662f\u50a8\u5b58\u65e7\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u8f7d\u5165\u65b0\u7684\u8fdb\u7a0b</li> <li>Context of a process represented in the PCB</li> </ul>"},{"location":"co/processes/#_1","title":"\u6c47\u7f16\u4ee3\u7801\u4f8b\u5b50\uff0c","text":"<p>P0\u8fdb\u7a0b\u8c03\u7528\u51fd\u6570\uff0c\u50a8\u5b58P0\uff0c\u7136\u540e\u8fd4\u56deP1\uff1a</p> <p>x0\u62ff\u5230prev\u7684\u8fdb\u7a0b\uff0cx1\u62ff\u5230next\u7684\u8fdb\u7a0b\u3002x10\u662f\u57fa\u5730\u5740\u3002</p> <p>\u6808\u7684\u5207\u6362:<code>mov x9,sp</code>,\u50a8\u5b58P0\u8fdb\u7a0b\u7684sp;<code>mov sp,x9</code>\uff0c\u62ff\u56deP1\u8fdb\u7a0b\u7684sp;</p> <p>\u50a8\u5b58P0:<code>stp x19.x20,[x8],#16</code>\u7b49\uff0c\u5b58\u50a8P0\uff1b</p> <p><code>add x8,x1,x10</code>\u5207\u6362\u5230P1;</p> <p><code>ldp x19,x20,[x8],#16</code>\u7b49\uff0c\u5b58\u50a8P1;</p> <p>\u4ee3\u7801\u7684\u5207\u6362:<code>str lr,[x8]</code>\u548c<code>ldr lr,[x8]</code>\uff0c\u7136\u540e\u901a\u8fc7ret\u5207\u6362\u3002</p>"},{"location":"co/processes/#context-switch-scenarios","title":"Context Switch Scenarios","text":"<ul> <li>kernel mode\uff1a</li> <li>when:cpu_switch_to</li> <li>where:cpu_context</li> <li>user mode:\u5148\u901a\u8fc7kernel_entry\u8fdb\u5165kernel mode</li> </ul>"},{"location":"co/schedule/","title":"CPU Scheduling","text":""},{"location":"co/schedule/#cpu-ip-burst-cycle","title":"CPU-I/P Burst Cycle","text":"<ul> <li>CPU burst:\u5927\u90e8\u5206\u65f6\u95f4\u5728\u505a CPU \u8fd0\u7b97</li> <li> <p>I/O burst:\u5927\u90e8\u5206\u65f6\u95f4\u5728\u505a I/O</p> </li> <li> <p>Non-preemptive scheduling</p> </li> <li>Preemptive scheduling:OS\u6709\u63a7\u5236\u6743</li> </ul>"},{"location":"co/syn/","title":"\u540c\u6b65\uff08synchronization\uff09\u548c\u6b7b\u9501","text":"<p>\u4e0d\u533a\u5206\u7ebf\u7a0b\u8fdb\u7a0b</p>"},{"location":"co/syn/#critical-section","title":"critical section","text":"<p>\u5b58\u5728n\u4e2a\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e00\u4e9bcritical section segment of code(\u6bd4\u5982\u6539\u53d8\u5171\u540c\u53d8\u91cf\uff0c\u66f4\u65b0\u8868\u7b49)\u3002\u90a3\u4e48\uff1a</p> <ul> <li>\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5728critical section</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u5fc5\u987b\u83b7\u5f97permission\u624d\u53ef\u4ee5\u5728entry section\u4e2d\u8fdb\u5165critical section</li> <li>permission\u5fc5\u987b\u5728exit section\u88ab\u91ca\u653e</li> </ul> <pre><code>while(true){\n    entry section\n        critical section\n    exit section\n        remainder section\n}\n</code></pre> <ul> <li>preemptive\uff1a\u62a2\u5360\u5f0f\uff0c\u76ee\u524d\u64cd\u4f5c\u7cfb\u7edf\u4e00\u822c\u7528</li> <li>non-preemtive:\u975e\u62a2\u5360\u5f0f</li> </ul>"},{"location":"co/syn/#critical-section_1","title":"\u89e3\u51b3critical section\u7684\u4e09\u4e2a\u8981\u6c42","text":"<ul> <li>mutual exclusion\uff08\u4e92\u65a5\u8bbf\u95ee\uff09\uff1a\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5728critical section\u6267\u884c</li> <li>progress \uff08\u7a7a\u95f2\u8ba9\u8fdb\uff09\uff1a\u5f53\u6ca1\u6709\u7ebf\u7a0b\u5728\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\u65f6\uff0c\u5fc5\u987b\u5728\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u7684\u7ebf\u7a0b\u4e2d\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5141\u8bb8\u5176\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u6267\u884c\u7684\u8fdb\u5c55</li> <li>bounded waiting\uff08\u6709\u9650\u7b49\u5f85\uff09\uff1a\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u540e\uff0c\u5fc5\u987b\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u83b7\u5f97\u8bb8\u53ef\u5e76\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4e0d\u80fd\u65e0\u9650\u7b49\u5f85</li> </ul>"},{"location":"co/syn/#petersons-solution","title":"Peterson\u2019s solution","text":"<ul> <li>\u7528\u6765\u89e3\u51b3\u4e24\u4e2a\u8fdb\u7a0b\u7684\u540c\u6b65</li> <li>\u5047\u8bbeload,store\u662fatomic\u7684\uff08\u4e0d\u80fd\u88ab\u6253\u65ad\uff09</li> <li>\u4e24\u4e2a\u8fdb\u7a0b\u8d21\u732e\u4e24\u4e2a\u53d8\u91cf</li> <li>flag[2]:\u54ea\u4e2a\u8fdb\u7a0b\u51c6\u5907\u8fdbcritical section</li> <li>turn\uff1a\u8c01\u8fdbcritical section</li> </ul> <pre><code>do{ \n    flag[0] =TRUE; \n    turn =1; \n    while(flag[1] &amp;&amp;turn ==1); \n    critical section \n    flag[0] =FALSE; \n    remainder section \n} while(TRUE); \n</code></pre> <p>\u4e92\u65a5\u6027\uff1a</p> <ul> <li>Case 1: flag[1]=false-&gt; P1 is out CS</li> <li>Case 2: flag[1]=true, turn=1-&gt; P0 is looping, contradicts with P0 is in CS</li> <li>Case 3: flag[1]=true, turn=0-&gt; P1 is looping</li> </ul> <p>\u4e0d\u8db3\uff1a\u73b0\u4ee3\u7f16\u8bd1\u5668\u6709\u6307\u4ee4\u91cd\u6392\uff08instruction reorder\uff09\uff0c\u5bf9\u4e8e\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u4f1a\u51fa\u9519</p> <p>\u603b\u4e4b\u4e0d\u80fd\u7528\u8f6f\u4ef6\u5c42\u9762\u89e3\u51b3\u540c\u6b65</p>"},{"location":"co/syn/#solution","title":"solution","text":""},{"location":"co/syn/#memory-barriers","title":"memory barriers","text":"<ul> <li>strongly ordered:\u5185\u5b58\u6539\u53d8\u5176\u4ed6\u8fdb\u7a0b\u7acb\u5373\u53ef\u89c1</li> <li>weakly ordered\uff1a\u5185\u5b58\u6539\u53d8\u5176\u4ed6\u8fdb\u7a0b\u4e0d\u7acb\u5373\u53ef\u89c1</li> </ul>"},{"location":"co/syn/#lock-with-test-and-set","title":"lock with test-and-set","text":"<p>test_set(lock)\u662f\u539f\u5b50\u6027\u64cd\u4f5c\uff0c\u5c06\u9501\u7f6e\u4e3atrue\uff0c\u540c\u65f6\u8fd4\u56de\u539f\u6765\u7684\u9501\u539f\u6765\u7684\u503c\u3002</p> <pre><code>do{\n    lock=false;\n    while(test_set(lock));\n    critical section\n    lock=false;\n    remainder section\n}while(true)\n</code></pre> <p>\u521d\u59cb\u5316\u9501\u4e3afalse\uff0c\u7b2c\u4e00\u4e2a\u8c03\u7528test_set\u7684\u8fdb\u7a0b\u5c06\u9501\u7f6e\u4e3atrue\uff0c\u540c\u65f6\u8fdb\u5165critical section\u3002\u5176\u4ed6\u8fdb\u7a0b\u5c06\u4f1a\u5faa\u73af\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u5b8ccritical section\u7136\u540e\u628a\u9501\u53d8\u56de\u6cd5false\u3002\u56e0\u6b64\u4e92\u65a5\u662f\u6ee1\u8db3\u7684\u3002</p> <p>\u4f46\u662f\u6709busy waiting\u7684\u60c5\u51b5\uff0c\u5982\u4e00\u76f4\u662f\u67d0\u4e24\u4e2a\u8fdb\u7a0b\u6765\u56de\u8fdb\u5165critical section\uff0c\u800c\u7b2c\u4e09\u4e2a\u8fdb\u7a0b\u4e00\u76f4\u5faa\u73afwaiting\u3002</p>"},{"location":"language/_c/","title":"C\u8bed\u8a00\u57fa\u7840","text":"<p>Note</p> <ul> <li>\u8bfe\u7a0b\uff1a\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5\u57fa\u7840</li> <li>\u4efb\u8bfe\u8001\u5e08\uff1a\u7fc1\u607a</li> </ul> <p>\u7531\u4e8e\u53ea\u4e0a\u4e86\u4e00\u5b66\u671fC\u8bed\u8a00\uff0c\u5f88\u591a\u5185\u5bb9\u90fd\u662f\u6d45\u5c1d\u8f84\u6b62\uff0c\u5f53\u65f6\u7684\u7b14\u8bb0\u8bb0\u7684\u4e5f\u5f88\u968f\u610f\uff0c\u5982\u679c\u4ee5\u540e\u6709\u673a\u4f1a\u66f4\u6df1\u5165\u5b66\u4e60C\u8bed\u8a00\uff0c\u53ef\u80fd\u4f1a\u8fdb\u4e00\u6b65\u66f4\u65b0\u7b14\u8bb0</p>"},{"location":"language/_c/#c_1","title":"C\u8bed\u8a00\u57fa\u7840\u603b\u7ed3","text":""},{"location":"language/_c/#_1","title":"\u5e38\u8bc6","text":"<ul> <li>\u771f\u4e3a1\u5047\u4e3a0 </li> <li>\u4f8b\u59823&lt;x&lt;5\u6052\u7b49\u4e8e1     \u5148\u770b3&lt;x,\u7b49\u4e8e0\u62161\uff0c\u5c0f\u4e8e5</li> <li>\u8868\u8fbe\u5f0f\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u7ed3\u679c\uff0c\u4ee5\u53ca\u53ef\u80fd\u4ea7\u751f\u526f\u4f5c\u7528</li> <li>\u6bd4\u5982<code>int a=2++</code>,\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u662f\u4f7f2\u7684\u503c\u81ea\u589e\u4e3a3\uff0c\u526f\u4f5c\u7528\u662f\u628a2\u7684\u503c\u8d4b\u7ed9a\uff0c\u5373<code>a=2</code></li> <li>\u6bd4\u5982<code>if(x=0)</code>,\u8868\u8fbe\u5f0f\u7ed3\u679c\u662f0\uff0c\u6240\u4ee5if\u8bed\u53e5\u6c38\u4e0d\u6267\u884c\uff1b\u526f\u4f5c\u7528\u662f\u628a0\u8d4b\u7ed9x\uff0c\u5373<code>x=0</code></li> </ul>"},{"location":"language/_c/#c_2","title":"C\u8bed\u8a00\u6807\u8bc6\u7b26","text":"<ul> <li>\u6807\u8bc6\u7b26\u5fc5\u987b\u4ee5\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7$\u5f00\u5934\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\uff1b</li> <li>\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u7ec4\u6210\uff0c\u4e0d\u80fd\u4f7f\u7528\u5176\u4ed6\u7b26\u53f7\uff1b</li> <li>\u6807\u8bc6\u7b26\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 63 \u4e2a\u5b57\u7b26\uff1b</li> <li>C\u8bed\u8a00\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u56e0\u6b64\u53d8\u91cf a \u548c\u53d8\u91cf A \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\uff1b</li> <li>C\u8bed\u8a00\u4e2d\u6709\u4e00\u4e9b\u5173\u952e\u5b57\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\uff0c\u5982 if\u3001else\u3001while\u3001for \u7b49\u3002</li> </ul>"},{"location":"language/_c/#_2","title":"\u4f18\u5148\u7ea7","text":"<p>\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a 1. \u6bd4\u8f83\u5927\u4e8e\u8ba1\u7b97\u5927\u4e8e\u8d4b\u503c 2. \u5224\u65ad\u8fd0\u7b97\u7b26\u4e2d\uff0c\u5426&gt;\u5e76&gt;\u6216 3. \u5355\u76ee&gt;\u53cc\u76ee 4. <code>[ ]</code>\u7684\u4f18\u5148\u7ea7\u4e5f\u662f\u4e00\u7ea7 5. <code>++</code>&gt;<code>*</code></p>"},{"location":"language/_c/#_3","title":"\u7ed3\u5408\u6027","text":"<p>\u7ed3\u5408\u6027\u662f\u7528\u6765\u5224\u65ad\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8fd0\u7b97\u7b26\u7ec4\u5408\u5f0f\u7684\u8ba1\u7b97\u987a\u5e8f</p>"},{"location":"language/_c/#_4","title":"\u53f3\u7ed3\u5408","text":"<ul> <li>\u4ece\u53f3\u5f80\u5de6\u8ba1\u7b97</li> <li>\u5305\u62ec\u8d4b\u503c\u8fd0\u7b97\u7b26</li> </ul>"},{"location":"language/_c/#_5","title":"\u5de6\u7ed3\u5408","text":"<ul> <li>\u4ece\u5de6\u5f80\u53f3\u8ba1\u7b97</li> <li>\u5305\u62ec\u7b97\u6570\u8fd0\u7b97\u7b26\uff0c\u903b\u8f91\u8fd0\u7b97\u7b26</li> </ul>"},{"location":"language/_c/#_6","title":"\u91cd\u8981\u7b97\u6cd5","text":"<ul> <li>\u6a21\u62df\u7ad6\u5f0f\u9664\u6cd5 <pre><code>//digit\u4e3a\u4f4d\u6570\uff0cn\u4e3a\u88ab\u9664\u6570,x\u4e3a\u5149\u68cd\u6570\n      int n,digit=1,x=1;\n      scanf(\"%d\",&amp;n);\n//\u5148\u627e\u5230\u6bd4n\u5927\u7684\u6700\u5c0fx\n      while(n&gt;x){\n            x=10*x+1;\n            digit++;\n      }\n     while(1){ \n//\u9010\u4f4d\u8f93\u51fa\n            printf(\"%d\",x/n);\n            if(x%n==0){\n                  break;\n            }\n            x=x%n*10+1;\n            digit++;\n      }\n      printf(\"\\n%d\",digit);\n</code></pre></li> <li>\u6c42\u4ea4\u9519\u9879 <pre><code>//\u5b9a\u4e49\u7b26\u53f7\u53d8\u91cf\nint sign=1;\nfor(;;){\n    sum+=sign*value;\n    sign=-sign;//\u6bcf\u8f6e\u53d8\u53f7\n}\n</code></pre></li> </ul>"},{"location":"language/_c/#_7","title":"\u9519\u9898\u6574\u7406","text":"<ol> <li>\u6ce8\u91ca\u7b26\u53f7\u662f<code>/*  */</code></li> <li>\u5faa\u73af\u4f53\u5982\u5305\u62ec\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u8bed\u53e5\uff0c\u5219\u5fc5\u987b\u7528\u4e00\u5bf9\u5927\u62ec\u53f7{}\u62ec\u8d77\u6765\uff0c\u7ec4\u6210\u590d\u5408\u8bed\u53e5\uff0c\u590d\u5408\u8bed\u53e5\u5728\u8bed\u6cd5\u4e0a\u88ab\u8ba4\u4e3a\u662f\u4e00\u6761\u8bed\u53e5\u3002</li> <li><code>do{}while();</code>\u8bed\u6cd5\u9519\u8bef\uff0c\u56e0\u4e3a<code>while</code>\u62ec\u53f7\u91cc\u5fc5\u987b\u6709\u5185\u5bb9\uff1b<code>for(;;);</code>\u8bed\u6cd5\u6b63\u786e\uff0c\u56e0\u4e3afor\u5faa\u73af\u4e09\u4e2a\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u6ce8\u610f<code>;</code>\u4e0d\u80fd\u7701</li> <li>\u51fd\u6570\u53ea\u80fd\u83b7\u5f97\u4e00\u4e2a\u8fd4\u56de\u503c\u8bf4\u6cd5\u9519\u8bef <p>\u51fd\u6570\u67090\u62161\u4e2a\u8fd4\u56de\u503c</p> </li> <li>float\u7c7b\u578b\u7684\u52a0\u51cf\u6cd5\u4e0d\u7b26\u5408\u4e8c\u8fdb\u5236(binary)\uff0c0.1+0.2\uff01=0.3</li> <li><code>sizeof</code>\u4e0d\u662f\u51fd\u6570,\u4e0d\u8981\u5728\u91cc\u9762\u505a\u8fd0\u7b97\uff0c\u505a\u4e86\u4e5f\u6ca1\u6709\u7ed3\u679c\uff0c\u5982<code>int a=4;printf(\"%lu,%d\",sizeof(a++),a)</code>\u5f97\u5230\u7684\u7ed3\u679c\u4e3a4,4,\u5373a\u6ca1\u6709\u81ea\u589e\uff08\u8fd0\u7b97\u672a\u53d1\u751f\uff09 <p>is a static operator which does its calculation during compilation</p> </li> <li>ld\u62a5\u9519:\u7f16\u8bd1\u5df2\u901a\u8fc7\uff0c\u7f16\u8bd1\u662f\u8ba9\u6e90\u4ee3\u7801\u4ea7\u751f.c\u6587\u4ef6\uff0cmain\u4e0d\u662f\u5173\u952e\u5b57\uff0c\u6253\u9519main\u4f1a\u4ea7\u751fld\u62a5\u9519</li> </ol>"},{"location":"language/_c/#_8","title":"\u82f1\u6587","text":"<p>loop \u5faa\u73af</p> <p>variables \u53d8\u91cf</p> <p>value to x x\u7684\u503c</p> <p>precedence \u4f18\u5148</p> <p>Operator \u8fd0\u7b97\u7b26</p> <p>ascended/descended order \u5347\u5e8f/\u964d\u5e8f</p> <p>enumerates \u5217\u4e3e</p>"},{"location":"language/_c/#_9","title":"\u6570\u7ec4","text":""},{"location":"language/_c/#_10","title":"\u5b9a\u4e49\u6570\u7ec4","text":"<p>&lt; type &gt;+name[\u5143\u7d20\u6570\u91cf ] eg:int weight[number] \u6ce8\u610f\uff1a</p> <ol> <li>\u3010\u3011\u4e2d\u53ef\u4ee5\u662f\u53d8\u91cf\u6216\u8005\u53c2\u6570\uff0c\u6211\u4eec\u4e00\u822c\u5b9a\u4e49\u4e00\u4e2a\u5e38\u6570\u53d8\u91cf\u653e\u91cc\u9762\uff0c\u5982const int number=10</li> <li>\u6570\u7ec4\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u50a8\u5b58\u5bb9\u5668\uff0c\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e00\u4e2a\u503c\u4e14\u5177\u6709\u76f8\u540c\u5143\u7d20\u7c7b\u578b\uff0c\u53ef\u4ee5\u662fint\u6216double\u7b49\u7c7b\u578b\uff0c\u53ef\u4ee5\u8f93\u5165\u8f93\u51fa\uff1b\u4f46\u3010\u3011\u4e2d\u8868\u793a\u5143\u7d20\u6570\u91cf\uff0c\u53ea\u80fd\u662f\u6574\u6570</li> <li>\u4ece0\u5f00\u59cb</li> <li>\u6570\u7ec4\u7684\u5927\u5c0f\u5728\u521b\u5efa\u65f6\u786e\u7acb\uff0c\u4e4b\u540e\u65e0\u6cd5\u6539\u53d8</li> <li>\u6570\u7ec4\u7684\u5927\u5c0f\u53ef\u4ee5\u4e3a0\uff0c\u4f46\u4e0d\u80fd\u5b58\u653e\u4efb\u4f55\u6570\u503c</li> </ol>"},{"location":"language/_c/#_11","title":"\u521d\u59cb\u5316\u6570\u7ec4","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u904d\u5386\u6570\u7ec4\uff0c\u7528for\u5faa\u73af\u521d\u59cb\u5316</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u6570\u7ec4\u7684\u96c6\u6210\u521d\u59cb\u5316</p> <ol> <li>int a[]={1,4,6,7,4,56,7,} \u8868\u793a\u4e00\u5171\u6709\u4e03\u4e2a\u5143\u7d20\uff0c\u4f9d\u6b21\u8d4b\u503c</li> <li>int a[12]={1,2,} \u5171\u670912\u4e2a\u5143\u7d20\uff0c\u8868\u793a\u7b2c0\u4e2a\u548c\u7b2c\u4e00\u4e2a\u4e00\u6b21\u8d4b\u503c\u4e3a1\uff0c2\uff1b\u5176\u4ed6\u4e00\u5f8b\u4e3a0</li> <li>int a[12]{ [2]=1,[5]=2,4} \u8868\u793a\u7b2c\u4e8c\u4e2a\u8d4b\u503c\u4e3a1\uff0c\u7b2c\u4e94\u4e2a\u8d4b\u503c\u4e3a2\uff0c\u7b2c\u4e94\u4e2a\u540e\u9762\u4e5f\u5c31\u662f\u7b2c\u516d\u4e2a\u8d4b\u503c\u4e3a4\uff0c\u5176\u4f59\u4e3a0</li> <li>\u6570\u7ec4\u4e2d\u5143\u7d20\u4e2a\u6570\u53ef\u7528 sizeof(a)/sizeof(a[0]) \u8868\u793a \u6ce8\u610f\uff1a\u6570\u7ec4\u5927\u5c0f\u5fc5\u987b\u662f\u5b57\u9762\u91cf\uff0c\u4e0d\u80fd\u662f\u53d8\u91cf\uff0c\u6b64\u65f6\u624d\u80fd\u96c6\u6210\u521d\u59cb\u5316</li> </ol>"},{"location":"language/_c/#_12","title":"\u4f7f\u7528\u6570\u7ec4","text":"<ol> <li>\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u65f6\uff0c\u4e0d\u80fd\u5728\u3010\u3011\u7ed9\u51fa\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u4e0d\u80fd\u7528sizeof\u8ba1\u7b97\u6570\u7ec4\u7684\u6570\u91cf</li> <li>const\u5728*\u524d\u9762\uff0c\u6307\u9488\u6307\u5411\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c</li> <li>const\u5728*\u540e\u9762\uff0c\u6307\u9488\u662f\u5e38\u91cf\uff0c\u6307\u9488\u50a8\u5b58\u7684\u4f4d\u7f6e\u4e0d\u80fd\u4fee\u6539</li> </ol>"},{"location":"language/_c/#_13","title":"\u4e8c\u7ef4\u6570\u7ec4","text":"<p>\u5b9a\u4e49<code>int a[10][10]</code>\u4e24\u4e2a\u6570\u91cf\u90fd\u8981\u58f0\u660e\u6216\u8005<code>int a[][10]={0}</code>\u96c6\u6210\u521d\u59cb\u5316\uff0c\u7b2c\u4e00\u4f4d\u7684\u6570\u91cf\u53ef\u4ee5\u4e0d\u7ed9\u51fa</p>"},{"location":"language/_c/#string","title":"string","text":""},{"location":"language/_c/#_14","title":"\u8f93\u5165","text":"<pre><code>char a[20]\nscanf(\"%s\",a);\n</code></pre> <ol> <li>\u4e0d\u7528\u53d6\u5730\u5740\u7b26\uff0c\u56e0\u4e3aa\u4ee3\u8868a[0]\u7684\u4f4d\u7f6e</li> <li>\u8bfb\u5230\u7b2c\u4e00\u4e2a\u7a7a\u683c\uff0c\u5236\u8868\u7b26\u6216\u6362\u884c\u7b26\u65f6\u4e0d\u518d\u8bfb\u5165\uff0c\u8ba1\u7b97\u673a\u81ea\u52a8\u4e3a\u672b\u5c3e\u6dfb\u52a0\\0</li> <li>%s\u4f1a\u8bfb\u53d6\u9664\u7a7a\u767d\u5916\u7684\u5b57\u7b26\uff0c\u4f1a\u8df3\u8fc7\u7a7a\u767d\u8bfb\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26</li> <li>%d\u6bcf\u6b21\u8bfb\u53d6\u7684\u662f\u4e0a\u4e00\u6b21\u8bfb\u53d6\u4e22\u5f03\u7684\u975e\u6570\u5b57\u5b57\u7b26</li> </ol> <ul> <li>\" \"\u6807\u8bc6\u5b57\u7b26\u4e32\uff0c\u2018 \u2019\u8868\u793a\u5355\u4e2a\u5b57\u7b26\uff0c\u5b57\u7b26\u4e32\u4ee5\\0\u7ed3\u5c3e\uff08ASCLL\u7801\u4e3a0\uff09</li> </ul>"},{"location":"language/_c/#sizeof-and-strlen","title":"sizeof and strlen","text":""},{"location":"language/_c/#sizeof","title":"sizeof","text":"<ul> <li>sizeof is not a function but a unary operators</li> <li>\u5bf9\u4e8e\u6570\u636e\u7c7b\u578b\uff0c\u5fc5\u987b\u52a0\u62ec\u53f7\uff0c\u5982  <code>sizeof(int)</code> ;\u5bf9\u4e8e\u7279\u5b9a\u91cf\uff0c\u62ec\u53f7\u53ef\u52a0\u53ef\u4e0d\u52a0\uff0c\u5982<code>sizeof name\u7b49\u540c\u4e8esizeof(name)\uff0csizeof 8\u7b49\u540c\u4e8esizeof(8)</code></li> <li>\u672a\u77e5\u5b58\u50a8\u5927\u5c0f\u7684\u6570\u7ec4\u7c7b\u578b\u3001\u672a\u77e5\u5185\u5bb9\u7684\u7ed3\u6784\u6216\u8054\u5408\u7c7b\u578b\u3001void\u7c7b\u578b\u7b49\u662f\u4e0d\u6b63\u786e\u7684. </li> <li>\u5f53\u64cd\u4f5c\u662f\u5177\u4f53\u5b57\u7b26\u4e32\u6216\u6570\u503c\uff0csizeof\u4f1a\u6839\u636e\u7c7b\u578b\u8fdb\u884c\u76f8\u5e94\u8f6c\u5316   <code>\u4f8b\u5982 sizeof(2)=4     sizeof(\"aab\")=4</code></li> </ul>"},{"location":"language/_c/#strlen","title":"strlen","text":""},{"location":"language/_c/#_15","title":"\u9884\u5904\u7406","text":"<p><code># define NAME value</code> - \u672b\u5c3e\u4e0d\u7528\u5206\u53f7 - \u547d\u540d\u89c4\u5219\u548c\u53d8\u91cf\u4e00\u6837\uff0c\u6570\u5b57\u5b57\u6bcd\u4e0b\u5212\u7ebf\uff0c\u4e0d\u80fd\u6570\u5b57\u5f00\u5934 - const \u662f\u521b\u5efa\u4e86\u4e0d\u80fd\u4fee\u6539\u7684\u53d8\u91cf</p>"},{"location":"language/_c/#printf-and-scanf","title":"printf and scanf","text":"<ul> <li><code>scanf(\"%c\",a)</code>\u4ece\u8f93\u51fa\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u8bfb\uff1b<code>scanf(\" %c\",a)</code>\u4ece\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26\u5f00\u59cb\u8bfb</li> <li><code>printf(\"%5d\",a)</code>\u8868\u793a\u8f93\u51fa\u4e94\u4e2a\u5b57\u7b26\u957f\u5ea6\uff0c\u82e5a\u5927\u4e8e5\u4e2a\u957f\u5ea6\uff0c\u4f1a\u81ea\u52a8\u6269\u5145\u4e3aa\u7684\u957f\u5ea6\uff1b\u82e5a\u5c0f\u4e8e5\u4e2a\u957f\u5ea6\uff0c\u4f1a\u8f93\u51fa\u7a7a\u683c\u6765\u8fbe\u52305\u4e2a\u957f\u5ea6\uff08\u53f3\u5bf9\u9f50\uff09\uff1b<code>printf(\"%-5d\",a)</code>\u8868\u793a\u5de6\u5bf9\u9f50</li> </ul>"},{"location":"language/_c/#struct","title":"\u7ed3\u6784struct","text":""},{"location":"language/_c/#_16","title":"\u5b9a\u4e49","text":"<ul> <li><code>struct name{};</code>\u7136\u540e\u628astruct name \u770b\u4f5c\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u7c7b\u578b</li> <li>\u5b9a\u4e49\u7684\u4e24\u79cd\u65b9\u5f0f <pre><code>struct date thisday{\n    int x;\n    int y;\n    double a;\n};//\u6ce8\u610f\u5206\u53f7\u4e0d\u8981\u6f0f\n\nstruct date thisday{//\u6b64\u5904thisday\u4e5f\u53ef\u4ee5\u7701\u7565\n    int x;//\u4e5f\u53ef\u4ee5 int x,y;\n    int y;\n    double a;\n}p1,p2;//\u540c\u65f6\u521b\u5efa\u4e86p1,p2\u4e24\u4e2a\u7ed3\u6784\u53d8\u91cf\n</code></pre></li> </ul>"},{"location":"language/_c/#_17","title":"\u521d\u59cb\u5316","text":"<pre><code>struct date a={1,2};\na.x=3;\n</code></pre>"},{"location":"language/_c/#_18","title":"\u6613\u9519","text":"<ul> <li> <p>p\u662f\u6307\u5411\u7ed3\u6784\u7684\u6307\u9488\uff0c\u5219 <code>(*p).year</code> \u7b49\u540c\u4e8e <code>p-&gt;year</code></p> </li> <li> <p>&amp;</p> <ul> <li>\u53ea\u80fd\u53d6\u53d8\u91cf\u7684\u5730\u5740\uff0c\u800c\u4e0d\u80fd\u53d6\u4e00\u4e2a\u7ed3\u679c\u7684\u503c</li> <li>%p</li> </ul> </li> <li><code>int* p,q</code>\u7b49\u4e8e<code>int *p,q</code>,\u5176\u4e2dq\u662f\u6574\u5f62\u800c\u4e0d\u662f\u6307\u9488</li> <li>*\u5728\u5b9a\u4e49\u53d8\u91cf\u662f\u6307\u9488\u6807\u8bb0\uff0c\u5176\u4ed6\u65f6\u5019\u662f\u505a\u8fd0\u7b97\u7b26\uff08\u4e58\u6cd5\u6216\u89e3\u5f15\u7528\uff09</li> </ul>"},{"location":"language/_c/#scanf","title":"scanf\u7684\u8fd4\u56de\u503c","text":"<ul> <li> <p>\u8868\u793a\u6210\u529f\u8bfb\u5165\u7684\u503c\u7684\u4e2a\u6570</p> </li> <li> <p>\u8bfb\u5230\u7b2c\u4e00\u4e2a\u9519\u8bef\u7c7b\u578b\u5c31\u4f1a\u505c\u6b62\u7ee7\u7eed\u8bfb\u5165     <pre><code>int i,j,k;\n//\u8bfb\u5165abc,123\nk=scanf(\"%d %d\",&amp;i,&amp;j);\n//\u8bfb\u5230abc\u5c31\u51fa\u9519\uff0c\u505c\u6b62\u7ee7\u7eed\u8bfb\u5165\nprintf(\"%d %d %d\",i,j,k);\n//\u7ed3\u679c\uff1ak=0\n</code></pre></p> </li> </ul>"},{"location":"language/_c/#pointer","title":"\u6307\u9488pointer","text":""},{"location":"language/_c/#_19","title":"\u4e0e\u6570\u7ec4\u7684\u5173\u7cfb","text":""},{"location":"language/_c/#_20","title":"\u533a\u522b\u4e0e\u8054\u7cfb","text":"<ul> <li>\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\u5c31\u662f\u6307\u9488</li> </ul> <pre><code>//\u4ee5\u4e0b\u7b49\u4ef7\n  int sum(int *ar, int n);\n  int sum(int *, int);\n  int sum(int ar[], int n);\n  int sum(int [], int);\n</code></pre> <ul> <li>\u6570\u7ec4\u540d\u53ef\u4ee5\u770b\u4f5c\u5e38\u6570\u6307\u9488\uff0c\u56e0\u6b64\u4e0d\u80fd\u88ab\u8d4b\u503c\uff0c\u4e0d\u80fd\u505a++\u8fd0\u7b97\u7b49<ul> <li>\u6570\u7ec4\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u8d4b\u503c\uff0c\u5b9a\u4e49\u540e\u4e0d\u80fd\u5728\u8d4b\u503c\uff0c\u5982\uff1a <pre><code>char str[]=\"string\";//\u6b63\u786e\nchar str[10]; str=\"string\";//\u9519\u8bef,\u6570\u7ec4\u662fconst pointer\nchar *p; p=\"string\";//\u6b63\u786e\uff0c\u666e\u901a\u6307\u9488\u4e0d\u662fconst pointer\n</code></pre></li> </ul> </li> </ul>"},{"location":"language/_c/#int-a10","title":"<code>int a[10]</code>\u7684\u7406\u89e3","text":"<ul> <li> <p>\u521b\u5efa\u4e86\u4e00\u4e2a\u6570\u7ec4a,\u5176\u4e2da\u7684\u7c7b\u578b\u662f\u6570\u7ec4\u540d\uff0c\u4e5f\u5c31\u662f<code>int [10]</code>,\u800c\u4e0d\u662f<code>int *</code></p> <ul> <li>\u6570\u7ec4\u540d\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u6307\u5411\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff0c\u8fd9\u662f\u56e0\u4e3a\u6570\u7ec4\u540d\u548c\u6307\u9488\u4e4b\u95f4\u5b58\u5728\u4e00\u79cd\u9690\u5f0f\u7684\u5173\u7cfb\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u6570\u7ec4\u540d\u65f6\uff0c\u5b83\u4f1a\u88ab\u89e3\u91ca\u4e3a\u6307\u5411\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002</li> <li><code>a=&amp;a[0]</code></li> <li>a\u5b58\u50a8\u7684\u662fa[0]\u7684\u5730\u5740\uff0c\u4f46a\u4ee3\u8868\u7684\u662f\u6574\u4e2a\u6570\u7ec4\u3002\u56e0\u6b64&amp;a\u548ca\u867d\u7136\u6570\u503c\u76f8\u540c\u4f46\u610f\u4e49\u4e0d\u540c\uff0c\u53ef\u4ee5\u4ece<code>(&amp;array)+1</code>\u548c<code>array+1</code>\u4e2d\u770b\u51fa------\u524d\u8005\u79fb\u52a8\u4e8640\u4e2aByte\uff0c\u540e\u8005\u79fb\u52a8\u4e864\u4e2aByte</li> </ul> </li> <li> <p>[ ]\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u7279\u6b8a\u52a0\u6cd5\u8fd0\u7b97\uff0c<code>i[a]=a[i]=*(a+i)</code></p> <ul> <li>\u6307\u9488\u4e5f\u53ef\u4ee5\u7528[ ]    </li> </ul> </li> </ul>"},{"location":"language/_c/#_21","title":"*\u4e0e[ ]\u7684\u7ec4\u5408","text":"<ul> <li>[ ]\u7684\u8ba1\u7b97\u4f18\u5148\u7ea7\u8981\u9ad8\u4e8e *</li> <li><code>int *p[10]</code>=<code>int *p([10])</code><ul> <li>p\u8868\u793a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5373p\u7684\u7c7b\u578b\u662f\u6307\u9488\u6570\u7ec4 <pre><code>int a=1,b=2;\nint *p[2]={&amp;a,&amp;b};\n//\u8f93\u51faa\u7684\u503c\nprintf(\"a=%d\",*p[0]);\n</code></pre></li> </ul> </li> <li><code>int (*p)[10]</code><ul> <li>p\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u4ed6\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u5373p\u7684\u7c7b\u578b\u662f\u6570\u7ec4\u6307\u9488 <pre><code>int arr[2]={1,2};\nint (*p)[2]=&amp;arr;\n//\u8f93\u51faarr\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\nprintf(\"%d\",(*p)[0]);\n</code></pre></li> </ul> </li> </ul>"},{"location":"language/_c/#dangling-pointer","title":"dangling pointer","text":"<ul> <li>\u6307\u9488\u672a\u521d\u59cb\u5316\uff0c\u53ef\u80fd\u6307\u5411\u4efb\u610f\u4f4d\u7f6e\uff0c\u53ef\u80fd\u9020\u6210\u4e25\u91cd\u540e\u679c</li> </ul>"},{"location":"language/_c/#pointer-and-calculable","title":"pointer and calculable","text":"<ul> <li>\u6307\u9488+1\u662f\u6307\u5411\u4e0b\u4e00\u4e2a\u53d8\u91cf</li> <li>\u5982\u679c\u6307\u5411\u7684\u4e0d\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u7a7a\u95f4\uff0c\u5982\u6570\u7ec4\uff0c\u5219\u8fd9\u79cd\u8ba1\u7b97\u6ca1\u6709\u610f\u4e49</li> <li>\u4ee5\u4e0b\u8fd0\u7b97\u53ef\u4ee5\u505a<ul> <li>\u52a0\u51cf\u4e00\u4e2a\u5e38\u6570\uff08+\uff0c-\uff0c+=\uff0c-=\uff09</li> <li>\u9012\u589e\u9012\u51cf\uff08++\uff0c--\uff09</li> <li>\u4e24\u4e2a\u6307\u9488\u76f8\u51cf,\u6ce8\u610f\u4e0d\u80fd\u76f8\u52a0</li> <li>\u540c\u7c7b\u578b\u7684\u6307\u9488\u53ef\u4ee5\u6bd4\u8f83\u5927\u5c0f,\u6bd4\u8f83\u7684\u662f\u6307\u9488\u4e2d\u50a8\u5b58\u7684\u5730\u5740\u7684\u5927\u5c0f</li> </ul> </li> </ul>"},{"location":"language/_c/#p","title":"<code>*p++</code>","text":"<ul> <li>*\u7684\u4f18\u5148\u7ea7\u548c++\u76f8\u540c\uff0c\u4f46\u662f\u53f3\u7ed3\u5408<ul> <li>\u7b49\u540c\u4e8e<code>*(p++)</code></li> </ul> </li> <li>\u5148\u53d6\u51fa\u6307\u9488p\u6240\u6307\u7684\u90a3\u4e2a\u503c\uff0c\u7136\u540e\u518d\u8ba9\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a </li> </ul>"},{"location":"language/_c/#_22","title":"\u6307\u9488\u7c7b\u578b\u8f6c\u5316","text":""},{"location":"language/_c/#void","title":"<code>void *</code>","text":"<ul> <li>\u4e0d\u77e5\u9053\u6307\u5411\u4ec0\u4e48\u4e1c\u897f\u7684\u6307\u9488</li> <li>\u8ba1\u7b97\u65f6\u4e0e<code>char *</code>\u7c7b\u4f3c\uff0c\u5373\u4e00\u4e2a\u5b57\u8282</li> </ul>"},{"location":"language/_c/#_23","title":"\u7c7b\u578b\u8f6c\u5316","text":"<ul> <li>\u5982 <code>int *p=&amp;i;void *q=(void *)p</code></li> <li>\u5e76\u6ca1\u6709\u6539\u53d8p\u6240\u6307\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u4f46\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u8bbf\u95eep\u6240\u6307\u7684\u5185\u5b58</li> </ul>"},{"location":"language/_c/#_24","title":"\u6307\u9488\u7c7b\u578b\u7684\u6df1\u5165\u7406\u89e3","text":"<ul> <li>\u6307\u9488\u7684\u5730\u5740\u662f\u5b57\u8282\u7684\u9996\u5730\u5740<ul> <li>\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u8bfb\u53d6\u5b57\u8282\u7684\u65b9\u5f0f\u4e0d\u540c\uff0c\u6bd4\u5982char\u53ea\u8bfb\u4e00\u4e2a\u5b57\u8282\uff0c\u800cint\u8fde\u8bfb\u56db\u4e2a\u5b57\u8282</li> <li>\u8fd9\u4e5f\u662f\u6307\u9488\u7c7b\u578b\u8f6c\u5316\u7684\u539f\u7406\uff0c\u6539\u53d8\u8bfb\u5b57\u8282\u7684\u65b9\u5f0f\uff0c\u4f46\u6ca1\u6709\u6539\u53d8\u50a8\u5b58\u7684\u6570\u636e</li> </ul> </li> </ul>"},{"location":"language/_c/#0","title":"0\u5730\u5740","text":"<ul> <li>0\u5730\u5740\u4e0d\u53ef\u8bfb\u4e5f\u4e0d\u53ef\u5199\uff0c\u53730\u5730\u5740\u4e0d\u53ef\u8bbf\u95ee</li> <li>NULL\u662f\u4e00\u4e2a\u9884\u5b9a\u5b9a\u4e49\u7684\u7b26\u53f7\uff0c\u8868\u793a\u96f6\u5730\u5740</li> </ul>"},{"location":"language/_c/#string_1","title":"\u5b57\u7b26\u4e32string","text":"<ul> <li>C\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u662f\u4ee5\u5b57\u7b26\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u5728\u7684</li> <li>\u521d\u59cb\u5316\u65b9\u5f0f <pre><code>char *s={'a','b','c','\\0'};//\u6ce8\u610f\u6700\u540e\u67090\uff0c'\\0'==0!='0'\nchar *s=\"abc\";//\u5b57\u9762\u91cf\u76f4\u63a5\u8d4b\u503c\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u6dfb\u52a0\u7ed3\u5c3e\u76840\n//below is wrong because the pointer is a dangling pointer\nchar *s;\nscanf(\"%s\",s);\n</code></pre></li> </ul>"},{"location":"language/_c/#char-p-and-char-p","title":"<code>char *p</code> and <code>char p[]</code>","text":"<ul> <li>\u524d\u8005\u662f\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\uff0c\u521d\u59cb\u5316\u540e\u4e0d\u80fd\u518d\u4fee\u6539<ul> <li>\u539f\u56e0\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6307\u9488\u5728\u4ee3\u7801\u533a\u800c\u4e0d\u662f\u6808\u533a\uff0c\u53ea\u53ef\u8bfb\u4e0d\u53ef\u5199</li> </ul> </li> <li>\u524d\u8005\u4e5f\u4e0d\u4e00\u5b9a\u662f\u5b57\u7b26\u4e32\uff0c\u9664\u975e\u4ed6\u6240\u6307\u7684\u5b57\u7b26\u4e32\u4ee5\\0\u7ed3\u5c3e</li> </ul>"},{"location":"language/_c/#string-operation","title":"string operation","text":""},{"location":"language/_c/#assignment","title":"assignment","text":"<ul> <li><code>c     char *t=\"tittle\"     char *s;     s=t;</code></li> <li>s and t are two pointers which all point to the string tittle</li> </ul>"},{"location":"language/_c/#_25","title":"\u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf","text":""},{"location":"language/_c/#_26","title":"\u5185\u5b58\u7684\u7ed3\u6784","text":"<ul> <li>heap \uff08\u5806\uff09\uff1a\u7528\u4e8e\u52a8\u6001\u7533\u8bf7\u5185\u5b58</li> <li>stack\uff08\u6808\uff09:\u5c40\u90e8\u53d8\u91cf</li> <li>static/global\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf</li> <li>code\uff08\u4ee3\u7801\u6bb5\uff0c\u53ea\u8bfb\uff09\uff1a\u5982\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5e38\u6570\u6307\u9488</li> </ul>"},{"location":"language/_c/#_27","title":"\u5168\u5c40\u53d8\u91cf","text":"<ul> <li>\u5b9a\u4e49\u5728\u51fd\u6570\u5916\u7684\u53d8\u91cf</li> <li>\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u5355\u4e2a<code>.c</code>\u6587\u4ef6</li> <li>\u53ef\u4ee5\u4e0e\u5c40\u90e8\u53d8\u91cf\u91cd\u540d\uff0c\u82e5\u91cd\u540d\uff0c\u5728\u51fd\u6570\u4e2d\u4f18\u5148\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf      <code>c         int x = 5, y = 6;         void incxy( )         {                x++;             y++;         }         int main(void )         {              int x = 3;           incxy( );           printf(\"%d, %d\\n\", x, y);         }</code><ul> <li>\u8f93\u51fa\u4e3ax=3,y=7</li> <li>\u5bf9\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u56e0\u4e3ay\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u51fd\u6570\u4f1a\u6539\u53d8\u5b83\u7684\u503c\uff1b</li> <li>x\u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf\u540c\u540d\uff0c\u4f18\u5148\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\uff0c\u6545x\u7684\u503c\u4e0d\u53d8\uff1b</li> </ul> </li> </ul>"},{"location":"language/_c/#_28","title":"\u5168\u5c40\u53d8\u91cf\u7684\u521d\u59cb\u5316","text":"<ul> <li>\u53ea\u80fd\u7528\u5f53\u524d\u5df2\u77e5\u7684\u503c\u6765\u521d\u59cb\u5316</li> <li>\u82e5\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u4f1a\u81ea\u52a8\u521d\u59cb\u5316\u4e3aNULL\u62160</li> <li>\u521d\u59cb\u5316\u5728main\u51fd\u6570\u4e4b\u524d</li> </ul>"},{"location":"language/_c/#static","title":"<code>static</code>","text":"<ul> <li>\u53d8\u91cf\u524d\u52a0\u4e0a<code>static</code>\u53d8\u6210\u9759\u6001\u53d8\u91cf</li> <li>\u9759\u6001\u53d8\u91cf\u5b9e\u9645\u4e0a\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u50a8\u5b58\u5728global\u533a,\u5373\u5176\u751f\u5b58\u533a\u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837</li> <li>\u9759\u6001\u662f\u4f7f\u4f5c\u7528\u57df\u53d8\u6210\u5c40\u90e8</li> <li> <p>\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u5185\u90e8\uff0c\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\u3002\u5f53\u51fd\u6570\u79bb\u5f00\u65f6\uff0c\u9759\u6001\u672c\u5730\u53d8\u91cf\u4f1a\u7ee7\u7eed\u5b58\u5728\u5e76\u4fdd\u6301\u539f\u503c\uff0c\u4f8b\u5982     <pre><code>void f(){\n  static int a=2;\n  a+=2;\n  printf(\"%d\",a);\n}\n</code></pre></p> <ul> <li>\u8fde\u7eed\u8c03\u7528\u4e09\u6b21f\u51fd\u6570\uff0c\u8f93\u51fa\u4e3a4\uff0c6\uff0c8</li> </ul> </li> <li> <p>\u9759\u6001\u672c\u5730\u53d8\u91cf\u4f5c\u7528\u57df\u53ea\u5728\u5355\u4e2a<code>.c</code>\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u7a0b\u5e8f</p> </li> <li>\u9759\u6001\u51fd\u6570\u662f\u53ea\u80fd\u5728\u5f53\u524d\u7f16\u8bd1\u5355\u5143\u4f7f\u7528\u7684\u51fd\u6570\uff08\u540c\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff09</li> </ul>"},{"location":"language/_c/#_29","title":"\u81ea\u52a8\u53d8\u91cf\u548c\u5916\u90e8\u53d8\u91cf","text":"<ul> <li>\u81ea\u52a8\u53d8\u91cf\u662f\u81ea\u52a8\u521b\u5efa\u548c\u9500\u6bc1\u7684\u53d8\u91cf\uff0c\u5c40\u90e8\uff08\u672c\u5730\uff09\u53d8\u91cf\u662f\u81ea\u52a8\u53d8\u91cf</li> <li>\u5916\u90e8\u53d8\u91cf\u662f\u591a\u4e2a\u6a21\u5757\u53ef\u8bbf\u95ee\u7684\u53d8\u91cf\uff0c\u5168\u5c40\u53d8\u91cf\u662f\u5916\u90e8\u53d8\u91cf</li> </ul>"},{"location":"language/_c/#_30","title":"\u533a\u522b","text":"<ol> <li>\u53ef\u89c1\u6027\uff1a\u5916\u90e8\u53d8\u91cf\u5168\u5c40\u53ef\u89c1</li> <li>\u751f\u5b58\u671f\u548c\u4f5c\u7528\u57df</li> <li>\u521d\u59cb\u5316\uff1a\u5916\u90e8\u53d8\u91cf\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\uff0c\u81ea\u52a8\u53d8\u91cf\u9700\u624b\u52a8\u521d\u59cb\u5316</li> </ol>"},{"location":"language/_c/#_31","title":"\u7a0b\u5e8f\u7ed3\u6784","text":""},{"location":"language/_c/#_32","title":"\u7f16\u8bd1\u9884\u5904\u7406","text":"<ul> <li><code>#</code>\u5f00\u5934\u7684\u8bed\u53e5\u662f\u7f16\u8bd1\u9884\u5904\u7406\u6307\u4ee4</li> <li>\u4e0d\u662fC\u8bed\u8a00\u7279\u6709\u800c\u662f\u6240\u6709\u8bed\u8a00\u5171\u6709</li> </ul>"},{"location":"language/_c/#_33","title":"\u5b8f","text":"<ul> <li><code>#define name expression</code> \u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5b8f</li> <li>\u5982\u679c\u8981\u6362\u884c\uff0c\u884c\u672b\u9700\u52a0<code>\\</code></li> </ul>"},{"location":"language/_c/#_34","title":"\u5b8f\u5b9a\u4e49\u7684\u51fd\u6570","text":"<ul> <li>\u5b8f\u53ef\u4ee5\u5b9a\u4e49\u6210\u50cf\u51fd\u6570\u4e00\u6837\uff0c\u5982<code>#define cube(x) ( (x)*(x)*(x) )</code><ul> <li>\u6ce8\u610f\u8868\u8fbe\u5f0f\u4e2d\u6bcf\u4e2ax\u90fd\u8981\u52a0\u62ec\u53f7\uff0c\u8868\u8fbe\u5f0f\u6574\u4f53\u4e5f\u8981\u52a0\u62ec\u53f7</li> <li>\u53ef\u4ee5\u5e26\u591a\u4e2a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u7ec4\u5408\u5b9a\u4e49\u5176\u4ed6\u5b8f</li> </ul> </li> </ul>"},{"location":"language/_c/#_35","title":"\u8fd0\u7b97\u7b26","text":"<ol> <li><code>#</code> operator - \u5c06\u53c2\u6570\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa,<code>#a</code>-&gt;<code>\"a\"</code>   - <code># define prt(a) printf(#a \"=%d\",a)</code>,\u5219\u66ff\u6362\u4e3a<code>printf(\"a\" \"=%d\",a)</code></li> <li><code>##</code> operator - \u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765   - \u5982\uff1a<code>#define ME(item,id) item##_##id</code>,\u5219\u66ff\u6362\u4e3a<code>item_id</code></li> </ol>"},{"location":"language/_c/#_36","title":"\u6761\u4ef6\u7f16\u8bd1","text":"<pre><code>    #ifdef NameofMacros\n    #else//else\u4e5f\u53ef\u6ca1\u6709\n    #endif\n    //\u6216\u8005\uff1a\n    #ifndef NameofMacros\n    #endif\n</code></pre> <p>\u5176\u4ed6\uff1a<code>#error</code> \u4ea7\u751f\u4e00\u4e2a\u9519\u8bef</p>"},{"location":"language/_c/#_37","title":"\u5927\u7a0b\u5e8f","text":"<ul> <li>\u4e2d\u95f4\u8fc7\u7a0b\u6587\u4ef6\uff1a</li> <li>a.c-&gt;a.i \u9884\u5904\u7406</li> <li>a.i-&gt;a.s \u6c47\u7f16</li> <li>a.s-&gt;a.o \u751f\u6210\u76ee\u6807\u6587\u4ef6\uff08object\uff09</li> <li>a.o+\u5e93-&gt;a.out \u94fe\u63a5,\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</li> <li><code>gcc -c</code>\u53ea\u7f16\u8bd1\uff0c\u4e0d\u94fe\u63a5</li> <li><code>gcc a.c --save-temps</code>\u4fdd\u5b58\u4e2d\u95f4\u6587\u4ef6</li> </ul>"},{"location":"language/_c/#_38","title":"\u7f16\u8bd1\u5355\u5143","text":""},{"location":"language/_c/#c_3","title":"\u7f16\u8bd1\u5355\u5143\u662f\u6bcf\u4e2a.c\u6587\u4ef6","text":"<ul> <li><code>a.c--&gt;a.o</code>\u7684\u8fc7\u7a0b\u79f0\u4e3a\u7f16\u8bd1</li> <li>\u7f16\u8bd1\u5668\u6bcf\u6b21\u7f16\u8bd1\u53ea\u5904\u7406\u4e00\u4e2a\u5355\u5143</li> <li><code>gcc a.c b.c</code> \u5148<code>a.c-&gt;a.o</code>,\u63a5\u7740<code>a.o</code>\u653e\u4e00\u8fb9\uff0c<code>b.c-&gt;b.o</code>,\u6700\u540e\u518d\u628a<code>a.o b.o</code>\u548c\u5e93\u94fe\u63a5\u8d77\u6765</li> </ul>"},{"location":"language/_c/#_39","title":"\u5934\u6587\u4ef6","text":"<p>\u5728\u7f16\u8bd1<code>a.c</code>\u65f6\u4e0d\u77e5\u9053<code>b.c</code>\u7684\u5185\u5bb9\uff0c\u5047\u5982\u5728<code>a.c</code>\u4e2d\u4f7f\u7528\u8fc7<code>b.c</code>\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u7b49\uff0c\u5219\u7f16\u8bd1\u4e0d\u80fd\u901a\u8fc7\uff0c\u4e3a\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u987b\u5728<code>a.c</code>\u4e2d\u58f0\u660e<code>b.c</code>\u7684\u5185\u5bb9\uff0c\u8fd9\u9700\u8981\u7528\u5230\u5934\u6587\u4ef6 - <code>include\"b.h\"</code> - \u5934\u6587\u4ef6\u91cc\u7684\u6587\u672c\u5185\u5bb9\u76f4\u63a5\u88ab\u5168\u90e8\u66ff\u6362\u8fdb\u7a0b\u5e8f\u4e2d</p>"},{"location":"language/_c/#_40","title":"\u6807\u51c6\u5934\u6587\u4ef6\u7ed3\u6784","text":"<p>\u4e3a\u907f\u514d\u91cd\u590d\u58f0\u660e\uff0c\u5934\u6587\u4ef6\u6709\u5982\u4e0b\u6807\u51c6\u7ed3\u6784 <pre><code>#ifndef __A_H__\n#define __A_H__\n//...\n#endif\n</code></pre></p>"},{"location":"language/_c/#_41","title":"\u58f0\u660e","text":"<ul> <li>\u5934\u6587\u4ef6\u4e2d\u5e94\u5305\u542b\u58f0\u660e\u800c\u975e\u5b9a\u4e49</li> <li>\u5426\u5219\u4f1a\u51fa\u73b0\u91cd\u590d\u7684\u5b9a\u4e49<ul> <li>\u56e0\u4e3a\u5b9a\u4e49\u4ea7\u751f\u4ee3\u7801\uff0c\u58f0\u660e\u4e0d\u4ea7\u751f</li> </ul> </li> <li>\u58f0\u660e\u4e0d\u4ea7\u751f\u4ee3\u7801\uff0c\u53ea\u662f\u8ba9\u7535\u8111\u77e5\u9053\uff0c\u800c\u5b9a\u4e49\u4ea7\u751f\u4ee3\u7801</li> <li>\u53ea\u6709\u58f0\u660e\u53ef\u4ee5\u653e\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u5b9a\u4e49\u4e0d\u884c</li> <li>\u5426\u5219\u4f1a\u4ea7\u751f\u91cd\u540d\u7684\u5b9e\u4f53</li> </ul>"},{"location":"language/_c/#_42","title":"\u5168\u5c40\u53d8\u91cf\u7684\u58f0\u660e","text":"<p>\u58f0\u660e\u524d\u52a0<code>extern</code> - <code>extern int a</code> - <code>int a</code>\u662f\u5b9a\u4e49\u53d8\u91cf\uff0c\u52a0\u4e0a<code>extern</code>\u624d\u662f\u58f0\u660e</p>"},{"location":"language/_c/#_43","title":"\u524d\u5411\u58f0\u660e","text":"<p>\u4e00\u822c\u7528\u5728\u6307\u9488\uff0c\u56e0\u4e3a\u4f60\u8981\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u6307\u9488\u6307\u5411\u4ec0\u4e48\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u4f60\u4e0d\u9700\u8981\u5177\u4f53\u5199\u51fa\u8fd9\u4e2a\u7c7b\u578b\u7684\u5185\u5bb9 <pre><code>struct node;\ntypedef struct{\n  node *head;\n}list;\n</code></pre> \u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u6211\u9700\u8981\u5b9a\u4e49<code>head</code>\u6307\u9488\uff0c\u5219\u9700\u5199\u4e0b<code>struct node</code>\u7684\u524d\u5411\u58f0\u660e\u6765\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u6307\u9488\u6307\u5411<code>node</code>\u8fd9\u4e2a\u7ed3\u6784\uff0c\u4f46\u6211\u4e0d\u9700\u8981\u5199\u51fa<code>node</code>\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u56e0\u4e3a\u6b64\u65f6\u7f16\u8bd1\u5668\u4e0d\u9700\u8981\u77e5\u9053</p>"},{"location":"language/_c/#include","title":"<code>#include</code>","text":"<ul> <li><code>#include</code>\u4e0d\u662f\u7528\u6765\u5f15\u5165\u5e93\u7684,\u4ed6\u7684\u6587\u672c\u5185\u5bb9\u662f\u76f8\u5e94\u7684\u58f0\u660e \u7c7b\u6bd4\u5934\u6587\u4ef6</li> <li>\u91cc\u9762\u53ea\u6709\u51fd\u6570\u539f\u578b\uff0c\u51fd\u6570\u4ee3\u7801\u5728\u53e6\u5916\u7684\u5730\u65b9(\u5373\u5728\u5bf9\u5e94\u7684\u6807\u51c6\u5e93\u91cc\uff0c\u7a0b\u5e8f\u77e5\u9053\u53bb\u54ea\u91cc\u627e\u5230\u4ed6)</li> <li>\u53ea\u662f\u8ba9\u51fd\u6570\u77e5\u9053</li> </ul>"},{"location":"language/_c/#_44","title":"<code>\"\"</code>\u4e0e<code>&lt;&gt;</code>","text":"<ul> <li><code>\" \"</code>\u8981\u6c42\u7f16\u8bd1\u5668\u5728\u5f53\u524d\u76ee\u5f55\u5bfb\u627e\u6587\u4ef6\uff08\u5373.c\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff09,\u627e\u4e0d\u5230\u518d\u53bb\u7f16\u8bd1\u5668\u6307\u5b9a\u7684\u76ee\u5f55\u53bb\u627e</li> <li><code>&lt; &gt;</code>\u8981\u6c42\u7f16\u8bd1\u5668\u53bb\u6307\u5b9a\u76ee\u5f55\u627e</li> <li>\u56e0\u6b64\u7f16\u8bd1\u5668\u77e5\u9053\u81ea\u5df1\u7684\u6807\u51c6\u5e93\u5934\u6587\u4ef6\u5728\u54ea</li> </ul>"},{"location":"language/_matlab/","title":"matlab","text":"<p>\u8fd9\u4e2a\u8bfe\u6ca1\u4ec0\u4e48\u7528\uff0c\u7b14\u8bb0\u968f\u4fbf\u505a\u7684\uff0c\u8bb0\u7684\u4e0d\u5168</p>"},{"location":"language/_matlab/#matlab","title":"matlab","text":"<p>Abstract</p> <ul> <li>\u8bfe\u7a0b\uff1a\u77ed\u5b66\u671fmatlab</li> <li>\u4efb\u8bfe\u8001\u5e08\uff1a\u8096\u4fca</li> </ul>"},{"location":"language/_matlab/#_1","title":"\u53d8\u91cf\u547d\u540d","text":"<ul> <li>\u4e0d\u80fd\u662f\u5173\u952e\u5b57</li> <li>pi\u662f\u03a0</li> <li><code>iskeyword</code>\u83b7\u53d6\u5173\u952e\u5b57</li> <li>\u5b57\u6bcd\u5f00\u5934\uff0c\u7531\u6570\u5b57\u5b57\u6bcd\u4e0b\u5212\u7ebf\u7ec4\u6210</li> </ul>"},{"location":"language/_matlab/#_2","title":"\u57fa\u672c\u8bed\u6cd5","text":""},{"location":"language/_matlab/#_3","title":"\u8f93\u5165\u8f93\u51fa","text":"<pre><code>a=input('a=');     %a=\u662f\u8f93\u51fa\u7684\u63d0\u793a\u8bcd\ndisp('hello world');\n</code></pre>"},{"location":"language/_matlab/#_4","title":"\u63a7\u5236\u8bed\u53e5","text":"<ol> <li> <p>if\u8bed\u53e5\uff0c\u7f29\u8fdb\u8868\u793a\u8bed\u53e5\u5757\uff0c\u6ce8\u610f\u4e0d\u8981\u6f0f\u6389\u6700\u540e\u7684end <pre><code>if a&gt;b\n    disp('1');\nelseif a==b\n    disp('2');\nelse\n    disp('3');\nend\n</code></pre></p> </li> <li> <p>switch\u8bed\u53e5 <pre><code>switch a\ncase 1\u00a0\n\u00a0\u00a0 \u8bed\u53e5\u6bb51\u00a0\ncase 2\n\u00a0\u00a0 \u8bed\u53e5\u6bb52\n...\notherwise\u00a0\n\u00a0\u00a0 \u8bed\u53e5\u6bb5n\u00a0\nend \n</code></pre></p> </li> <li> <p>for\u5faa\u73af <pre><code>for k=1:100\n    \u8bed\u53e5\nend\n</code></pre></p> </li> </ol>"},{"location":"language/_matlab/#_5","title":"\u77e9\u9635","text":""},{"location":"language/_matlab/#_6","title":"\u521b\u5efa\u77e9\u9635","text":"<ul> <li>\u76f4\u63a5\u8f93\u5165\uff1a<code>A=[1,2;2,3;3,4]</code><ul> <li><code>;</code>\u8868\u793a\u6362\u884c</li> </ul> </li> <li>\u8f7d\u5165\u5916\u90e8\u6587\u4ef6</li> <li><code>load data.txt</code></li> <li>\u5185\u7f6e\u51fd\u6570\u521b\u5efa</li> <li>zeros(m,n):\u51680\u77e9\u9635</li> <li>rand(m.n):\u968f\u673a\u77e9\u9635</li> <li>eye(m,n):\u5355\u4f4d\u77e9\u9635</li> <li>\u66f4\u591a\u77e9\u9635\u8bf7\u67e5\u8868</li> </ul>"},{"location":"language/_matlab/#_7","title":"\u77e9\u9635\u5bfb\u8bbf","text":""},{"location":"language/_matlab/#_8","title":"\u8bbf\u95ee\u5355\u5143\u7d20","text":"<ul> <li>a[i,j]\u83b7\u53d6\u7b2ci\u884c\u7b2cj\u5217\u7684\u5143\u7d20</li> <li>\u7ebf\u6027\u4e0b\u6807\uff1a\u5bf9\u4e8em*n\u77e9\u9635\uff0c\u7b2cp\u884cq\u5217\u7684\u7ebf\u6027\u4e0b\u6807 \\(u=(q-1)*m+p\\)</li> </ul>"},{"location":"language/_matlab/#_9","title":"\u8bbf\u95ee\u591a\u5143\u7d20","text":"<ul> <li>H()</li> </ul>"},{"location":"language/_matlab/#_10","title":"\u77e9\u9635\u62fc\u63a5","text":""},{"location":"language/_matlab/#_11","title":"\u51fd\u6570","text":"<pre><code>% s\u662f\u8f93\u51fa\uff0cm\u662f\u8f93\u5165\n% \u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\u548c\u8f93\u51fa\nfunction[s]=M_Sum(m)\n[r c]=size(m);\ns=0;\nfor i=1:r\n    for j=1:c\n        s=s+m(i,j);\n    end;\nend;\n</code></pre> <p>\u628a\u8fd9\u4e2a\u6587\u4ef6\u4ee5<code>M_Sum</code>\u4fdd\u5b58\u5728\u5de5\u4f5c\u76ee\u5f55\u4e0b\uff0c\u4ee5\u540e\u5373\u53ef\u8c03\u7528</p>"},{"location":"language/_matlab/#_12","title":"\u56fe\u50cf","text":"<ul> <li>\u4e8c\u5ea6\u56fe\u50cf</li> <li>\u7070\u5ea6\u56fe\u50cf</li> <li>RGB\u56fe\u50cf</li> <li>8\u4f4d\u5f69\u8272\u56fe\u50cf\uff08\u7d22\u5f15\u56fe\u50cf\uff09</li> </ul>"},{"location":"language/_matlab/#_13","title":"\u6296\u52a8","text":"<ul> <li>\u6296\u52a8\u7b97\u6cd5\uff1a\u7528\u4e8c\u5143\u6253\u5370\u673a\uff08\u53ea\u80fd\u6253\u9ed1\u6216\u8005\u767d\uff09\u6253\u5370\u591a\u5143\u56fe\u50cf</li> <li>\u6296\u52a8\u77e9\u9635</li> </ul>"},{"location":"language/_matlab/#_14","title":"\u989c\u8272","text":""},{"location":"language/_matlab/#cmy-model","title":"CMY model","text":"<p>\u6253\u5370\u673a\u7528CMY\u989c\u8272\u6a21\u578b</p> <p>RGB\u4e0eCMY\u662f\u4e92\u8865\u7684\uff0c\u5373\uff08\u91cf\u5316\u52300~1\u4e4b\u95f4\uff09\uff1a \\([R G B]=[1,1,1]-[C,M,Y]\\) \\([C,M,Y]=[1,1,1]-[R,G,B]\\)</p>"},{"location":"language/_matlab/#_15","title":"\u56fe\u50cf\u70b9\u8fd0\u7b97","text":""},{"location":"language/_matlab/#_16","title":"\u56fe\u50cf\u6570\u636e\u7c7b\u578b","text":"<ul> <li>double\uff1a[0,1]\u4e4b\u95f4\u7684\u6d6e\u70b9\u6570</li> <li>uint8: [0,255]\u4e4b\u95f4\u7684\u6574\u6570</li> <li>\u53ef\u4ee5\u7528<code>im2double</code>\u548c<code>im2uint8</code>\u5b9e\u73b0\u8f6c\u5316</li> <li>rgb\u56fe\u50cf\u4e00\u822c\u4ee5uint8\u5f62\u5f0f\u50a8\u5b58\uff0c\u8ba1\u7b97\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u8f6c\u5316\u4e3adouble\u7c7b\u578b\uff0c\u518d\u8f6c\u56deuint8\u7c7b\u578b: <pre><code>b1=double(a)+0.006*double(a).*(255-double(a));\nimshow(uint8(b1));\n</code></pre></li> </ul>"},{"location":"language/_matlab/#hist","title":"\u76f4\u65b9\u56fe\uff08hist\uff09","text":""},{"location":"language/_matlab/#_17","title":"\u76f4\u65b9\u56fe\u5747\u8861\u5316","text":""},{"location":"language/_matlab/#_18","title":"\u76f4\u65b9\u56fe\u89c4\u5b9a\u5316","text":""},{"location":"language/_matlab/#_19","title":"\u76f8\u4f3c\u56fe\u50cf\u8bc6\u522b","text":""},{"location":"language/_python/","title":"python\u57fa\u7840","text":""},{"location":"language/_python/#_1","title":"\u53d8\u91cf\u548c\u6570\u636e\u7c7b\u578b","text":"<p>\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u548cC\u8bed\u8a00\u662f\u4e00\u6837\u7684\uff0c\u5373\u7531\u6570\u5b57\u4e0b\u5212\u7ebf\u548c\u5b57\u6bcd\u7ec4\u6210\uff0c\u4e0d\u80fd\u7528\u6570\u5b57\u5f00\u5934\u3002\u53d8\u91cf\u547d\u540d\u4e60\u60ef\u6027\u7528\u5c0f\u5199\u3002</p> <ul> <li>\u53ef\u53d8\u5bf9\u8c61\uff1a \u53ef\u4ee5\u539f\u5730\u4fee\u6539\u5bf9\u8c61\u7684\u503c\uff0c\u8fd1\u4f3c\u4e8eC\u8bed\u8a00\u7684\u6307\u9488\u3002\u6bd4\u5982\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u5165\u51fd\u6570\u5e76\u5728\u51fd\u6570\u5185\u6539\u53d8\u5176\u503c\u540e\uff0c\u5b83\u7684\u503c\u4f1a\u6c38\u4e45\u6027\u4fee\u6539\u3002\u5305\u62ec\u5217\u8868\uff0c\u5b57\u5178\uff0c\u96c6\u5408\u7b49</li> <li>\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1a \u6bd4\u5982\u4f20\u5165\u51fd\u6570\u53ea\u662f\u4f20\u5165\u5f62\u53c2\uff0c\u4e0d\u6539\u53d8\u5176\u503c\u3002\u5305\u62ec\u6570\u5b57\uff0c\u5143\u7ec4\u7b49</li> </ul>"},{"location":"language/_python/#_2","title":"\u5b57\u7b26\u4e32","text":"<p>\u5b57\u7b26\u4e32\u662f\u7531\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\uff0c\u8fd9\u79cd\u7075\u6d3b\u6027\u53ef\u4ee5\u4f7f\u5f97\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u5f15\u53f7\u548c\u6487\u53f7\u3002</p>"},{"location":"language/_python/#_3","title":"\u65b9\u6cd5","text":"<p>\u53ef\u4ee5\u4f7f\u7528 \u65b9\u6cd5(method) \u4fee\u6539\u5b57\u7b26\u4e32\uff1a <pre><code>name=\"hello world\"\nprint(name.title())   #\u9996\u5b57\u6bcd\u5927\u5199(Hello World)\nprint(name.upper())   #\u5168\u90e8\u5927\u5199(HELLO WORLD)\nprint(name.lower())   #\u5168\u90e8\u5c0f\u5199(hello world)\nprint(name.rstrip())  #\u6d88\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7a7a\u683c\nprint(name.lstrip())  #\u6d88\u9664\u5b57\u7b26\u4e32\u5f00\u5934\u7a7a\u683c\nprint(name.strip())   #\u6d88\u9664\u5b57\u7b26\u4e32\u4e24\u7aef\u7a7a\u683c\n</code></pre></p> <p>name\u540e\u7684<code>.</code>\u8868\u793a\u5bf9\u53d8\u91cfname\u6267\u884c\u64cd\u4f5c\uff0c\u540e\u9762\u7684\u62ec\u53f7\u63d0\u4f9b\u683c\u5916\u7684\u4fe1\u606f\uff0c\u6ca1\u6709\u683c\u5916\u4fe1\u606f\u5373\u4e3a\u7a7a\u62ec\u53f7</p>"},{"location":"language/_python/#_4","title":"\u5b57\u7b26\u4e32\u62fc\u63a5","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>+</code>\u6765\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\uff1a <pre><code>message=\"hello,\" + \" \" + \"world\" + \"!\"\nprint(message)\n#\u8f93\u51fa\uff1ahello, world!\n</code></pre></p>"},{"location":"language/_python/#_5","title":"\u7a7a\u767d","text":"<p>\u5728\u7f16\u7a0b\u4e2d\uff0c\u7a7a\u767d\u6cdb\u6307\u4efb\u4f55\u975e\u6253\u5370\u5b57\u7b26\uff0c\u5982\u7a7a\u683c\u3001\u5236\u8868\u7b26\u548c\u6362\u884c\u7b26\u3002\u4f60\u53ef\u4f7f\u7528\u7a7a\u767d\u6765\u7ec4\u7ec7\u8f93\u51fa\uff0c\u4ee5\u4f7f\u5176\u66f4\u6613\u8bfb</p> <ul> <li>\u6362\u884c <code>\\n</code> \uff0c\u5236\u8868 <code>\\t</code></li> <li>\u53ef\u4ee5\u4f7f\u7528 \u65b9\u6cd5 \u6765\u6d88\u9664\u7a7a\u767d</li> </ul>"},{"location":"language/_python/#_6","title":"\u6570\u5b57","text":"<ul> <li>\u6570\u5b57\u7c7b\u578b\u5305\u62ec\u6574\u6570\u548c\u6d6e\u70b9\u6570</li> <li><code>\\</code> \u5f97\u5230\u7684\u7ed3\u679c\u662f\u6d6e\u70b9\u6570\uff0c<code>\\\\</code> \u4e0eC\u8bed\u8a00\u4e2d\u7684<code>\\</code>\u76f8\u540c</li> <li><code>**</code> \u8868\u793a\u4e58\u65b9</li> <li><code>str</code> \u53ef\u4ee5\u5c06\u6570\u5b57\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\uff0c\u5982 <code>str(5+3)</code> \u5f97\u5230 \u201c8\u201d</li> </ul>"},{"location":"language/_python/#list","title":"\u5217\u8868\uff08list\uff09","text":"<p>\u5217\u8868\u662f\u7531 <code>[ ]</code> \u8868\u793a\uff0c\u5e76\u7528\u9017\u53f7\u5206\u9694\u5176\u4e2d\u7684\u5143\u7d20\u3002\u5217\u8868\u4e0b\u6807\u75310\u5f00\u59cb\uff0c\u7d22\u5f15\u65b9\u5f0f\u4e0eC\u8bed\u8a00\u76f8\u540c\u3002\u4e0d\u540c\u7684\u662f\uff0c\u53ef\u4ee5\u7528 -1 \u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c-2\u8bbf\u95ee\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\u2026\u2026</p> <p>\u5217\u8868\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\u7b49\u4efb\u610f\u7c7b\u578b</p> <p>\u5217\u8868\u63d2\u5165\u5143\u7d20\uff1a <pre><code>_list=['a','b']\n_list.append('c')   #\u5728\u672b\u5c3e\u63d2\u5165\n_list.insert(1,'c') #\u5728\u7d22\u5f15\u4e3a1\u5904\u63d2\u5165\uff0c_list=['a','c','b']\n</code></pre></p> <p>\u5217\u8868\u5220\u9664\u64cd\u4f5c\uff1a <code>del</code> \u5220\u9664\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20\uff1a <pre><code>_list=['a','b','c']\ndel _list[0]   # \u73b0\u5728_list=['b','c']\n</code></pre></p> <p><code>pop</code> \u5f39\u51fa\u6307\u5b9a\u7d22\u5f15\u5143\u7d20\uff0c\u76f8\u5f53\u4e8e\u5220\u9664\u5e76\u4f7f\u7528\u3002\u6ce8\u610f\uff0c\u9ed8\u8ba4\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u5373\u5217\u8868\u672b\u5c3e\u5143\u7d20\u3002 <pre><code>_list=['a','b','c']\nx=_list.pop()   # x='c',_list=['a','b']\n_list=['a','b','c']\ny=_list.pop(1)  # y='b',_list=['a','c']\n</code></pre></p> <p><code>remove</code> \u7528\u6765\u79fb\u9664\u5df2\u77e5\u5927\u5c0f\u4e0d\u77e5\u7d22\u5f15\u7684\u5143\u7d20\u3002\u6ce8\u610f\uff0cremove\u53ea\u4f1a\u79fb\u9664\u6700\u5148\u53d1\u73b0\u7684\u503c\uff0c\u5982\u679c\u6709\u91cd\u590d\u7684\uff0c\u5219\u4e0d\u4f1a\u79fb\u9664 <pre><code>_list=['b','a','b']\n_list.remove('b')   # \u73b0\u5728_list=['a','b']\n</code></pre></p>"},{"location":"language/_python/#_7","title":"\u5217\u8868\u6392\u5e8f","text":"<p>\u4f7f\u7528sort\u8fdb\u884c\u6c38\u4e45\u6392\u5e8f\uff1a</p> <p>sort\u5bf9\u5217\u8868\u7684\u4fee\u6539\u662f\u6c38\u4e45\u6027\u7684\u3002\u5982\u679c\u5217\u8868\u540c\u65f6\u542b\u6709\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u7b49\u7c7b\u578b\uff0c\u9700\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff08\u5982\u90fd\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\uff09\u518d\u6392\u5e8f <pre><code>_list.sort()  #\u6b63\u5e8f\n_list.sort(reverse=True)  #\u9006\u5e8f\n_list.sort(key=str)  #\u5c06\u6240\u6709\u5143\u7d20\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u6392\u5e8f\n</code></pre></p> <p>\u4f7f\u7528sorted\u8fdb\u884c\u4e34\u65f6\u6392\u5e8f</p> <p>sorted\u4e0d\u4f1a\u4fee\u6539\u539f\u5217\u8868\uff0c\u53ea\u662f\u5f97\u5230\u5bf9\u5e94\u7684\u7ed3\u679c <pre><code>sorted(_list)\n</code></pre></p> <p>\u5176\u4ed6 <pre><code>_list.reverse() #\u7ffb\u8f6c\u5217\u8868\nlen(_list)  #\u83b7\u53d6\u957f\u5ea6\n</code></pre></p>"},{"location":"language/_python/#_8","title":"\u5217\u8868\u904d\u5386","text":"<p>\u91c7\u7528for\u5faa\u73af\u904d\u5386\u5217\u8868\uff1a <pre><code>magicians = ['alice', 'david', 'carolina'] \nfor magician in magicians: \n    print(magician) \n</code></pre></p> <p>for\u5faa\u73af\u6bcf\u6b21\u4ece\u5217\u8868 <code>magicians</code> \u4e2d\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u50a8\u5b58\u5728\u53d8\u91cf   <code>magician</code> \u4e2d\u3002\u6ce8\u610f\u4e0d\u8981\u9057\u6f0ffor\u5faa\u73af\u540e\u7684\u5192\u53f7\u3002</p>"},{"location":"language/_python/#range","title":"range","text":"<p>range\u662f\u5de6\u95ed\u53f3\u5f00\u7684\uff0c\u53ef\u4ee5\u6307\u5b9a\u6b65\u957f: <pre><code>for value in range(0,6,2):\n    print(value)\n#\u8f93\u51fa\uff1a0 2 4\n</code></pre></p> <p><code>list()</code> \u53ef\u4ee5\u628a\u6570\u5b57\u8f6c\u5316\u4e3a\u5217\u8868\uff0c\u53ef\u4ee5\u7528range\u521b\u5efa\u6570\u503c\u5217\u8868\uff1a <pre><code>number=list(range(1,4))\n#number=[1,2,3]\n</code></pre></p> <p>\u5217\u8868\u89e3\u6790\uff1a\u5217\u8868\u89e3\u6790\u5c06for\u5faa\u73af\u548c\u521b\u5efa\u65b0\u5143\u7d20\u7684\u4ee3\u7801\u5408\u6210\u4e00\u884c\uff0c\u6ce8\u610f\u6b64\u65f6for\u5faa\u73af\u540e\u6ca1\u6709\u5192\u53f7\uff0c\u4f8b\u5982\uff1a <pre><code>squares=[value**2 for value in range(1,4)]\n# square=[1,4,9]\n</code></pre></p>"},{"location":"language/_python/#_9","title":"\u5207\u7247","text":"<p>\u5207\u7247\u662f\u5904\u7406\u5217\u8868\u4e2d\u7684\u90e8\u5206\u5143\u7d20\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u8d77\u59cb\u548c\u672b\u5c3e\u7d22\u5f15\uff08\u540c\u6837\u662f\u5de6\u95ed\u53f3\u5f00\uff09\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u8d77\u59cb\u7d22\u5f15\uff0c\u9ed8\u8ba4\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff1b\u82e5\u6ca1\u6709\u6307\u5b9a\u7ed3\u675f\u7d22\u5f15\uff0c\u9ed8\u8ba4\u5230\u6700\u540e\u4e00\u4e2a\u7ed3\u675f\u3002 <pre><code>_list=[1,2,3]\nprint(_list[:2])  # 1 2\nprint(_list[-2:]) # 2 3\n</code></pre></p> <p>\u7528\u4e8e\u5217\u8868\u662f\u53ef\u6539\u53d8\u5bf9\u8c61\uff08\u7c7b\u4f3c\u6307\u9488\uff09\uff0c\u5982\u679c\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u5219\u53ef\u4ee5\u540c\u65f6\u7701\u7565\u5f00\u5934\u672b\u5c3e\u6765\u590d\u5236\u5217\u8868\uff1a <pre><code>a=list(range(1,4))\na1=a[:] #a1\u662f\u53e6\u4e00\u4e2a\u526f\u672c\na2=a #a2\u548ca\u90fd\u662f\u6307\u5411\u539f\u5217\u8868\u7684\uff0c\u4fee\u6539a2\u4e5f\u4f1a\u6539\u53d8a\n</code></pre></p>"},{"location":"language/_python/#tuple","title":"\u5143\u7ec4\uff08Tuple\uff09","text":"<p>\u4f7f\u7528 <code>( )</code> \u8868\u793a\u5143\u7ec4\uff0c\u5176\u4ed6\u7279\u70b9\u4e0e\u5217\u8868\u7c7b\u4f3c\u3002\u4e0d\u540c\u7684\u662f\uff0c\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u53ef\u4fee\u6539</p>"},{"location":"language/_python/#dictionary","title":"\u5b57\u5178\uff08Dictionary\uff09","text":"<p>\u5b57\u5178\u662f\u4e00\u7cfb\u5217 \u952e(key)-\u503c(value) \u5bf9\u3002\u6bcf\u4e2a\u952e\u90fd\u4e0e\u4e00\u4e2a\u503c\u76f8\u5173\u8054\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u952e\u6765\u8bbf\u95ee\u4e0e\u4e4b\u76f8\u5173\u8054\u7684\u503c\u3002\u4e0e\u952e\u76f8\u5173\u8054\u7684\u503c\u53ef\u4ee5\u662f\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u5217\u8868\u4e43\u81f3\u5b57\u5178\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u5c06\u4efb\u4f55Python\u5bf9\u8c61\u7528\u4f5c\u5b57\u5178\u4e2d\u7684\u503c\u3002\u5b57\u5178\u7528 <code>{ }</code> \u8868\u793a,\u5bf9\u5e94\u7684key\u4e0evalue\u4e4b\u95f4\u7528\u5192\u53f7\uff0c\u5982\uff1a <pre><code>alien={'color':'green'}\nprint(alien['color'])  # \u8f93\u51fa\uff1agreen\n# \u6dfb\u52a0\u503c\nalien['number']=1      # alien={'color':'green','number':1}\n# \u5220\u9664\u503c\ndel alien['color']     # alien={'number':1}\n</code></pre></p>"},{"location":"language/_python/#_10","title":"\u904d\u5386\u5b57\u5178","text":"<p>\u904d\u5386\u952e\u503c\u5bf9:</p> <p>\u4f7f\u7528\u65b9\u6cd5items\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u952e\u503c\u5bf9\u7684\u5217\u8868\uff1a <pre><code># k is the key,v is the value\nfor k,v in dictionary.items():\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n</code></pre></p> <p>\u904d\u5386\u952e:</p> <p>\u4f7f\u7528\u65b9\u6cd5keys\uff0c\u8fd4\u56de\u952e\u7684\u5217\u8868\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u4e5f\u662f\u9ed8\u8ba4\u4e3a\u952e\u7684\u5217\u8868 <pre><code># k is the key\nfor k in dictionary.keys():\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n# \u7b49\u4ef7\uff1a\nfor k in dictionary:\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n</code></pre></p> <p>\u904d\u5386\u503c:</p> <p>\u4f7f\u7528\u65b9\u6cd5values\uff0c\u8fd4\u56de\u503c\u7684\u5217\u8868\u3002\u7531\u4e8e\u503c\u662f\u6709\u53ef\u80fd\u91cd\u590d\u7684\uff0c\u53ef\u4ee5\u91c7\u7528set\u6765\u5254\u9664\u91cd\u590d\u6027\u3002\u96c6\u5408\u7c7b\u4f3c\u5217\u8868\uff0c\u4f46\u6bcf\u4e2a\u5143\u7d20\u72ec\u4e00\u65e0\u4e8c\u3002 <pre><code># v is the value\nfor v in dictionary.values():\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n# \u5254\u9664\u91cd\u590d\u9879\nfor v in set(dictionary.values()):\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n</code></pre></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5b57\u5178\u83b7\u5f97\u5143\u7d20\u7684\u503c\u7684\u987a\u5e8f\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3002\u5982\u679c\u60f3\u8ba9\u904d\u5386\u7684\u503c\u6709\u987a\u5e8f\uff0c\u53ef\u4ee5\u7528sorted\uff1a <pre><code># v is the value\nfor v in sorted(dictionary.values()):\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n</code></pre></p>"},{"location":"language/_python/#_11","title":"\u63a7\u5236\u6d41\u8bed\u53e5","text":""},{"location":"language/_python/#if","title":"if\u8bed\u53e5","text":"<p>python\u4e2d\u7684\u5e03\u5c14\u8fd0\u7b97\u7b26\uff1aand,or,not\uff0c\u5bf9\u5e94C\u8bed\u8a00\u4e2d&amp;&amp;\uff0c||\u548c\uff01\u3002\u4e00\u822c\u7ed3\u6784\u4e3a <code>if-elif-else</code> \u6ce8\u610f\u4e0d\u8981\u6f0f\u6389if,elif,else\u540e\u7684\u5192\u53f7</p> <p>\u5224\u65ad\u5143\u7d20\u5728\u5217\u8868\u4e2d\u7528 <code>in</code> ;\u4e0d\u5728\u5217\u8868\u4e2d\u7528 <code>not in</code> \u3002 \u7a7a\u5217\u8868\u548c\u7a7a\u5b57\u7b26\u4e32\u4e5f\u662fFalse,\u7531\u4e8e\u7a7a\u5217\u8868\u4e5f\u662fFalse,\u6240\u4ee5\u53ef\u4ee5\u7528if\u8bed\u53e5\u5224\u65ad\u5217\u8868\u662f\u5426\u4e3a\u7a7a. <pre><code>number=[1,2,3,4]\nif number:\n    if 1 in number and 2 not in number:\n        print('1')\n    else:\n        print('0')\n</code></pre></p>"},{"location":"language/_python/#while","title":"while\u8bed\u53e5","text":"<p>\u53ef\u4ee5\u7528break\uff0ccontinue\u7b49\u63a7\u5236\u5faa\u73af</p>"},{"location":"language/_python/#_12","title":"\u8f93\u5165","text":"<p><code>input</code> \u5f97\u5230\u7ed9\u51fa\u63d0\u793a\u4fe1\u606f,\u5e76\u5c06\u7528\u6237\u8f93\u5165\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de\uff1a <pre><code>name=input('please input your name')\n</code></pre></p> <p>\u5982\u679c\u9700\u8981\u628a\u8f93\u5165\u4f5c\u4e3a\u6570\u5b57\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528<code>int()</code> \u4ee5\u53ca<code>float()</code> \u7b49\u8fdb\u884c\u8f6c\u5316</p>"},{"location":"language/_python/#_13","title":"\u51fd\u6570","text":"<p>\u51fd\u6570\u901a\u8fc7 <code>def</code> \u6765\u5b9a\u4e49\uff0c\u4f20\u53c2\u65f6\uff0c\u53ef\u4ee5\u7528\u4f4d\u7f6e\u5b9e\u53c2\uff08\u540cC\u8bed\u8a00\uff09\u548c\u5173\u952e\u5b57\u5b9e\u53c2\u7684\u65b9\u5f0f\uff08\u4f20\u53c2\u987a\u5e8f\u53ef\u6539\u53d8\uff09\uff0c\u53c2\u6570\u53ef\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff0c\u4f46\u672a\u8bbe\u9ed8\u8ba4\u503c\u7684\u5f62\u53c2\u5fc5\u987b\u653e\u524d\u9762\u3002\u51fd\u6570\u53ef\u4ee5\u6ca1\u6709return\uff0c\u5982\u679c\u6ca1\u6709return\u9ed8\u8ba4\u8fd4\u56deNone <pre><code>def pet(name,itstype='dog'):\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\"\"\"\u4ee5\u4e0b\u8f93\u51fa\u76f8\u540c\"\"\"\npet('jack')  #\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f7f\u7528\u9ed8\u8ba4\u503c\npet('jack','dog')  \npet(itstype='dog',name='jack') #\u5173\u952e\u5b57\u4f20\u53c2\uff0c\u53ef\u6362\u987a\u5e8f\n</code></pre></p> <p>\u5982\u679c\u60f3\u8981\u51fd\u6570\u4f20\u5165\u7684\u5217\u8868\u4e0d\u88ab\u4fee\u6539\uff0c\u53ef\u4ee5\u4f20\u5165\u526f\u672c\uff1a <pre><code>function(list_name(:))\n</code></pre></p> <p>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff1a</p> <p>\u4f7f\u7528<code>*argu_name</code> ,\u4f1a\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\uff0c\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570,\u5982\uff1a <pre><code>def function(*number): # \u5143\u7ec4\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nfunction('1','2','3')\n</code></pre></p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>**argu_name</code> ,\u4f1a\u521b\u5efa\u5b57\u5178\uff0c\u53ef\u4ee5\u7528\u6765\u4f20\u5165\u5173\u952e\u5b57\uff1a <pre><code>def function(**age): # \u5b57\u5178\n    for k,v in age.items():\n        print(k) #\u5173\u952e\u5b57\n        print(v) #\u503c\nfunction(jack='1',mary='2')\n</code></pre></p>"},{"location":"language/_python/#_14","title":"\u5bfc\u5165\u6a21\u5757","text":"<p>\u5bfc\u5165\u6574\u4e2a\u6a21\u5757: </p> <p>\u7528import\u5bfc\u5165\u6a21\u5757\uff0c\u7136\u540e\u7528<code>module_name.function_name()</code> \u7684\u5f62\u5f0f\u8c03\u7528\u6a21\u5757 \u5bfc\u5165\u7279\u5b9a\u51fd\u6570: </p> <p>\u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u7279\u5b9a\u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u51fd\u6570\uff0c</p> <p><code>from module_name inport function_name</code></p> <p>as\u6307\u5b9a\u522b\u540d\uff1a </p> <p>\u5982\u679c\u5bfc\u5165\u51fd\u6570\u540d\u592a\u957f\u6216\u8005\u4e0e\u73b0\u6709\u51fd\u6570\u51b2\u7a81\uff0c\u53ef\u4ee5\u7ed9\u51fd\u6570\u6307\u5b9a\u522b\u540d\u3002</p> <p><code>from module_name import function as f</code></p> <p>\u540c\u6837\u53ef\u4ee5\u7ed9\u6a21\u5757\u522b\u540d\u4ee5\u7b80\u5316\u3002</p> <p><code>import module_name as m</code></p> <p>\u5bfc\u5165\u6240\u6709\u51fd\u6570\uff1a</p> <p><code>from module_name import *</code></p>"},{"location":"language/_python/#_15","title":"\u7c7b","text":""},{"location":"language/_python/#_16","title":"\u7c7b\u7684\u521b\u5efa","text":"<p>\u7c7b\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff08\u7c7b\u4e2d\u7684\u51fd\u6570\u5373\u4e3a\u65b9\u6cd5\uff09\u3002\u7c7b\u7684\u540d\u79f0\u901a\u5e38\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u3002 <pre><code>class Myclass:\n    def __init__(self,name):\n        self.name=name\n    def itsname(self):  \n        print(self.name)\n    \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n</code></pre> \u5176\u4e2d\uff0c<code>__init__</code> \u65b9\u6cd5\u662f\u4e00\u4e2a\u9ed8\u8ba4\u7684\u65b9\u6cd5\uff0c\u4f1a\u5728\u521b\u5efa\u7c7b\u65f6\u81ea\u52a8\u8c03\u7528\uff1b<code>self</code> \u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411\u5b9e\u4f8b\u672c\u8eab\u7684\u5f15\u7528\uff0c\u8ba9\u5b9e\u4f8b\u80fd\u591f\u8bbf\u95ee\u7c7b\u4e2d\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0cself\u4f1a\u81ea\u52a8\u4f20\u9012\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u4f20\u9012\u5b83\uff0c\u4f46\u6ce8\u610f\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5fc5\u987b\u4f20\u5165self\u53c2\u6570\u3002</p>"},{"location":"language/_python/#_17","title":"\u7c7b\u7684\u4f7f\u7528","text":"<p>init\u65b9\u6cd5\u867d\u7136\u6ca1\u6709\u663e\u793a\u7684return\uff0c\u4f46\u4f1a\u81ea\u52a8\u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u8fd4\u56de\u793a\u4f8b\u5b58\u5728 <code>my_class</code> \u8fd9\u4e2a\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\u53ef\u4ee5\u53e5\u70b9\u6765\u83b7\u53d6\u8fd9\u4e2a\u5b9e\u4f8b\u5728\u7c7b\u4e2d\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a <pre><code>my_class=Myclass('jack')  #\u4f20\u7ed9init\u7684\u53c2\u6570\nprint(my_class.name)  #\u83b7\u53d6\u5c5e\u6027name\nmy_class.itsname()  #\u8c03\u7528\u65b9\u6cd5itsname\n</code></pre></p> <p>\u60f3\u8981\u4fee\u6539\u5c5e\u6027\u7684\u503c\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5b9e\u4f8b\uff08\u5373\u53e5\u70b9\u8868\u793a\uff09\u6765\u4fee\u6539\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u4e2d\u8bbe\u7f6e\u4fee\u6539\u7684\u65b9\u6cd5</p>"},{"location":"language/_python/#_18","title":"\u7ee7\u627f","text":"<p>\u4e00\u4e2a\u7c7b\u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b\u65f6\uff0c\u5b83\u5c06\u81ea\u52a8\u83b7\u5f97\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff1b\u539f\u6709\u7684\u7c7b\u79f0\u4e3a\u7236\u7c7b\uff0c\u800c\u65b0\u7c7b\u79f0\u4e3a\u5b50\u7c7b\u3002\u5b50\u7c7b\u7ee7\u627f\u4e86\u5176\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u4ee5\u53ca\u4fee\u6539\u7236\u7c7b\u3002\u5b9a\u4e49\u5b50\u7c7b\u65f6\u9700\u5728\u62ec\u53f7\u4e2d\u6307\u51fa\u7236\u7c7b\uff0c\u6ce8\u610f\u5b50\u7c7b\u7684\u65b9\u6cd5<code>__init__</code> \u901a\u8fc7 <code>super()</code> \u4e0e\u7236\u7c7b\u8054\u7cfb\u3002\u4f8b\u5982\uff1a <pre><code>'''\u7236\u7c7b'''\nclass Restaurant:\n    def __init__(self,restaurant_name):\n        self.restaurant_name=restaurant_name\n    def show(self):\n        print('\u672a\u4fee\u6539')\n'''\u5b50\u7c7b'''\nclass IceCreamStand(Restaurant):\n#\u6ce8\u610f__init__\u7684\u533a\u522b\n    def __init__(self,restaurant_name):\n        super().__init__(restaurant_name)\n        self.flavors='good'\n#\u4fee\u6539\u7236\u7c7b\u7684\u65b9\u6cd5\n    def show(self):\n        print('\u4fee\u6539')\n</code></pre></p> <p>\u5982\u679c\u5b50\u7c7b\u6dfb\u52a0\u7684\u7ec6\u8282\u8fc7\u591a\uff0c\u53ef\u4ee5\u628a\u4ed6\u4eec\u5c01\u88c5\u5728\u65b0\u7684\u7c7b\u4e2d\uff0c\u5e76\u5c06\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u7528\u4f5c\u8be5\u5b50\u7c7b\u7684\u4e00\u4e2a\u5c5e\u6027</p>"},{"location":"language/_python/#_19","title":"\u6587\u4ef6","text":"<p>\u8bfb\uff1a \u5173\u952e\u5b57with\u5728\u4e0d\u518d\u9700\u8981\u8bbf\u95ee\u6587\u4ef6\u540e\u5c06\u5176\u5173\u95ed\u3002read()\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\u3002 <pre><code>with open('filepath') as file_object:\n    contents=file_object.read()\n    lines=file_object.readline() #\u9010\u884c\u8bfb\u53d6\n</code></pre></p> <p>\u5199\uff1a \u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u5199\u5165\uff0c\u5982\u679c\u5199\u5165\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u51fd\u6570open()\u5c06\u81ea\u52a8\u521b\u5efa\u5b83.</p> <p>\u4f7f\u7528\u5173\u952e\u5b57w,\u5199\u5165\u7684\u5185\u5bb9\u4f1a\u8986\u76d6\u539f\u5185\u5bb9\uff1b\u4f7f\u7528\u5173\u952e\u5b57a,\u5199\u5165\u7684\u5185\u5bb9\u52a0\u5230\u539f\u5185\u5bb9\u540e\u9762\u3002 <pre><code>with open(filepath, 'w') as file_object: \n     file_object.write(\"python\\n\") \n</code></pre></p>"},{"location":"language/_python/#_20","title":"\u5f02\u5e38","text":"<p>\u6bcf\u5f53\u7a0b\u5e8f\u51fa\u9519\u65f6\uff0cpython\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u672a\u5bf9\u5f02\u5e38\u8fdb\u884c\u5904\u7406\uff0c\u7a0b\u5e8f\u5c06\u505c\u6b62\uff0c\u5e76\u663e\u793a\u4e00\u4e2atraceback\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u5f02\u5e38\u7684\u62a5\u544a\u3002\u4f7f\u7528 <code>try-except</code> \u4ee3\u7801\u5757\u53ef\u4ee5\u8ba9Python\u6267\u884c\u6307\u5b9a\u7684\u64cd\u4f5c\uff0c\u5373\u4fbf\u51fa\u73b0\u5f02\u5e38\uff0c\u7a0b\u5e8f\u4e5f\u5c06\u7ee7\u7eed\u8fd0\u884c\uff0c\u540c\u65f6\u663e\u793a\u4f60\u7f16\u5199\u7684\u53cb\u597d\u7684\u9519\u8bef\u6d88\u606f\uff0c\u800c\u4e0d\u662f\u4ee4\u7528\u6237\u8ff7\u60d1\u7684\u62a5\u9519\u3002\u4ee5\u4e0b\u662f\u5904\u7406\u9664\u6570\u4e3a0\u7684\u9519\u8bef\u7684\u793a\u4f8b\uff1a <pre><code>try: \n    answer = x/y \nexcept ZeroDivisionError: \n    print(\"You can't divide by 0!\") \n    # \u4e5f\u53ef\u4ee5\u4f7f\u7528pass\u8ba9\u7a0b\u5e8f\u4e0d\u663e\u793a\u4efb\u4f55\u62a5\u9519\u4fe1\u606f\u800c\u7ee7\u7eed\u6267\u884c\nelse: \n    print(answer) \n</code></pre></p>"},{"location":"oop/","title":"Index","text":"<p>Note</p> <p>\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u8bed\u8a00:cpp</p>"},{"location":"oop/intro/","title":"\u57fa\u672c\u77e5\u8bc6","text":""},{"location":"oop/intro/#_2","title":"\u5f15\u7528","text":"<p>\u5f15\u7528\u53ef\u4ee5\u770b\u6210\u53d8\u91cf\u7684\u522b\u540d\uff0c\u4ed6\u5fc5\u987b\u521d\u59cb\u5316\u4e14\u4e0d\u80fd\u66f4\u6539\u7ed1\u5b9a\u7684\u53d8\u91cf\u3002\u5f15\u7528\u4f1a\u5728\u7f16\u8bd1\u5668\u4f18\u5316\u540e\u4e0d\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u3002 <pre><code>int a=0;\nint&amp; ref=a;\nref=10;\n</code></pre></p> <p>\u5f15\u7528\u5e38\u7528\u4e8e\u51fd\u6570\u4f20\u53c2\uff0c\u6bd4\u6307\u9488\u66f4\u7b80\u6d01\u5b89\u5168\uff1a <pre><code>void f(int&amp; a){\n    a++;\n}\nint main(){\n    int a=1;\n    f(a);\n}\n</code></pre></p> <p>\u5f15\u7528\u4f9d\u8d56\u4e8e\u7ed1\u5b9a\u7684\u5bf9\u8c61\uff0c\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e0d\u80fd\u91cd\u65b0\u7ed1\u5b9a\uff1b\u5411\u53c2\u6570\u4e3a\u5f15\u7528\u7684\u51fd\u6570\u4f20\u53c2\u65f6\uff0c\u4e0d\u80fd\u4f20\u8868\u8fbe\u5f0f\uff1b\u5bf9\u6570\u7ec4\u6ca1\u6709\u5f15\u7528</p>"},{"location":"oop/intro/#_3","title":"\u53d8\u91cf\u4f5c\u7528\u57df","text":""},{"location":"oop/intro/#global-variable","title":"global variable","text":"<p>\u5168\u5c40\u53d8\u91cf\u662f\u6240\u6709\u51fd\u6570\u4e4b\u5916\u7684\u58f0\u660e\uff0c\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\uff1b</p> <p>\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\u5219\u9ed8\u8ba4\u4e3a0\uff1b</p> <p>\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u90fd\u653e\u5728code\u6bb5</p>"},{"location":"oop/intro/#local-variable","title":"local variable","text":"<p>\u4fdd\u5b58\u5728\u6808\u4e0a\uff0c\u51fd\u6570\u8c03\u7528\u5b8c\u540e\u4f1a\u6e05\u9664\u6389\u3002</p>"},{"location":"oop/intro/#static","title":"static","text":"<p>static\u76f8\u5f53\u4e8e\u9650\u5b9a\u4f7f\u7528\u8303\u56f4\uff0c\u53ea\u6709\u5f53\u524d\u7f16\u8bd1\u5355\u5143\uff08\u5373\u5f53\u524dcpp\u6587\u4ef6\uff09\u53ef\u4ee5\u4f7f\u7528\u3002</p>"},{"location":"oop/intro/#static-local-variable","title":"static local variable","text":"<p>\u4ec5\u9650\u58f0\u660e\u4ed6\u7684\u51fd\u6570\u5185\u90e8\u8bbf\u95ee</p> <p>\u4e0elocal var\u4e0d\u540c\u7684\u662f\u4ed6\u7684\u503c\u662f\u6c38\u8fdc\u4fdd\u5b58\u7684\uff0c\u8fd9\u70b9\u66f4\u50cf\u5168\u5c40\u53d8\u91cf\u3002</p>"},{"location":"oop/intro/#static-global-variable","title":"static global variable","text":"<p>\u5185\u90e8\u94fe\u63a5\uff0c\u53ea\u80fd\u7531\u5f53\u524dcpp\u6587\u4ef6\u8bbf\u95ee</p>"},{"location":"oop/intro/#extern","title":"extern","text":"<p>\u7528\u4e8e\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u6216\u51fd\u6570\uff0c\u8868\u793a\u5176\u5b9a\u4e49\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u4e0d\u62a5\u9519</p>"},{"location":"oop/intro/#const","title":"const","text":"<pre><code>//\u4e0b\u9762\u8fd9\u4e24\u79cd\u65e2\u53ef\u4ee5\u6307\u5411\u53d8\u91cf\u4e5f\u53ef\u4ee5\u6307\u5411\u5e38\u91cf\nconst string* cp;      //\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u53d8\nstring const* cp;    //\u4e5fconst string\u7b49\u4ef7\n\n//\u53ea\u80fd\u6307\u5411\u53d8\u91cf\uff0c\u4e0d\u80fd\u6307\u5411\u5e38\u91cf\uff1a\nstring* p;\nstring *const p;       //\u6307\u9488\u4e0d\u80fd\u6539\uff0c\u6307\u5411\u7684\u5185\u5bb9\u53ef\u4ee5\u6539\n</code></pre> <p>\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\u5b9e\u9645\u662f\u5e38\u91cf\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u5b58\u5728data\u6bb5\u91cc\u662f\u53ea\u8bfb\u7684\uff1a</p> <pre><code>char* s1=\"hello\";\n//\u7b49\u4ef7\u4e8e const char* s1\n//\u7b49\u4ef7\u4e8e const char s1[]\ns1[0]='a';//Error!!!\n\nchar s2[]=\"hello\"; //\u5b57\u7b26\u4e32\u88abcopy\u5230\u6808\u4e0a\uff0c\u53ef\u4ee5\u6539\ns2[0]='a'; //ok\n</code></pre> <p>\u6c38\u8fdc\u53ef\u4ee5\u628a\u975e\u5e38\u91cf\u53d8\u91cf\u5f53\u6210\u5e38\u91cf\u6765\u5bf9\u5f85\uff08\u5373\u4e0d\u6539\u53d8\u4ed6\uff09\uff0c\u4f46\u662f\u4e0d\u80fd\u628a\u5e38\u91cf\u4f5c\u4e3a\u53d8\u91cf\u770b\uff0c\u9664\u975e\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff08\u4e0d\u63a8\u8350\uff09\u3002</p>"},{"location":"oop/intro/#_4","title":"\u5934\u6587\u4ef6","text":"<p>\u5934\u6587\u4ef6\u907f\u514d\u91cd\u590d\uff0c\u53ef\u4ee5\u7528\u548cC\u8bed\u8a00\u4e00\u6837\u7684\u65b9\u6cd5\uff1a <pre><code>#ifndef __A_H__\n#define __A_H__\n//...\n#endif\n</code></pre></p> <p>\u66f4\u597d\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u79cd\u7f16\u8bd1\u7684\u63a7\u5236\u5f00\u5173\uff1a <pre><code>#pragma once\n</code></pre></p> <p>\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u547d\u540d\u7a7a\u95f4,\u907f\u514d\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\u4ea7\u751f\u51b2\u7a81\uff1a</p> <pre><code>namespace my_namespace{\n    void f(){\n    //...\n    }\n}\n\n//\u5728main.cpp\u4e2d\nusing my_namespace:: f;\n</code></pre>"},{"location":"oop/intro/#_5","title":"\u52a8\u6001\u5206\u914d\u5185\u5b58","text":""},{"location":"oop/intro/#newdelete","title":"new\u548cdelete","text":"<p>\u901a\u8fc7new\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u5728heap\u4e0a\uff1b</p> <p>\u6ce8\u610f\u533a\u5206\uff1a <code>( )</code> \u8868\u793a\u521d\u59cb\u5316\u7684\u503c\uff0c<code>[ ]</code> \u8868\u793a\u6570\u91cf\uff0c\u5982\uff1a</p> <pre><code>int* p=new int(10);  //\u5206\u914d\u4e00\u4e2a\u5730\u5740\u5e76\u521d\u59cb\u5316\u4e3a10\nint* r=new int[10]; //\u5206\u914d\u5341\u4e2a\u5730\u5740\uff08\u7c7b\u4f3c\u6570\u7ec4\uff09\nint* q=new int[10]();  //10\u4e2a\u521d\u59cb\u5316\u4e3a0\n\ndelete p;\ndelete[] r;\ndelete[] q;\n</code></pre> <p>\u6ce8\u610f\u540c\u4e00\u5757\u5185\u5b58\u53ea\u80fddelete\u4e00\u6b21\uff1b\u5982\u679c\u662f\u7a7a\u6307\u9488\uff0c\u53ef\u4ee5delete\u4f46\u4e0d\u4f1a\u6709\u4efb\u4f55\u6548\u679c\u3002</p> <p>\u6ce8\u610f\u6b63\u786e\u5339\u914d new/delete \u548c new[ ]/delete[ ]\uff0c\u5f53\u5206\u914d\u4e86\u591a\u5757\u5730\u5740\u65f6\uff0c\u4e00\u5b9a\u8981\u7528<code>delete []</code> \u6765\u91ca\u653e\u5185\u5b58\u3002</p>"},{"location":"oop/intro/#mallocfree","title":"\u4e0emalloc\u548cfree\u7684\u533a\u522b","text":"<p>\u5f53\u5206\u914d\u5185\u5b58\u7ed9\u7c7b\u6216\u7ed3\u6784\u4f53\u65f6\uff0cnew\u4f1a\u9996\u5148\u8c03\u7528\u4e00\u904d\u6784\u9020\u51fd\u6570\uff1b\u5f53\u91ca\u653e\u5185\u5b58\u65f6\uff0cdelete\u4e5f\u4f1a\u9996\u5148\u8c03\u7528\u6790\u6784\u51fd\u6570\uff08\u6ce8\u610f\u6790\u6784\u51fd\u6570\u8c03\u7528\u987a\u5e8f\u4e0e\u6784\u9020\u51fd\u6570\u76f8\u53cd\uff0c\u662f\u53cd\u7740\u6765\u7684\uff09\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u7528<code>delete[ ]</code> \u7684\u539f\u56e0.\u800cmalloc\u548cfree\u53ea\u8d1f\u8d23\u5206\u914d\u6307\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0d\u4f1a\u53bb\u8c03\u7528\u6784\u9020\u6216\u8005\u6790\u6784\u51fd\u6570\u3002</p> <p>delete\u662f\u600e\u4e48\u77e5\u9053\u8981\u91ca\u653e\u591a\u5c11\u5757\u5185\u5b58\u7684\u5462\uff1f\u5728\u5206\u914d\u5185\u5b58\u7684\u5934\u5730\u5740\u4e4b\u524d\uff0c\u7cfb\u7edf\u8fd8\u4f1a\u5206\u914d\u4e00\u90e8\u5206\u5185\u5b58\u7528\u6765\u5b58\u50a8\u5206\u914d\u7684\u4e2a\u6570\uff0cdelete\u901a\u8fc7\u8fd9\u4e2a\u77e5\u9053\u8be5\u91ca\u653e\u591a\u5c11\u5185\u5b58\u4ee5\u53ca\u8c03\u7528\u591a\u5c11\u6b21\u6790\u6784\u51fd\u6570</p>"},{"location":"oop/slt/","title":"STL","text":"<p>\u6807\u51c6\u6a21\u677f\u5e93\u3002</p> <p>\u5206\u7c7b\uff1a</p> <ul> <li>sequential</li> <li>array<ul> <li>vector</li> <li>deque</li> <li>forward_list</li> <li>list</li> </ul> </li> <li>associative,\u591a\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0<ul> <li>set</li> <li>map</li> <li>multiset,multimap</li> </ul> </li> <li>unordered associative,\u54c8\u5e0c\u8868\u5b9e\u73b0</li> <li>adaptors<ul> <li>stack,queue,priority_queue...</li> </ul> </li> </ul>"},{"location":"oop/slt/#vector","title":"vector","text":""},{"location":"oop/slt/#access","title":"access","text":"<ul> <li>front\u8fd4\u56de\u7b2c\u4e00\u4e2a\uff0cback\u8fd4\u56de\u7b2c\u4e8c\u4e2a</li> <li>data\u7528\u4e8e\u83b7\u53d6\u5bb9\u5668\u5e95\u5c42\u50a8\u5b58\u6570\u636e\u7684\u6307\u9488</li> </ul>"},{"location":"oop/slt/#at","title":"at\u548c [ ]","text":"<p>\u4e8c\u8005\u7684\u7528\u6cd5\u90fd\u662f\u4f20\u5165\u8bbf\u95ee\u7684\u7d22\u5f15\uff0c\u8fd4\u56de\u8be5\u4f4d\u7f6e\u7684\u5143\u7d20\u3002</p> <p>\u4e0d\u540c\u7684\u662f\uff0cat\u4f1a\u68c0\u6d4b\u7d22\u5f15\u662f\u5426\u8d85\u51fa\u5bb9\u5668\u8303\u56f4\uff0c\u800coperator [ ]\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u4e3a\u4e86\u9632\u6b62\u8d8a\u754c\uff0c\u591a\u7528push_back\u548cresize</p> <pre><code>vector&lt;int&gt; vec={1,2,3};\nint element=vec[2];//3\nint element=vec.at(2);//3\n</code></pre>"},{"location":"oop/slt/#_1","title":"\u8fed\u4ee3\u5668","text":"<p>\u7c7b\u4f3c\u6570\u7ec4\u7684\u8bbf\u95ee\uff1a <pre><code>for(int i=0;i&lt;a.size();i++){}\n</code></pre></p> <p>\u53ef\u4ee5\u7528\u8fed\u4ee3\u5668\u8bbf\u95ee,\u8fed\u4ee3\u5668\u7c7b\u4f3c\u4e8e\u6307\u9488\uff0c\u9996\u5148\u5b9a\u4e49\u8fed\u4ee3\u5668\u53d8\u91cf\u7136\u540e\u4f7f\u7528\u4ed6\uff0cbegin(),end()\u7b49\u65b9\u6cd5\u8fd4\u56de\u7684\u90fd\u662f\u8fed\u4ee3\u5668\u3002</p> <pre><code>for(vector&lt;int&gt;::iterator it = a.begin();it&lt;a.end();it++){\n    cout&lt;&lt;*it;\n}\n/* \u53ef\u4ee5\u76f4\u63a5\u628a\u7c7b\u578b\u7b80\u5316\u4e3aauto */\n//for(auto it = a.begin();it&lt;a.end();it++)\n\n/* \u66f4\u7b80\u5355\u7684\uff1a */\n//for(int i : a){cout &lt;&lt;i};\n</code></pre>"},{"location":"oop/slt/#capacity","title":"capacity","text":"<ul> <li>empty</li> <li>size,capacity</li> <li>reserve:\u9884\u5206\u914d\u5bb9\u5668\u5bb9\u91cf\uff0c\u4e0d\u6539\u53d8size\u53ea\u6539\u53d8capacity<ul> <li>\u5982\uff1avec.reserve(10);</li> </ul> </li> </ul>"},{"location":"oop/slt/#modifiers","title":"modifiers","text":"<pre><code>vector&lt;int&gt; a;\n\na.push_back(2);\n\na.insert(a.begin()+4,5,10); //\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u63d2\u5165\u6570\u91cf\uff08\u53ef\u7701\u7565\uff09\uff0c\u63d2\u5165\u5143\u7d20\n\na.clear(); //\u6e05\u7a7a\u5bb9\u5668\uff0c\u5373size\u6e05\u96f6\n\na.erease(a.begin()+4);  //\u5220\u9664\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u540e\u9762\u7684\u5143\u7d20\u4f1a\u81ea\u52a8\u8865\u4e0a\u6765\n</code></pre>"},{"location":"oop/slt/#map","title":"map","text":"<p>\u662f\u952e\u503c\u5bf9\uff0c\u7531\u4e8e\u5e95\u5c42\u662f\u7ea2\u9ed1\u6811\uff0c\u4f1a\u81ea\u52a8\u6392\u597d\u5e8f\u3002</p> <p>\u5faa\u73af\u904d\u5386\uff1a</p> <pre><code>for(const auto&amp; pair: my_map){\n  cout&lt;&lt; pair.first &lt;&lt; pair.second;\n}\n\nfor(const auto&amp; [word,cnt]:word_map){};\n</code></pre> <p>\u6ce8\u610f<code>[ ]</code> \u8fd9\u4e2a\u64cd\u4f5c\u7b26\uff0c\u5f53\u6211\u4eec\u67e5\u627e\u7684key\u503c\u5728map\u91cc\u9762\u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u67e5\u627e\u64cd\u4f5c\uff1b\u4f46\u662f\u5982\u679ckey\u503c\u4e0d\u5728map\u91cc\uff0c\u4f1a\u81ea\u52a8\u5c06\u8fd9\u4e2akey\u6dfb\u52a0\u5230map\u91cc\u5e76\u628a\u5bf9\u5e94\u503c\u521d\u59cb\u5316\u4e3a0.\u68c0\u67e5\u662f\u5426\u5305\u542b\uff1amap.contains(key)</p> <p>\u4f8b\u5982\u8bbe\u8ba1\u4e00\u4e2a\u8bcd\u9891\u7edf\u8ba1\u5668\uff1a</p> <pre><code>map&lt;string,int&gt; word_map;\nfor(const auto&amp; w: {\"word1\",\"word2\",\"word1\"}){\n  word_map[w]++;\n}\n</code></pre>"},{"location":"oop/slt/#algorithm","title":"algorithm","text":"<p>works on a range defined as [first,last).\u5de6\u95ed\u53f3\u5f00\u3002</p> <ul> <li>for_each,find,count</li> <li>sort</li> <li>min_element,max_element</li> </ul>"},{"location":"oop/slt/#_2","title":"\u5176\u4ed6","text":""},{"location":"oop/slt/#copy","title":"copy","text":"<p>copy\u7684\u4f7f\u7528,\u6ce8\u610f\u5f53\u6ca1\u6709\u5b9a\u4e49u\u7684\u957f\u5ea6\u65f6\uff0ccopy\u4f20\u5165\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e0d\u80fd\u4f7f\u7528u.begin(),\u800c\u5e94\u8be5\u7528\u5176\u4ed6\u8fed\u4ee3\u5668\uff0c\u5426\u5219\u4f1a\u6ea2\u51fa\uff1a</p> <pre><code>vector&lt;int&gt; v={1,2,3,4};\nvecotr&lt;int&gt; u;\ncopy(v.begin(),v.end(),back_inserter(u));  //1,2,3,4\ncopy(v.begin(),v.end(),front_inserter(u)); //4,3,2,1\n\ncopy(u.begin(),u.end(),ostream_iterator&lt;int&gt;(cout,\",\"));\n</code></pre>"},{"location":"oop/slt/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>erase\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e2a\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u800c\u4e0d\u80fd\u7ee7\u7eed\u7528\u539f\u6765\u7684\uff0c\u56e0\u4e3a\u539f\u6765\u7684\u5df2\u7ecferase\u6389\u4e86</li> <li>\u7528empty\uff08\uff09\u5224\u65ad\u6bd4size()=0\u5224\u65ad\u66f4\u5feb</li> </ol>"},{"location":"system/system1/","title":"System1","text":""},{"location":"system/system1/#_1","title":"\u8ba1\u903b\u90e8\u5206","text":""},{"location":"system/system1/#_2","title":"\u8ba1\u7ec4\u90e8\u5206","text":""},{"location":"tools/_git/","title":"git","text":"<p>Note</p> <p>\u4e00\u4e9b\u5173\u4e8egit\u7684\u57fa\u672c\u77e5\u8bc6</p> <p>\u53c2\u8003</p>"},{"location":"tools/_git/#_1","title":"\u5de5\u4f5c\u533a\u3001\u6682\u5b58\u533a\u4e0e\u672c\u5730\u4ed3\u5e93","text":"<p>\u5de5\u4f5c\u533a\uff08working directory\uff09\u662f\u7535\u8111\u672c\u5730\u7684\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u53ef\u4ee5\u968f\u610f\u4fee\u6539\uff0c\u6216\u8005\u8bf4\uff0c\u4f60\u4fee\u6539\u7684\u6587\u4ef6\u603b\u662f\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u3002</p> <p>\u901a\u8fc7<code>git add</code> \u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff08stage\uff09\u3002\u901a\u8fc7<code>git mv</code> \u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u4ef6\u91cd\u547d\u540d\u6216\u79fb\u52a8\u540e\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u3002</p> <p>\u901a\u8fc7<code>git commit -m 'commend'</code> \u6765\u628a\u6682\u5b58\u533a\u6240\u6709\u6dfb\u52a0/\u4fee\u6539\u653e\u5165\u672c\u5730\u4ed3\u5e93\u3002</p> <p><code>git status</code> \u67e5\u770b\u5404\u4e2a\u533a\u7684\u72b6\u6001\u3002</p> <p>\u901a\u8fc7<code>git log</code> \u53ef\u4ee5\u67e5\u770b\u4e4b\u524d\u6240\u6709commit\u7684\u4fe1\u606f\uff08q\u9000\u51fa\uff09\uff0c\u540c\u65f6\u53ef\u4ee5\u770b\u5230\u5404\u4e2acommit\u7684\u7248\u672c\u53f7\u3002\u901a\u8fc7 <code>git reset --hard &lt;commit&gt;</code>\uff08<code>&lt;commit&gt;</code>\u6307\u7248\u672c\u53f7\uff09\u53ef\u4ee5\u56de\u9000\u5230\u6307\u5b9a\u7248\u672c\u5e76\u5220\u9664\u4e4b\u540e\u7684commit\u3002</p>"},{"location":"tools/_git/#_2","title":"\u5355\u4eba\u5de5\u4f5c\u6d41\u7a0b","text":""},{"location":"tools/_git/#_3","title":"\u521d\u59cb\u5316","text":"<p>\u5148\u521d\u59cb\u5316 <code>git init</code></p> <p>\u7136\u540e\u5173\u8054\u8fdc\u7a0b\u4ed3\u5e93 <code>git remote add origin git@github.com:zhz235/git-practice.git</code></p> <p>\u628amaster\u5206\u652f\u6539\u540d\u4e3amain\u5206\u652f\uff08\u63a8\u8350\uff09 <code>git branch -M main</code></p>"},{"location":"tools/_git/#git-pull","title":"git pull","text":"<p><code>git pull</code>=<code>git fetch</code> + <code>git merge</code>\uff0c\u7528\u4e8e\u62c9\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u3002</p> <p>\u4f7f\u7528 <code>git push -u origin main</code> \u62c9\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u3002</p>"},{"location":"tools/_git/#_4","title":"\u5206\u652f","text":"<ol> <li> <p><code>git branch -c &lt;branch-name&gt;</code> \u521b\u5efa\u65b0\u5206\u652f\u3002</p> </li> <li> <p><code>git switch &lt;branch-name&gt;</code> \u79fb\u52a8\u5230\u65b0\u5206\u652f\u3002</p> </li> </ol> <ul> <li><code>git branch</code> \u67e5\u770b\u5206\u652f\u4fe1\u606f\u548c\u76ee\u524d\u6240\u5728\u5206\u652f\u3002</li> </ul> <ol> <li>\u5207\u56demain\u5206\u652f : <code>git switch main</code></li> <li>\u4e0e\u539f\u5206\u652f\u5408\u5e76\uff1a<code>git merge</code></li> <li>\u5220\u9664\u65b0\u5efa\u7684\u5206\u652f\uff1a<code>git branch -d &lt;branch-name&gt;</code></li> </ol>"},{"location":"tools/_git/#_5","title":"\u63d0\u4ea4","text":"<p><code>git push -u origin main</code> \u63d0\u4ea4\u4fee\u6539\u5230GitHub\u4ed3\u5e93</p>"},{"location":"tools/_git/#_6","title":"\u53d6\u6d88\u5173\u8054","text":"<p><code>git remote -v</code> \u67e5\u770b\u5173\u8054\u7684\u4ed3\u5e93</p> <p><code>git remote remove origin</code> \u53d6\u6d88\u5173\u8054</p>"},{"location":"tools/_git/#_7","title":"\u591a\u4eba\u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u67d0\u4e9b\u5927\u9879\u76ee\u53ef\u80fd\u6ca1\u6709\u4ed3\u5e93\u5199\u5165\u6743\u9650\u3002TODO</p>"}]}